

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (17 May 2021 19:10:33) as D:\Admin\Descargas\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\Joaquin\Desktop\GitHub\Algos3_Mendez_Prada_Valsagna\CodigoRepetido-Ejercicio.st----!

!classRemoval: #CustomerBook stamp: 'JP 5/17/2021 19:12:18'!
Object subclass: #CustomerBook
	instanceVariableNames: 'suspended active'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #CustomerBookTest stamp: 'JP 5/17/2021 19:12:19'!
TestCase subclass: #CustomerBookTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #NotFound stamp: 'JP 5/17/2021 19:12:19'!
Error subclass: #NotFound
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #CantSuspend stamp: 'JP 5/17/2021 19:12:19'!
Error subclass: #CantSuspend
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

----QUIT----(17 May 2021 19:12:24) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (9 July 2021 18:19:34) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


----End fileIn of D:\Admin\Descargas\07-ServiciosFinancieros\ServiciosFinancieros-Solucion-Extra.st----!

TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Solucion'!

!classDefinition: #AccountSummaryTest category: 'ServiciosFinancieros-Solucion' stamp: 'JP 7/9/2021 18:22:47'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Solucion'!

!classDefinition: #AccountSummary category: 'ServiciosFinancieros-Solucion' stamp: 'JP 7/9/2021 18:28:32'!
Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Solucion'!
!AccountSummaryTest methodsFor: 'no messages' stamp: 'JP 7/9/2021 18:28:23'!
test01
	
	
	| accountSummary |
	accountSummary := AccountSummary for: ReceptiveAccount new ! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:28:38' prior: 50860776!
test01
	
	| accountSummary |
	
	accountSummary := AccountSummary for: ReceptiveAccount new ! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:29:22' prior: 50860783!
test01
	
	| accountSummary |
	
	accountSummary := AccountSummary of: ReceptiveAccount new ! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:29:39' prior: 50860790!
test01
	
	| accountSummary |
	
	accountSummary := AccountSummary of: ReceptiveAccount new.
	
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:31:44' prior: 50860797!
test01
	
	
	
	! !

!classRemoval: #AccountSummary stamp: 'JP 7/9/2021 18:31:49'!
Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Solucion'!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:32:42' prior: 50860804!
test01
	
	| anAccount |
	anAccount := ReceptiveAccount new.
	
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:32:50' prior: 50860815!
test01
	
	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:34:55' prior: 50860821!
test01
	
	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount summary equals: 'Balance = 0 pesos'
	
	! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:35:04' prior: 50860827!
test01
	
	| anAccount |
	
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount summary equals: 'Balance = 0 pesos'! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:36:19' prior: 50860835!
test01
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'
	
	self assert: anAccount summary equals: 'Balance = 0 pesos'! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:36:30' prior: 50860843!
test01
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: anAccount summary equals: 'Balance = 0 pesos'! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:36:37' prior: 50860853!
test01
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !

expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.!

expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.!

expectedSummary2 := OrderedCollection with: 'Balance = 0 pesos'.!

expectedSummary = expectedSummary2!

expectedSummary2 := OrderedCollection with: 'Balance = 1 pesos'.!

expectedSummary = expectedSummary2!

expectedSummary = expectedSummary2!

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 18:38:20'!
ERROR!
!ReceptiveAccount methodsFor: 'nil' stamp: 'JP 7/9/2021 18:39:09'!
summary

	^OrderedCollection with: 'Balance = 0 pesos'! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 18:39:20'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:41:18'!
test02
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:45:14' prior: 50860893!
test02
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:45:56' prior: 50860903!
test02
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:46:19' prior: 50860913!
test02
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:49:23' prior: 50860886!
summary
	
	
	
	^OrderedCollection with: 'Balance = 0 pesos'! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:51:50' prior: 50860936!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions isEmpty ifTrue: [^OrderedCollection with: 'Balance = 0 pesos']
	
	^OrderedCollection with: 'Balance = 0 pesos'! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:53:23' prior: 50860942!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [^summary add: 'Balance = 0 pesos'].
	
	^(summary add: 'Depósito por 10 pesos' ) add: 'Balance = 10 pesos'! !

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 18:53:46'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:55:52' prior: 50860951!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [^summary add: 'Balance = 0 pesos'].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 18:55:57'!
PASSED!

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 18:55:57'!
FAILURE!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 18:55:57'!
PASSED!

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 18:55:57'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:56:30' prior: 50860963!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 18:56:35'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 18:56:36'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:57:28'!
test03
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 18:58:48' prior: 50860998!
test03
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Withdraw register: 10 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!PortfolioTest methodsFor: 'tests' stamp: 'JP 7/9/2021 19:00:18' prior: 50859741!
test02BalanceOfPortfolioWithOneAccountIsAccountBalance

	| account portfolio |
	
	account := ReceptiveAccount new.
	Deposit register: 100 * peso on: account.
	portfolio := Portfolio with: account.
	
	self assert: account balance equals: portfolio balance! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:03:04' prior: 50861010!
test03
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Withdraw register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:05:22' prior: 50860983!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction].
	
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'JP 7/9/2021 19:08:23' prior: 50860034!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 * peso on: account.
	Withdraw register: 50 * peso on: account.
		
	self assert: 50 * peso equals: account balance
! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:09:48' prior: 50861034!
test03
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Deposit register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:10:11' prior: 50861049!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction].
	
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:12:52' prior: 50861087!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction ].
	
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:13:02'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:15:01' prior: 50861099!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value].
	
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:18:01' prior: 50861114!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value asString , 's'].
	
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:18:11' prior: 50861128!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value , 's'].
	
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:18:31' prior: 50861142!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value , 's'].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:18:50' prior: 50861156!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value asString , 's'].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:18:51' prior: 50861170!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value asString, 's'].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:18:54' prior: 50861184!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value asString , 's'].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary! !

(10 * peso) asString!

(10 * peso) asString!

(10 * peso) asString!

(10 * peso) asString!

(10 * peso) asString!

(10 * peso) asString!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:20:48' prior: 50861198!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value asString].

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:21:10'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:21:10'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:21:10'!
PASSED!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:21:19' prior: 50861216!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value asString].

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:21:25'!
FAILURE!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:21:25'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:21:25'!
PASSED!

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:21:25'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:20:48' prior: 50861236!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	(transactions isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value asString].

	summary add: 'Balance = ' , self balance asString.
	^summary! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'JP 7/9/2021 19:22:18' prior: 50860410 overrides: 50860223!
balance

	^transactions 
		inject: 0 * peso
		into: [ :currentBalance :transaction | transaction affectBalance: currentBalance ]! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/9/2021 19:22:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/9/2021 19:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/9/2021 19:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/9/2021 19:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/9/2021 19:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/9/2021 19:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/9/2021 19:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/9/2021 19:22:31'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/9/2021 19:22:34'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/9/2021 19:22:35'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/9/2021 19:22:35'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/9/2021 19:22:35'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/9/2021 19:22:40'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/9/2021 19:22:40'!
PASSED!

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:22:48'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:22:48'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:22:48'!
PASSED!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:22:59' prior: 50861256!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: 'Depósito por ' , aTransaction value asString].

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:23:02'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:23:02'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:23:02'!
PASSED!

----SNAPSHOT----(9 July 2021 19:23:41) CuisUniversity-4532.image priorSource: 16898108!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:24:18'!
test04
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Withdraw register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Extracción por 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:25:23' prior: 50861388!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | (aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString]].

	summary add: 'Balance = ' , self balance asString.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:27:17' prior: 50861423!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw ) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString]].

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:27:25'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:27:25'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:27:25'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:27:25'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:28:04'!
test05
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Withdraw register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Extracción por 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:29:29' prior: 50861460!
test05
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Extracción por 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:31:06' prior: 50861475!
test05
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:31:13'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:31:22' prior: 50861435!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString]].

	summary add: 'Balance = ' , self balance asString.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:31:55' prior: 50861510!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString].
		(aTransaction isKindOf: TransferDepositLeg ) ifTrue: [summary add: 'Entrada por transferencia de ' , aTransaction value asString].
		
		].

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:32:01'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:32:01'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:32:01'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:32:01'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:32:01'!
FAILURE!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:32:01'!
FAILURE!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:33:58'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:34:29' prior: 50861491!
test05
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anotherAccount summary equals: expectedSummary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:34:33'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:34:34'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:34:34'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:34:34'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:34:34'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:34:44'!
test06
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anotherAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:35:30' prior: 50861590!
test06
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	 
	self assert: anAccount summary equals: expectedSummary! !

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 19:35:33'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:36:03' prior: 50861525!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString].
		(aTransaction isKindOf: TransferDepositLeg ) ifTrue: [summary add: 'Salida por transferencia de ' , aTransaction value asString].
		(aTransaction isKindOf: TransferWithdrawLeg ) ifTrue: [summary add: 'Entrada por transferencia de ' , aTransaction value asString].
		].

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:36:12'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:36:12'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:36:12'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:36:12'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:36:12'!
FAILURE!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 19:36:12'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:36:53' prior: 50861627!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString].
		(aTransaction isKindOf: TransferDepositLeg ) ifTrue: [summary add: 'Entrada por transferencia de ' , aTransaction value asString].
		(aTransaction isKindOf: TransferWithdrawLeg ) ifTrue: [summary add: 'Salida por transferencia de ' , aTransaction value asString].
		].

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:36:57'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:36:57'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:36:57'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:36:57'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:36:57'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 19:36:57'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:38:26'!
test07
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	 
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:39:57' prior: 50861703!
test07
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := Portfolio new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	 
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:40:49' prior: 50861721!
test07
	
	| anAccount expectedSummary |
	
	anAccount := Portfolio new.

	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	 
	self assert: anAccount summary equals: expectedSummary! !

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 19:41:07'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'JP 7/9/2021 19:41:42'!
summary

	^OrderedCollection with: 'Balance = 0 pesos'! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:41:45'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:41:45'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:41:45'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:41:45'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:41:45'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 19:41:45'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 19:41:45'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:42:11' prior: 50861738!
test07
	
	| aPortfolio expectedSummary |
	
	aPortfolio := Portfolio new.

	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:42:15'!
test08
	
	| aPortfolio expectedSummary |
	
	aPortfolio := Portfolio new.

	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:43:17' prior: 50861781!
test08
	
	| aPortfolio anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio new.
	

	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:44:31' prior: 50861791!
test08
	
	| aPortfolio anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.
	

	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:44:51' prior: 50861803!
test08
	
	| aPortfolio anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.
	

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 0 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:44:53' prior: 50861816!
test08
	
	| aPortfolio anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 0 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 19:44:54'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:45:31' prior: 50861749!
summary

	OrderedCollection with: 'Balance = 0 pesos'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:46:33' prior: 50861846!
summary

	accounts isEmpty ifTrue: [^OrderedCollection with: 'Balance = 0 pesos'].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:46:41' prior: 50861851!
summary

	(accounts isEmpty) ifTrue: [^OrderedCollection with: 'Balance = 0 pesos'].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:46:54' prior: 50861857!
summary

	(accounts isEmpty) ifTrue: [^OrderedCollection with: 'Balance = 0 pesos'].
	
	^accounts last! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:47:22' prior: 50861863!
summary
	
	| summary |
	summary := OrderedCollection new.
	(accounts isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'].
	
	^accounts last! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:48:09' prior: 50861870!
summary
	
	| summary |
	summary := OrderedCollection new.
	(accounts isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary ! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:48:12'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:48:12'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:48:12'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:48:12'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:48:12'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 19:48:12'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 19:48:12'!
FAILURE!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 19:48:12'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:48:43' prior: 50861878!
summary
	
	| summary |
	summary := OrderedCollection new.
	(accounts isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary ].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:48:44' prior: 50861908!
summary
	
	| summary |
	summary := OrderedCollection new.
	(accounts isEmpty) ifTrue: [summary add: 'Balance = 0 pesos'. ^summary].
	
	summary add: 'Depósito por 10 pesos'.
	summary add: 'Balance = 10 pesos'.
	^summary ! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:48:47'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:48:47'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:48:47'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:48:47'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:48:47'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 19:48:47'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 19:48:47'!
PASSED!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 19:48:47'!
FAILURE!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 19:48:47'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:49:02' prior: 50861830!
test08
	
	| aPortfolio anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 19:49:14'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:49:30'!
test09
	
	| aPortfolio anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:50:50' prior: 50861987!
test09
	
	| aPortfolio anAccount anotherPortfolio AnotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:50:58' prior: 50862001!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:51:21' prior: 50862016!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:51:29' prior: 50862031!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:52:14' prior: 50862049!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	anotherPortfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:52:45' prior: 50862067!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:52:56' prior: 50862087!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:53:10' prior: 50862107!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:53:20' prior: 50862128!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:53:25' prior: 50862149!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 15 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 19:54:09' prior: 50862169!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !

----SNAPSHOT----(9 July 2021 19:56:49) CuisUniversity-4532.image priorSource: 16952135!

!testRun: #AccountSummaryTest #test09 stamp: 'JP 7/9/2021 19:56:54'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:02:25' prior: 50861918!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	accounts do: [:anAccount | summary addAll: anAccount summary].
	
	summary add: 'Balance = 10 pesos'.
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:04:04' prior: 50862215!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	accounts do: [:anAccount | summary addAll: anAccount summaryWithoutBalance].
	
	summary add: 'Balance = 10 pesos'.
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:05:56' prior: 50862224!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	accounts do: [:anAccount | summary addAll: anAccount summaryWithoutBalance].
	
	summary add: 'Balance = ', self balance .
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:06:05' prior: 50862233!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	accounts do: [:anAccount | summary addAll: anAccount summaryWithoutBalance].
	
	summary add: 'Balance = ', self balance asString.
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:06:09' prior: 50862243!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	accounts do: [:anAccount | summary addAll: anAccount summaryWithoutBalance].
	
	summary add: 'Balance = ', self balance asString.
	^summary ! !

----SNAPSHOT----(9 July 2021 20:06:11) CuisUniversity-4532.image priorSource: 16977879!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:07:03'!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	accounts do: [:anAccount | summary addAll: anAccount summaryWithoutBalance].
	
	^summary ! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:07:16'!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString].
		(aTransaction isKindOf: TransferDepositLeg ) ifTrue: [summary add: 'Entrada por transferencia de ' , aTransaction value asString].
		(aTransaction isKindOf: TransferWithdrawLeg ) ifTrue: [summary add: 'Salida por transferencia de ' , aTransaction value asString].
		].

	summary add: 'Balance = ' , self balance asString.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:07:19' prior: 50862273!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString].
		(aTransaction isKindOf: TransferDepositLeg ) ifTrue: [summary add: 'Entrada por transferencia de ' , aTransaction value asString].
		(aTransaction isKindOf: TransferWithdrawLeg ) ifTrue: [summary add: 'Salida por transferencia de ' , aTransaction value asString].
		].

	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 20:07:24'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 20:07:24'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 20:07:24'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 20:07:24'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 20:07:24'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 20:07:24'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 20:07:24'!
FAILURE!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 20:07:24'!
PASSED!

!testRun: #AccountSummaryTest #test09 stamp: 'JP 7/9/2021 20:07:24'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 20:07:24'!
FAILURE!

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 20:07:43'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 20:07:43'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 20:07:43'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 20:07:43'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 20:07:43'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 20:07:43'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 20:07:43'!
FAILURE!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 20:07:43'!
PASSED!

!testRun: #AccountSummaryTest #test09 stamp: 'JP 7/9/2021 20:07:43'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 20:07:43'!
FAILURE!
!Portfolio methodsFor: 'main protocol' stamp: 'JP 7/9/2021 20:07:57' prior: 50860269 overrides: 50860223!
balance
	
	^accounts sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 * peso]! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

!testRun: #AccountSummaryTest #test09 stamp: 'JP 7/9/2021 20:08:06'!
PASSED!

----SNAPSHOT----(9 July 2021 20:08:17) CuisUniversity-4532.image priorSource: 16979564!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:09:07' prior: 50861665!
summary
	
	| summary |
	summary := self summaryWithoutBalance.

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 20:09:11'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 20:09:12'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 20:09:12'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 20:09:12'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 20:09:12'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 20:09:12'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 20:09:12'!
PASSED!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 20:09:12'!
PASSED!

!testRun: #AccountSummaryTest #test09 stamp: 'JP 7/9/2021 20:09:12'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:09:38' prior: 50862253!
summary
	
	| summary |
	summary := self summaryWithoutBalance 
	
	summary add: 'Balance = ', self balance asString.
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:09:41' prior: 50862429!
summary
	
	| summary |
	summary := self summaryWithoutBalance.
	
	summary add: 'Balance = ', self balance asString.
	^summary ! !

!testRun: #AccountSummaryTest #test01 stamp: 'JP 7/9/2021 20:09:42'!
PASSED!

!testRun: #AccountSummaryTest #test02 stamp: 'JP 7/9/2021 20:09:42'!
PASSED!

!testRun: #AccountSummaryTest #test03 stamp: 'JP 7/9/2021 20:09:43'!
PASSED!

!testRun: #AccountSummaryTest #test04 stamp: 'JP 7/9/2021 20:09:43'!
PASSED!

!testRun: #AccountSummaryTest #test05 stamp: 'JP 7/9/2021 20:09:43'!
PASSED!

!testRun: #AccountSummaryTest #test06 stamp: 'JP 7/9/2021 20:09:43'!
PASSED!

!testRun: #AccountSummaryTest #test07 stamp: 'JP 7/9/2021 20:09:43'!
PASSED!

!testRun: #AccountSummaryTest #test08 stamp: 'JP 7/9/2021 20:09:43'!
PASSED!

!testRun: #AccountSummaryTest #test09 stamp: 'JP 7/9/2021 20:09:43'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:11:14'!
test01AccountSummaryBalanceIs0PesosOnEmptyAccount
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test01 stamp: 'JP 7/9/2021 20:11:14'!
test01
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: anAccount summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:12:54'!
test02DepositTransactionShowsOnSummary
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test02 stamp: 'JP 7/9/2021 20:12:54'!
test02
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	
	self assert: anAccount summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:13:44'!
test03MultipleDepositsTransactionsShowOnSummary
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Deposit register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test03 stamp: 'JP 7/9/2021 20:13:44'!
test03
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Deposit register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	
	self assert: anAccount summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:14:07'!
test04WithdrawTransactionShowsOnSummary
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Withdraw register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Extracción por 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test04 stamp: 'JP 7/9/2021 20:14:07'!
test04
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Withdraw register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Extracción por 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anAccount summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:15:13'!
test03MultipleTransactionsShowOnSummary
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Deposit register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test03MultipleDepositsTransactionsShowOnSummary stamp: 'JP 7/9/2021 20:15:13'!
test03MultipleDepositsTransactionsShowOnSummary
	
	| anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Deposit register: 5 * peso on: anAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	
	self assert: anAccount summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:15:48'!
test05TransferDepositLegShowOnSummary
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anotherAccount summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test05 stamp: 'JP 7/9/2021 20:15:48'!
test05
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anotherAccount summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:16:12'!
test06TransferWithdrawLegShowsOnSummary
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	 
	self assert: anAccount summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test06 stamp: 'JP 7/9/2021 20:16:12'!
test06
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	 
	self assert: anAccount summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:16:18'!
test05TransferDepositLegShowsOnSummary
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anotherAccount summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test05TransferDepositLegShowOnSummary stamp: 'JP 7/9/2021 20:16:18'!
test05TransferDepositLegShowOnSummary
	
	| anAccount anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: anotherAccount summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:16:59'!
test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio
	
	| aPortfolio expectedSummary |
	
	aPortfolio := Portfolio new.

	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test07 stamp: 'JP 7/9/2021 20:16:59'!
test07
	
	| aPortfolio expectedSummary |
	
	aPortfolio := Portfolio new.

	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:18:12'!
test08CanShowSummaryWithPortfolioWithASingleAccount
	
	| aPortfolio anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test08 stamp: 'JP 7/9/2021 20:18:12'!
test08
	
	| aPortfolio anAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:19:18'!
test09SummaryCanBeCalculatedRecursibleInPortfolioWithMultipleAccounts
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test09 stamp: 'JP 7/9/2021 20:19:18'!
test09
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/9/2021 20:19:59'!
test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary! !

!methodRemoval: AccountSummaryTest #test09SummaryCanBeCalculatedRecursibleInPortfolioWithMultipleAccounts stamp: 'JP 7/9/2021 20:19:59'!
test09SummaryCanBeCalculatedRecursibleInPortfolioWithMultipleAccounts
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	 
	self assert: aPortfolio summary equals: expectedSummary!

----SNAPSHOT----(9 July 2021 20:20:15) CuisUniversity-4532.image priorSource: 16983858!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/9/2021 20:20:19'!
PASSED!

----SNAPSHOT----(9 July 2021 20:20:38) CuisUniversity-4532.image priorSource: 16997932!

----SNAPSHOT----(9 July 2021 20:24:13) CuisUniversity-4532.image priorSource: 16999073!

----SNAPSHOT----(9 July 2021 20:25:42) CuisUniversity-4532.image priorSource: 16999162!

----SNAPSHOT----(9 July 2021 20:25:52) CuisUniversity-4532.image priorSource: 16999251!

----QUIT----(9 July 2021 20:25:54) CuisUniversity-4532.image priorSource: 16999340!

----STARTUP---- (9 July 2021 20:27:11) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


----QUIT----(9 July 2021 20:27:35) CuisUniversity-4532.image priorSource: 16999429!

----STARTUP---- (11 July 2021 16:13:48) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/11/2021 16:16:13'!
PASSED!

Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #XXX category: 'ServiciosFinancieros2' stamp: 'JP 7/11/2021 16:22:54'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!XXX methodsFor: 'nil' stamp: 'JP 7/11/2021 16:25:18'!
summaryFor: anAcount

	! !
!XXX methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:25:49' prior: 50862939!
summaryFor: anAcount

	| summary |
	summary := OrderedCollection new.
	! !
!XXX methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:40:39' prior: 50862943!
summaryFor: anAcount

	| summary |
	summary := OrderedCollection new.
	
	anAcount transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString].
		(aTransaction isKindOf: TransferDepositLeg ) ifTrue: [summary add: 'Entrada por transferencia de ' , aTransaction value asString].
		(aTransaction isKindOf: TransferWithdrawLeg ) ifTrue: [summary add: 'Salida por transferencia de ' , aTransaction value asString].
		].

	^summary	! !

!classRemoval: #XXX stamp: 'JP 7/11/2021 16:41:00'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/11/2021 16:41:08'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/11/2021 16:41:08'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/11/2021 16:41:08'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/11/2021 16:41:08'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/11/2021 16:41:08'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/11/2021 16:41:08'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/11/2021 16:41:08'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/11/2021 16:41:08'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/11/2021 16:41:08'!
PASSED!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:42:01' prior: 50862297!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString.
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Depósito por ' , aTransaction value asString].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracción por ' , aTransaction value asString].
		(aTransaction isKindOf: TransferDepositLeg ) ifTrue: [summary add: 'Entrada por transferencia de ' , aTransaction value asString].
		(aTransaction isKindOf: TransferWithdrawLeg ) ifTrue: [summary add: 'Salida por transferencia de ' , aTransaction value asString].
		].

	^summary! !
!AccountTransaction methodsFor: 'nil' stamp: 'JP 7/11/2021 16:42:36' overrides: 16881101!
asString

	self subclassResponsibility ! !
!Deposit methodsFor: 'nil' stamp: 'JP 7/11/2021 16:42:55' overrides: 50863034!
asString

	^''! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:43:19' prior: 50863038 overrides: 50863034!
asString

	^'Depósito por ' , self value asString! !
!Withdraw methodsFor: 'nil' stamp: 'JP 7/11/2021 16:43:50' overrides: 50863034!
asString

	^'Extracción por ' , self value asString! !
!TransferWithdrawLeg methodsFor: 'nil' stamp: 'JP 7/11/2021 16:44:05' overrides: 50863034!
asString! !
!TransferDepositLeg methodsFor: 'nil' stamp: 'JP 7/11/2021 16:44:08' overrides: 50863034!
asString! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:44:30' prior: 50863057 overrides: 50863034!
asString
	
	^'Entrada por transferencia de ' , self value asString! !
!TransferWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:44:55' prior: 50863053 overrides: 50863034!
asString

	^'Salida por transferencia de ' , self value asString! !
!TransferLeg methodsFor: 'nil' stamp: 'JP 7/11/2021 16:45:13' overrides: 50863034!
asString

	self subclassResponsibility! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:45:23' prior: 50863011!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString.].

	^summary! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/11/2021 16:45:27'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/11/2021 16:45:28'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/11/2021 16:45:28'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/11/2021 16:45:28'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/11/2021 16:45:28'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/11/2021 16:45:28'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/11/2021 16:45:28'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/11/2021 16:45:28'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/11/2021 16:45:28'!
PASSED!

TestCase subclass: #TransferNetTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #TransferNetTest category: 'ServiciosFinancieros2' stamp: 'JP 7/11/2021 16:46:51'!
TestCase subclass: #TransferNetTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!TransferNetTest methodsFor: 'nil' stamp: 'JP 7/11/2021 16:48:47'!
test01

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:48:54' prior: 50863132!
test01

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.! !

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 16:50:51'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:51:18'!
transferNet
	
	^0 * peso! !

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 16:51:30'!
PASSED!

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 16:51:30'!
PASSED!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:51:47'!
test02

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:55:03' prior: 50863157!
test02

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount. 
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.! !

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 16:55:08'!
FAILURE!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:55:57' prior: 50863164!
test02

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.! !

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 16:56:02'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:56:33' prior: 50863148!
transferNet
	
	^self balance! !

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 16:56:49'!
PASSED!

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 16:56:49'!
PASSED!

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 16:56:49'!
PASSED!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:57:40'!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anotherAccount transferNet equals: -5 * peso.! !

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 16:57:42'!
FAILURE!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:58:31' prior: 50863205!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anotherAccount transferNet equals: 5 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:58:38' prior: 50863220!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anotherAccount transferNet equals: -5 * peso.! !

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 16:58:38'!
PASSED!

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 16:58:38'!
PASSED!

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 16:58:38'!
PASSED!

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 16:58:39'!
PASSED!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:58:59' prior: 50863231!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anotherAccount transferNet equals: 5 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:59:33' prior: 50863252!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:01:33' prior: 50863179!
test02

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.
	self assert: anotherAccount transferNet equals: -5 * peso.! !

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 17:01:37'!
PASSED!

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 17:01:38'!
PASSED!

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 17:01:38'!
PASSED!

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:01:38'!
PASSED!

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 17:02:37'!
PASSED!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:03:37' prior: 50863265!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:03:58' prior: 50863303!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.
	self assert: anotherAccount transferNet equals: -5 * peso.! !

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:04:02'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:06:11' prior: 50863194!
transferNet
	
	transactions inject: 0 * peso into: [:currentTransferNet] ! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:06:27' prior: 50863278!
test02

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.
	self assert: anotherAccount transferNet equals: -5 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:06:44' prior: 50863319!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.
	self assert: anotherAccount transferNet equals: -5 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:06:50' prior: 50863358!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	self assert: anAccount transferNet equals: 3 * peso.
	self assert: anotherAccount transferNet equals: -3 * peso.! !

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:06:52'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 16:56:33' prior: 50863339!
transferNet
	
	^self balance! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:07:25' prior: 50863399!
transferNet
	
	transactions inject: 0 * peso into: [:currentTransferNet]! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:09:25' prior: 50863404!
transferNet
	
	^transactions 
	inject: 0 * peso
	into: [ :currentTransferNet :transaction | transaction affectTransferNet: currentTransferNet ]! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:10:51'!
affectTransferNet: currentTransferNet

	self subclassResponsibility ! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:11:05' prior: 50863418!
affectTransferNet: aTransferNet

	self subclassResponsibility ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:11:13' overrides: 50863424!
affectTransferNet: aTransferNet

	self subclassResponsibility ! !
!TransferLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:11:16' overrides: 50863424!
affectTransferNet: aTransferNet

	self subclassResponsibility ! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:11:22' overrides: 50863436!
affectTransferNet: aTransferNet

	self subclassResponsibility ! !
!TransferWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:11:27' overrides: 50863436!
affectTransferNet: aTransferNet

	self subclassResponsibility ! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:11:31' overrides: 50863424!
affectTransferNet: aTransferNet

	self subclassResponsibility ! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:11:36' prior: 50863454 overrides: 50863424!
affectTransferNet: aTransferNet! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:11:44' prior: 50863430 overrides: 50863424!
affectTransferNet: aTransferNet! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:12:06' prior: 50863442 overrides: 50863436!
affectTransferNet: aTransferNet

	^aTransferNet + self value! !
!TransferWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:12:22' prior: 50863448 overrides: 50863436!
affectTransferNet: aTransferNet

	^aTransferNet - self value! !

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:12:28'!
ERROR!

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:12:28'!
ERROR!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:12:55' prior: 50863460 overrides: 50863424!
affectTransferNet: aTransferNet

	^aTransferNet! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:13:04' prior: 50863465 overrides: 50863424!
affectTransferNet: aTransferNet

	^aTransferNet! !

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:13:12'!
PASSED!

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 17:13:19'!
PASSED!

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 17:13:19'!
PASSED!

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:13:19'!
PASSED!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:15:29'!
test04

	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:15:32' prior: 50863507!
test04

	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:16:23' prior: 50863511!
test04

	| aPortfolio  |
	
	aPortfolio := Portfolio new.
	 
	self assert: aPortfolio transferNet equals: 0 * peso
	! !

!testRun: #TransferNetTest #test04 stamp: 'JP 7/11/2021 17:16:25'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:16:39'!
transferNet

	^0*peso! !

!testRun: #TransferNetTest #test04 stamp: 'JP 7/11/2021 17:16:46'!
PASSED!

!testRun: #TransferNetTest #test04 stamp: 'JP 7/11/2021 17:16:48'!
PASSED!

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 17:16:48'!
PASSED!

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 17:16:48'!
PASSED!

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:16:48'!
PASSED!

!testRun: #TransferNetTest #test04 stamp: 'JP 7/11/2021 17:16:48'!
PASSED!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:16:58'!
test05

	| aPortfolio  |
	
	aPortfolio := Portfolio new.
	 
	self assert: aPortfolio transferNet equals: 0 * peso
	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:18:03' prior: 50863542!
test05

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.

	 
	self assert: aPortfolio summary equals: 0.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:19:59' prior: 50863549!
test05

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount 
	
	
	self assert: aPortfolio summary equals: 10.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:20:06' prior: 50863560!
test05

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	self assert: aPortfolio summary equals: 10.! !

!testRun: #TransferNetTest #test05 stamp: 'JP 7/11/2021 17:20:08'!
FAILURE!

!testRun: #TransferNetTest #test05 stamp: 'JP 7/11/2021 17:20:17'!
FAILURE!

!testRun: #TransferNetTest #test05 stamp: 'JP 7/11/2021 17:20:17'!
FAILURE!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:20:33' prior: 50863573!
test05

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	self assert: aPortfolio transferNet equals: 10 * peso.! !

!testRun: #TransferNetTest #test05 stamp: 'JP 7/11/2021 17:20:35'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:21:26' prior: 50863524!
transferNet

	accounts isEmpty ifTrue:[^0*peso].
	
	^accounts last transferNet	! !

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 17:21:31'!
PASSED!

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 17:21:31'!
PASSED!

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:21:31'!
PASSED!

!testRun: #TransferNetTest #test04 stamp: 'JP 7/11/2021 17:21:31'!
PASSED!

!testRun: #TransferNetTest #test05 stamp: 'JP 7/11/2021 17:21:31'!
PASSED!
!TransferNetTest methodsFor: 'nil' stamp: 'JP 7/11/2021 17:25:09'!
test06

	| aPortfolio anAccount anotherPortfolio anotherAccount outsidePortfolioAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	outsidePortfolioAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	Transfer amount: 2 * peso from: outsidePortfolioAccount to: anotherAccount.
	 
	self assert: aPortfolio transferNet equals: 2 * peso.! !

!testRun: #TransferNetTest #test06 stamp: 'JP 7/11/2021 17:25:11'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:26:00' prior: 50863608!
transferNet

	accounts isEmpty ifTrue:[^0*peso].
	
	^accounts transferNet	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:28:23' prior: 50863652!
transferNet

	| transferNet |
	transferNet := 0 * peso.
	
	accounts do: [:anAccount | transferNet := transferNet + anAccount transferNet ].
	
	^transferNet! !

!testRun: #TransferNetTest #test01 stamp: 'JP 7/11/2021 17:28:27'!
PASSED!

!testRun: #TransferNetTest #test02 stamp: 'JP 7/11/2021 17:28:28'!
PASSED!

!testRun: #TransferNetTest #test03 stamp: 'JP 7/11/2021 17:28:28'!
PASSED!

!testRun: #TransferNetTest #test04 stamp: 'JP 7/11/2021 17:28:28'!
PASSED!

!testRun: #TransferNetTest #test05 stamp: 'JP 7/11/2021 17:28:28'!
PASSED!

!testRun: #TransferNetTest #test06 stamp: 'JP 7/11/2021 17:28:28'!
PASSED!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:29:52'!
AccountSummaryBalanceIs0PesosOnEmptyAccount

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.! !

!methodRemoval: TransferNetTest #test01 stamp: 'JP 7/11/2021 17:29:53'!
test01

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:30:05'!
test01AccountSummaryBalanceIs0PesosOnEmptyAccount

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.! !

!methodRemoval: TransferNetTest #AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/11/2021 17:30:05'!
AccountSummaryBalanceIs0PesosOnEmptyAccount

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:30:20'!
test01AccountSummaryTransferNetIs0PesosOnEmptyAccount

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.! !

!methodRemoval: TransferNetTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/11/2021 17:30:20'!
test01AccountSummaryBalanceIs0PesosOnEmptyAccount

	| anAccount |
	anAccount := ReceptiveAccount new.
	
	self assert: anAccount transferNet equals: 0 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:32:18'!
test02BothAccountsOfTransferShowsOppositeTransferNet

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.
	self assert: anotherAccount transferNet equals: -5 * peso.! !

!methodRemoval: TransferNetTest #test02 stamp: 'JP 7/11/2021 17:32:18'!
test02

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.
	self assert: anotherAccount transferNet equals: -5 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:33:34'!
test02BothAccountsOfTransferHaveOppositeTransferNet

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.
	self assert: anotherAccount transferNet equals: -5 * peso.! !

!methodRemoval: TransferNetTest #test02BothAccountsOfTransferShowsOppositeTransferNet stamp: 'JP 7/11/2021 17:33:34'!
test02BothAccountsOfTransferShowsOppositeTransferNet

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	self assert: anAccount transferNet equals: 5 * peso.
	self assert: anotherAccount transferNet equals: -5 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:34:41'!
test03TransferNetOnlyCountsTransfers

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	self assert: anAccount transferNet equals: 3 * peso.
	self assert: anotherAccount transferNet equals: -3 * peso.! !

!methodRemoval: TransferNetTest #test03 stamp: 'JP 7/11/2021 17:34:41'!
test03

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	self assert: anAccount transferNet equals: 3 * peso.
	self assert: anotherAccount transferNet equals: -3 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:35:50'!
test03TransferNetIgnoresAnyNonTransferTransactions

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	self assert: anAccount transferNet equals: 3 * peso.
	self assert: anotherAccount transferNet equals: -3 * peso.! !

!methodRemoval: TransferNetTest #test03TransferNetOnlyCountsTransfers stamp: 'JP 7/11/2021 17:35:50'!
test03TransferNetOnlyCountsTransfers

	| anAccount anotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	self assert: anAccount transferNet equals: 3 * peso.
	self assert: anotherAccount transferNet equals: -3 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:36:08'!
test04EmptyPortfolioTransferNetIs0Peso

	| aPortfolio  |
	
	aPortfolio := Portfolio new.
	 
	self assert: aPortfolio transferNet equals: 0 * peso
	! !

!methodRemoval: TransferNetTest #test04 stamp: 'JP 7/11/2021 17:36:08'!
test04

	| aPortfolio  |
	
	aPortfolio := Portfolio new.
	 
	self assert: aPortfolio transferNet equals: 0 * peso
	!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:36:36'!
test05Portfo

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	self assert: aPortfolio transferNet equals: 10 * peso.! !

!methodRemoval: TransferNetTest #test05 stamp: 'JP 7/11/2021 17:36:37'!
test05

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	self assert: aPortfolio transferNet equals: 10 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:36:57'!
test05CanShowSummaryWithPortfolioWithASingleAccount

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	self assert: aPortfolio transferNet equals: 10 * peso.! !

!methodRemoval: TransferNetTest #test05Portfo stamp: 'JP 7/11/2021 17:36:57'!
test05Portfo

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	self assert: aPortfolio transferNet equals: 10 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:37:06'!
test05CanShowTransferNetWithPortfolioWithASingleAccount

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	self assert: aPortfolio transferNet equals: 10 * peso.! !

!methodRemoval: TransferNetTest #test05CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/11/2021 17:37:06'!
test05CanShowSummaryWithPortfolioWithASingleAccount

	| aPortfolio anAccount anotherAccount |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	self assert: aPortfolio transferNet equals: 10 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:37:25'!
test06SummaryShowsRecursivelyInPortfolioWithMultipleAccounts

	| aPortfolio anAccount anotherPortfolio anotherAccount outsidePortfolioAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	outsidePortfolioAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	Transfer amount: 2 * peso from: outsidePortfolioAccount to: anotherAccount.
	 
	self assert: aPortfolio transferNet equals: 2 * peso.! !

!methodRemoval: TransferNetTest #test06 stamp: 'JP 7/11/2021 17:37:26'!
test06

	| aPortfolio anAccount anotherPortfolio anotherAccount outsidePortfolioAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	outsidePortfolioAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	Transfer amount: 2 * peso from: outsidePortfolioAccount to: anotherAccount.
	 
	self assert: aPortfolio transferNet equals: 2 * peso.!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/11/2021 17:37:57'!
test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts

	| aPortfolio anAccount anotherPortfolio anotherAccount outsidePortfolioAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	outsidePortfolioAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	Transfer amount: 2 * peso from: outsidePortfolioAccount to: anotherAccount.
	 
	self assert: aPortfolio transferNet equals: 2 * peso.! !

!methodRemoval: TransferNetTest #test06SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/11/2021 17:37:57'!
test06SummaryShowsRecursivelyInPortfolioWithMultipleAccounts

	| aPortfolio anAccount anotherPortfolio anotherAccount outsidePortfolioAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	outsidePortfolioAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	Transfer amount: 2 * peso from: outsidePortfolioAccount to: anotherAccount.
	 
	self assert: aPortfolio transferNet equals: 2 * peso.!

----SNAPSHOT----(11 July 2021 17:38:01) CuisUniversity-4532.image priorSource: 16999623!

----SNAPSHOT----(11 July 2021 17:38:37) CuisUniversity-4532.image priorSource: 17036905!

----SNAPSHOT----(11 July 2021 17:38:44) CuisUniversity-4532.image priorSource: 17036995!

----QUIT----(11 July 2021 17:38:51) CuisUniversity-4532.image priorSource: 17037085!

----STARTUP---- (11 July 2021 17:38:57) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


----QUIT----(11 July 2021 17:39:07) CuisUniversity-4532.image priorSource: 17037175!

----STARTUP---- (12 July 2021 19:05:35) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!

!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:24:15' prior: 50862265!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	accounts do: [:anAccount | summary addAll: anAccount summaryWithoutBalance].
	
	self transactions do: [:aTransaction | summary add: aTransaction asString]
	
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:24:35' prior: 50864075!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	self transactions do: [:aTransaction | summary add: aTransaction asString].
	
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:24:53' prior: 50862436!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	summary add: 'Balance = ', self balance asString.
	^summary ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:24:59' prior: 50864095!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	self transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', self balance asString.
	^summary ! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/12/2021 20:25:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/12/2021 20:25:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/12/2021 20:25:05'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/12/2021 20:25:05'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/12/2021 20:25:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/12/2021 20:25:05'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:25:31'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:25:32'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 20:25:32'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:25:32'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 20:25:32'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 20:25:32'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 20:25:32'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:25:32'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:25:32'!
PASSED!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:26:16' prior: 50862400!
summary
	
	| summary |
	summary := self summaryWithoutBalance.
	
	transactions do: [:aTransaction | summary add: aTransaction asString.].

	summary add: 'Balance = ' , self balance asString.
	^summary! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:26:22' prior: 50864202!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString.].

	summary add: 'Balance = ' , self balance asString.
	^summary! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:26:26'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:26:26'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 20:26:26'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:26:26'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 20:26:27'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 20:26:27'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 20:26:27'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:26:27'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:26:27'!
PASSED!

!methodRemoval: ReceptiveAccount #summaryWithoutBalance stamp: 'JP 7/12/2021 20:26:31'!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString.].

	^summary!

!methodRemoval: Portfolio #summaryWithoutBalance stamp: 'JP 7/12/2021 20:26:36'!
summaryWithoutBalance
	
	| summary |
	summary := OrderedCollection new.
	
	self transactions do: [:aTransaction | summary add: aTransaction asString].
	
	^summary !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:26:47'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:26:48'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 20:26:48'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:26:48'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 20:26:48'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 20:26:48'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 20:26:48'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:26:48'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:26:48'!
PASSED!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:26:54'!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	self transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', self balance asString.
	^summary ! !

!methodRemoval: Portfolio #summary stamp: 'JP 7/12/2021 20:26:54'!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	self transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', self balance asString.
	^summary !

!methodRemoval: ReceptiveAccount #summary stamp: 'JP 7/12/2021 20:27:08'!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	transactions do: [:aTransaction | summary add: aTransaction asString.].

	summary add: 'Balance = ' , self balance asString.
	^summary!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:27:10'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:27:11'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 20:27:11'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:27:11'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 20:27:11'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 20:27:11'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 20:27:11'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:27:12'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:27:12'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:28:01' prior: 50863658!
transferNet

	^self transactions 
	inject: 0 * peso
	into: [ :currentTransferNet :transaction | transaction affectTransferNet: currentTransferNet ]! !

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:28:14'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/12/2021 20:28:14'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/12/2021 20:28:14'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/12/2021 20:28:14'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:28:14'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:28:14'!
PASSED!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:29:36'!
transferNet

	^self transactions 
	inject: 0 * peso
	into: [ :currentTransferNet :transaction | transaction affectTransferNet: currentTransferNet ]! !

!methodRemoval: Portfolio #transferNet stamp: 'JP 7/12/2021 20:29:37'!
transferNet

	^self transactions 
	inject: 0 * peso
	into: [ :currentTransferNet :transaction | transaction affectTransferNet: currentTransferNet ]!

!methodRemoval: ReceptiveAccount #transferNet stamp: 'JP 7/12/2021 20:29:41'!
transferNet
	
	^transactions 
	inject: 0 * peso
	into: [ :currentTransferNet :transaction | transaction affectTransferNet: currentTransferNet ]!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:29:46'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:29:46'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 20:29:46'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:29:46'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 20:29:46'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 20:29:46'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 20:29:47'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:29:47'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:29:47'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:29:50'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/12/2021 20:29:50'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/12/2021 20:29:50'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/12/2021 20:29:50'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:29:50'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:29:50'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/12/2021 20:29:52'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/12/2021 20:29:52'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/12/2021 20:29:52'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/12/2021 20:29:52'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/12/2021 20:29:52'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/12/2021 20:29:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/12/2021 20:29:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/12/2021 20:29:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/12/2021 20:29:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/12/2021 20:29:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/12/2021 20:29:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/12/2021 20:29:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/12/2021 20:29:54'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/12/2021 20:29:56'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/12/2021 20:30:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 20:30:04'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 20:30:05'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/12/2021 20:30:05'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/12/2021 20:30:05'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/12/2021 20:30:05'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/12/2021 20:30:05'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/12/2021 20:30:05'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/12/2021 20:30:05'!
PASSED!

----SNAPSHOT----(12 July 2021 20:30:14) CuisUniversity-4532.image priorSource: 17037371!

----SNAPSHOT----(12 July 2021 20:31:24) CuisUniversity-4532.image priorSource: 17058755!
!FormSection methodsFor: 'initialization' stamp: 'JP 7/12/2021 20:31:43' prior: 50814657!
initializeWithTitle: aTitle withExplanation: anExplanation withColor: aColor

	| titleLayoutSpec |

	title := aTitle.
	explanation := anExplanation.

	self separation: 3.
	self color: aColor.

	titleMorph := LabelMorph
		contents: title
		font: Preferences windowTitleFont
		emphasis: 1.
	titleLayoutSpec := LayoutSpec
		fixedWidth: titleMorph morphWidth
		fixedHeight: titleMorph morphHeight.
	titleLayoutSpec offAxisEdgeWeight: 0.03.

	self addMorph: titleMorph layoutSpec: titleLayoutSpec.

	explanation isEmpty ifFalse: [
		explanationMorph := ImmutableTextModelMorph
			withText: anExplanation
			withColor: aColor
			withWidth: self fixedWidthForTexts.
		self addMorph: explanationMorph.
	].! !
!LabeledInput methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:32:03' prior: 50814774!
withLabel: aLabel withWidth: aWidth withModel: aTextModel usingAs: focusMover

	| labelLayoutSpec inputMorphLayoutSpec |

	self separation: 5.
	self layoutSpec: (LayoutSpec proportionalWidth: 0.95 fixedHeight: LabeledInput recommendedHeight).

	labelMorph := LabelMorph contents: aLabel.
	labelLayoutSpec := LayoutSpec
		fixedWidth: aWidth
		fixedHeight: labelMorph morphHeight
		offAxisEdgeWeight: #center.
	self addMorph: labelMorph layoutSpec: labelLayoutSpec.

	inputMorph := TabPassingTextModelMorph withModel: aTextModel.
	inputMorph textMorph focusMover: focusMover.
	focusMover addFocusReceiver: inputMorph textMorph.
	inputMorph hideScrollBarsIndefinitely.
	inputMorphLayoutSpec :=
		LayoutSpec
			fixedWidth: LabeledInput inputWidth * 0.7
			fixedHeight: labelMorph morphHeight + 2.
	self addMorph: inputMorph layoutSpec: inputMorphLayoutSpec.



	! !
!MessageKeywordsAndParametersTable methodsFor: 'GUI building' stamp: 'JP 7/12/2021 20:32:19' prior: 50815089!
buildColumnTitlesRowFor: inputColumnsTitles

	| columnsTitles row |

	row := LayoutMorph newRow.
	row color: self backgroundColor.
	row separation: self columnSeparation.

	columnsTitles := OrderedCollection newFrom: inputColumnsTitles.
	columnsTitles addFirst: ''.
	self needsToReorderRows ifTrue: [columnsTitles addLast: 'Change order'].
	columnsTitles withIndexDo: [:aColumnTitle :columnIndex | | columnTitleLayoutSpec titleLayout |
		titleLayout := LayoutMorph newRow.
		titleLayout color: self backgroundColor .
		titleLayout axisEdgeWeight: #center.
		titleLayout addMorph: (LabelMorph contents: aColumnTitle).
		columnTitleLayoutSpec := LayoutSpec fixedWidth: (columnWidths at: columnIndex).
		row
			addMorph: titleLayout
			layoutSpec: columnTitleLayoutSpec].

	^row

	! !
!MessageKeywordsAndParametersTable methodsFor: 'initialization' stamp: 'JP 7/12/2021 20:32:31' prior: 50814979!
withRows: rowsTitles withColor: aColor withPreviewModel: aPreviewModel withRefactoringModel: aRefactoringModel

	| rowsSeparation recommendedHeight numberOfRows columnsTitlesRow changeOrderButtons tableWidth inputColumnsTitles |

	backgroundColor := aColor.
	rowModels := OrderedCollection new.
	previewModel := aPreviewModel.
	refactoringModel := aRefactoringModel.
	variablesToParametrize := rowsTitles.

	rowsSeparation := 4.
	self separation: rowsSeparation.

	"Calculate table height"
	numberOfRows := (rowsTitles size + 1).
	recommendedHeight :=  self rowHeight * numberOfRows + (rowsSeparation * (numberOfRows + 1)) * 1.1.

	"Calculate column widths"
	inputColumnsTitles := #('Keyword' 'Parameter name').
	columnWidths := self columnWidthsRequiredForRowTitles: rowsTitles forInputColumns: inputColumnsTitles size.

	"Calculate table width"
	tableWidth := columnWidths sum + (self columnSeparation * (columnWidths size + 1)) * 1.1.

	self layoutSpec: (LayoutSpec fixedWidth: tableWidth fixedHeight: recommendedHeight).

	"Buid the columns titles row"
	columnsTitlesRow := self buildColumnTitlesRowFor: inputColumnsTitles.
	self addMorph: columnsTitlesRow layoutSpec: self rowsLayoutSpec.

	"Build the input rows"
	rowsTitles withIndexDo: [:aRowTitle :index | | aRow changeOrderModel keywordInputMorph inputMorphLayoutSpec parameternameInputMorph |
		aRow := LayoutMorph newRow.
		aRow color: self backgroundColor; separation: self columnSeparation.

		aRow
			addMorph: (LabelMorph contents: aRowTitle)
			layoutSpec: (LayoutSpec fixedWidth: (columnWidths at: 1)).

		inputMorphLayoutSpec := LayoutSpec fixedWidth: (columnWidths at: 2) fixedHeight: self rowHeight.

		keywordInputMorph := self buildInputMorphWith: (aRefactoringModel keywordModelOf: aRowTitle).
		aRow addMorph: keywordInputMorph layoutSpec: inputMorphLayoutSpec.

		parameternameInputMorph := self buildInputMorphWith: (aRefactoringModel parameterModelOf: aRowTitle).
		aRow addMorph: parameternameInputMorph layoutSpec: inputMorphLayoutSpec.

		self needsToReorderRows ifTrue: [
			changeOrderModel := ChangeRowOrderButtonModel for: (rowsTitles size - (index - 1)) notifying: self.
			rowModels addFirst: changeOrderModel.
			changeOrderButtons := self buildChangeOrderButtonsWith: changeOrderModel.
			aRow addMorph: changeOrderButtons layoutSpec: (LayoutSpec fixedWidth: (columnWidths last))].

		self addMorph: aRow layoutSpec: self rowsLayoutSpec.
	].! !

----QUIT----(12 July 2021 20:43:01) CuisUniversity-4532.image priorSource: 17058845!

----STARTUP---- (12 July 2021 20:43:20) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


!classDefinition: #SummaryMaker category: 'ServiciosFinancieros2' stamp: 'JP 7/12/2021 20:45:40'!
Object subclass: #SummaryMaker
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!SummaryMaker class methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:45:40'!
for: anAccount
	^self new initializeFor: anAccount! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:45:40'!
initializeFor: anAccount
	account := anAccount.! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:45:40'!
compute

	^account transactions 
	inject: 0 * peso
	into: [ :currentTransferNet :transaction | transaction affectTransferNet: currentTransferNet ]! !
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:45:40' prior: 50864394!
transferNet
	^(SummaryMaker for: self) compute! !

----SNAPSHOT----(12 July 2021 20:46:05) CuisUniversity-4532.image priorSource: 17064161!

!classRenamed: #SummaryMaker as: #TransferNetMaker stamp: 'JP 7/12/2021 20:47:03'!
Smalltalk renameClassNamed: #SummaryMaker as: #TransferNetMaker!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:47:03' prior: 50864938!
transferNet
	^(TransferNetMaker for: self) compute! !

!classDefinition: #SummaryMakerr category: 'ServiciosFinancieros2' stamp: 'JP 7/12/2021 20:48:13'!
Object subclass: #SummaryMakerr
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!SummaryMakerr class methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:48:13'!
for: anAccount
	^self new initializeFor: anAccount! !
!SummaryMakerr methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:48:13'!
initializeFor: anAccount
	account := anAccount.! !
!SummaryMakerr methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:48:13'!
compute
	
	| summary |
	summary := OrderedCollection new.
	
	account transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', account balance asString.
	^summary ! !
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:48:13' prior: 50864303!
summary
	^(SummaryMakerr for: self) compute! !

----SNAPSHOT----(12 July 2021 20:48:28) CuisUniversity-4532.image priorSource: 17065329!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:48:48' prior: 50864983!
summary
	^(SummaryMakerr for: self) compute! !

Object subclass: #SummaryMaker
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #SummaryMaker category: 'ServiciosFinancieros2' stamp: 'JP 7/12/2021 20:49:04'!
Object subclass: #SummaryMaker
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:49:19' prior: 50864991!
summary
	^(SummaryMaker for: self) compute! !

!classRemoval: #SummaryMakerr stamp: 'JP 7/12/2021 20:49:25'!
Object subclass: #SummaryMakerr
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:26:54' prior: 50865008!
summary
	
	| summary |
	summary := OrderedCollection new.
	
	self transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', self balance asString.
	^summary ! !

!classRemoval: #SummaryMaker stamp: 'JP 7/12/2021 20:50:12'!
Object subclass: #SummaryMaker
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #SummaryMaker category: 'ServiciosFinancieros2' stamp: 'JP 7/12/2021 20:50:40'!
Object subclass: #SummaryMaker
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!SummaryMaker class methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:50:40'!
for: anAccount
	^self new initializeFor: anAccount! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:50:40'!
initializeFor: anAccount
	account := anAccount.! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:50:40'!
compute
	
	| summary |
	summary := OrderedCollection new.
	
	account transactions do: [:aTransaction | summary add: aTransaction asString].
	
	summary add: 'Balance = ', account balance asString.
	^summary ! !
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:50:40' prior: 50865019!
summary
	^(SummaryMaker for: self) compute! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:56:57'!
xxx: aReport! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:57:12' overrides: 50865068!
xxx: aReport! !
!TransferLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:57:17' overrides: 50865068!
xxx: aReport! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:57:21' overrides: 50865076!
xxx: aReport! !
!TransferWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:57:24' overrides: 50865076!
xxx: aReport! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:57:28' overrides: 50865068!
xxx: aReport! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:57:37' prior: 50865068!
xxx: aReport

	self subclassResponsibility ! !
!TransferLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:57:42' prior: 50865076 overrides: 50865092!
xxx: aReport

	self subclassResponsibility ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:59:34' prior: 50865072 overrides: 50865092!
xxx: aReport

	aReport incluirDeposito! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:59:40' prior: 50865103 overrides: 50865092!
xxx: aReport

	aReport incluirDeposit! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 20:59:46' prior: 50865108 overrides: 50865092!
xxx: aReport

	aReport includeDeposit! !
!TransferLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:00:43'!
beAddedTo: aReport

	self subclassResponsibility ! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:00:43'!
beAddedTo: aReport! !
!TransferWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:00:43' overrides: 50865117!
beAddedTo: aReport! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:00:44'!
beAddedTo: aReport

	self subclassResponsibility ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:00:44' overrides: 50865131!
beAddedTo: aReport

	aReport includeDeposit! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:00:44' overrides: 50865117!
beAddedTo: aReport! !

!methodRemoval: TransferLeg #xxx: stamp: 'JP 7/12/2021 21:00:44'!
xxx: aReport

	self subclassResponsibility !

!methodRemoval: Withdraw #xxx: stamp: 'JP 7/12/2021 21:00:44'!
xxx: aReport!

!methodRemoval: TransferWithdrawLeg #xxx: stamp: 'JP 7/12/2021 21:00:44'!
xxx: aReport!

!methodRemoval: AccountTransaction #xxx: stamp: 'JP 7/12/2021 21:00:44'!
xxx: aReport

	self subclassResponsibility !

!methodRemoval: Deposit #xxx: stamp: 'JP 7/12/2021 21:00:44'!
xxx: aReport

	aReport includeDeposit!

!methodRemoval: TransferDepositLeg #xxx: stamp: 'JP 7/12/2021 21:00:44'!
xxx: aReport!
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:00:53' prior: 50865136 overrides: 50865131!
beAddedTo: aReport

	aReport addDeposit! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:01:54' prior: 50865141 overrides: 50865117!
beAddedTo: aReport

	aReport addDepositLeg! !
!TransferWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:02:23' prior: 50865127 overrides: 50865117!
beAddedTo: aReport

	aReport addTransferWithdrawLeg! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:02:32' prior: 50865170 overrides: 50865117!
beAddedTo: aReport

	aReport addTransferDepositLeg! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:02:47' prior: 50865122 overrides: 50865131!
beAddedTo: aReport

	aReport addWithdraw! !
!SummaryMaker methodsFor: 'nil' stamp: 'JP 7/12/2021 21:05:04'!
addWithdraw

	! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:06:02' prior: 50865188 overrides: 50865131!
beAddedTo: aReport

	aReport addWithdraw: self! !
!TransferWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:06:11' prior: 50865176 overrides: 50865117!
beAddedTo: aReport

	aReport addTransferWithdrawLeg: self! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:06:17' prior: 50865182 overrides: 50865117!
beAddedTo: aReport

	aReport addTransferDepositLeg: self! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:06:26' prior: 50865164 overrides: 50865131!
beAddedTo: aReport

	aReport addDeposit: self! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:08:03'!
addWithdraw: aWithdraw
	
	^'Extracción por ' , aWithdraw value asString
	! !

!methodRemoval: SummaryMaker #addWithdraw stamp: 'JP 7/12/2021 21:08:08'!
addWithdraw

	!
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:08:58'!
addTransferWithdrawLeg: aTransferWithdrawLeg
	
	^'Salida por transferencia de ' , aTransferWithdrawLeg value asString
	! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:09:19'!
addTransferDepositLeg: aTransferDepositLeg
	
	^'Salida por transferencia de ' , aTransferDepositLeg value asString
	! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:09:36'!
addDeposit: aDeposit
	
	^'Salida por transferencia de ' , aDeposit value asString
	! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:10:15' prior: 50865235!
addTransferDepositLeg: aTransferDepositLeg
	
	^'Entrada por transferencia de '  , aTransferDepositLeg value asString
	! !
!SummaryMaker methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:10:26' prior: 50865242!
addDeposit: aDeposit
	
	^'Depósito por ' , aDeposit value asString
	! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:11:05'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:11:05'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 21:11:05'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:11:05'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 21:11:05'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 21:11:05'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 21:11:05'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:11:05'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:11:05'!
PASSED!
!SummaryMaker methodsFor: 'evaluating' stamp: 'JP 7/12/2021 21:12:54' prior: 50865053!
compute
	
	| summary |
	summary := OrderedCollection new.
	
	account transactions do: [:aTransaction | summary add: (aTransaction beAddedTo: self)].
	
	summary add: 'Balance = ', account balance asString.
	^summary ! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:12:58'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:12:58'!
FAILURE!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 21:12:58'!
FAILURE!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:12:59'!
FAILURE!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 21:12:59'!
FAILURE!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 21:12:59'!
FAILURE!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 21:12:59'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:12:59'!
FAILURE!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:12:59'!
FAILURE!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:13:08'!
FAILURE!
!Deposit methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:14:31' prior: 50865215 overrides: 50865131!
beAddedTo: aReport

	^aReport addDeposit: self! !
!TransferDepositLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:14:37' prior: 50865209 overrides: 50865117!
beAddedTo: aReport

	^aReport addTransferDepositLeg: self! !
!TransferWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:14:41' prior: 50865203 overrides: 50865117!
beAddedTo: aReport

	^aReport addTransferWithdrawLeg: self! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:14:44' prior: 50865197 overrides: 50865131!
beAddedTo: aReport

	^aReport addWithdraw: self! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:14:47'!
PASSED!

!methodRemoval: TransferDepositLeg #asString stamp: 'JP 7/12/2021 21:15:09'!
asString
	
	^'Entrada por transferencia de ' , self value asString!

!methodRemoval: TransferWithdrawLeg #asString stamp: 'JP 7/12/2021 21:15:13'!
asString

	^'Salida por transferencia de ' , self value asString!

!methodRemoval: Withdraw #asString stamp: 'JP 7/12/2021 21:15:18'!
asString

	^'Extracción por ' , self value asString!

!methodRemoval: TransferLeg #asString stamp: 'JP 7/12/2021 21:15:25'!
asString

	self subclassResponsibility!

!methodRemoval: Deposit #asString stamp: 'JP 7/12/2021 21:15:29'!
asString

	^'Depósito por ' , self value asString!

!methodRemoval: AccountTransaction #asString stamp: 'JP 7/12/2021 21:15:33'!
asString

	self subclassResponsibility !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:15:36'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:15:37'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 21:15:37'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:15:37'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 21:15:37'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 21:15:37'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 21:15:37'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:15:37'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:15:37'!
PASSED!

!classRenamed: #TransferNetMaker as: #TransferNetCalculator stamp: 'JP 7/12/2021 21:16:53'!
Smalltalk renameClassNamed: #TransferNetMaker as: #TransferNetCalculator!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:16:53' prior: 50864950!
transferNet
	^(TransferNetCalculator for: self) compute! !
!TransferNetCalculator methodsFor: 'evaluating' stamp: 'JP 7/12/2021 21:21:20' prior: 50864930!
compute

	^account transactions sum: [:transaction | transaction beAddedTo: self]! !

----End fileIn of D:\Admin\Descargas\Imagen servicios 2\Packages\TerseGuide.pck.st----!
!TransferNetCalculator methodsFor: 'nil' stamp: 'JP 7/12/2021 21:24:30'!
addWithdraw: aWithdraw! !
!TransferNetCalculator methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:24:45'!
addTransferLegWithdraw: aTransferLegWithdraw! !
!TransferNetCalculator methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:25:03'!
addTransferWithdrawLeg: aTransferWithdrawLeg! !

!methodRemoval: TransferNetCalculator #addTransferLegWithdraw: stamp: 'JP 7/12/2021 21:25:05'!
addTransferLegWithdraw: aTransferLegWithdraw!
!TransferNetCalculator methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:25:16'!
addTransferDepositLeg: aTransferDepositLeg! !
!TransferNetCalculator methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:25:25'!
addDeposit: aDeposit! !
!TransferNetCalculator methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:25:37' prior: 50868419!
addDeposit: aDeposit

	^0 * peso! !
!TransferNetCalculator methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:26:10' prior: 50868405!
addTransferWithdrawLeg: aTransferWithdrawLeg

	^aTransferWithdrawLeg value negated ! !
!TransferNetCalculator methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:26:27' prior: 50868396!
addWithdraw: aWithdraw

	^0 * peso! !
!TransferNetCalculator methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:26:39' prior: 50868414!
addTransferDepositLeg: aTransferDepositLeg

	^aTransferDepositLeg value ! !

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:26:50'!
ERROR!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/12/2021 21:26:51'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/12/2021 21:26:51'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/12/2021 21:26:51'!
ERROR!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:26:51'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:26:51'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:27:07'!
ERROR!
!TransferNetCalculator methodsFor: 'evaluating' stamp: 'JP 7/12/2021 21:27:38' prior: 50865465!
compute

	^account transactions sum: [:transaction | transaction beAddedTo: self] ifEmpty: [^ 0 * peso]! !

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:27:41'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/12/2021 21:27:41'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/12/2021 21:27:41'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/12/2021 21:27:41'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:27:41'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:27:41'!
PASSED!

!methodRemoval: Deposit #affectTransferNet: stamp: 'JP 7/12/2021 21:27:49'!
affectTransferNet: aTransferNet

	^aTransferNet!

!methodRemoval: AccountTransaction #affectTransferNet: stamp: 'JP 7/12/2021 21:27:56'!
affectTransferNet: aTransferNet

	self subclassResponsibility !

!methodRemoval: TransferLeg #affectTransferNet: stamp: 'JP 7/12/2021 21:28:05'!
affectTransferNet: aTransferNet

	self subclassResponsibility !
!TransferLeg methodsFor: 'nil' stamp: 'JP 7/12/2021 21:28:19' overrides: 50860467!
affectBalance: aBalance

	self subclassResponsibility ! !

!methodRemoval: TransferDepositLeg #affectTransferNet: stamp: 'JP 7/12/2021 21:28:38'!
affectTransferNet: aTransferNet

	^aTransferNet + self value!

!methodRemoval: TransferWithdrawLeg #affectTransferNet: stamp: 'JP 7/12/2021 21:28:42'!
affectTransferNet: aTransferNet

	^aTransferNet - self value!

!methodRemoval: Withdraw #affectTransferNet: stamp: 'JP 7/12/2021 21:28:45'!
affectTransferNet: aTransferNet

	^aTransferNet!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/12/2021 21:28:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/12/2021 21:28:50'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/12/2021 21:28:51'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/12/2021 21:28:51'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/12/2021 21:28:51'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/12/2021 21:28:51'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/12/2021 21:28:51'!
PASSED!

----SNAPSHOT----(12 July 2021 21:28:56) CuisUniversity-4532.image priorSource: 17066766!

Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #Report category: 'ServiciosFinancieros2' stamp: 'JP 7/12/2021 21:29:48'!
Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

Report subclass: #SummaryMaker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #SummaryMaker category: 'ServiciosFinancieros2' stamp: 'JP 7/12/2021 21:30:24'!
Report subclass: #SummaryMaker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

Report subclass: #TransferNetCalculator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #TransferNetCalculator category: 'ServiciosFinancieros2' stamp: 'JP 7/12/2021 21:30:42'!
Report subclass: #TransferNetCalculator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

Report subclass: #SummaryMaker
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

Report subclass: #SummaryMaker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #SummaryMaker category: 'ServiciosFinancieros2' stamp: 'JP 7/12/2021 21:32:06'!
Report subclass: #SummaryMaker
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!Report methodsFor: 'nil' stamp: 'JP 7/12/2021 21:32:45'!
compute

	self subclassResponsibility ! !
!Report methodsFor: 'nil' stamp: 'JP 7/12/2021 21:33:06'!
initializeFor: anAccount

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:33:09' prior: 50868754!
initializeFor: anAccount

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:33:47'!
addDeposit: aDeposit

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:33:57'!
addWithdraw: aWithdraw

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:34:28'!
addTransferWithdrawLeg: aTransferWithdrawLeg

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'JP 7/12/2021 21:34:35'!
addTransferDepositLeg: aTransferDepositLeg

	self subclassResponsibility ! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:34:39'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:34:40'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/12/2021 21:34:40'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/12/2021 21:34:40'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/12/2021 21:34:40'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/12/2021 21:34:40'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/12/2021 21:34:40'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:34:40'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/12/2021 21:34:41'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/12/2021 21:34:42'!
PASSED!

----SNAPSHOT----(12 July 2021 21:35:19) CuisUniversity-4532.image priorSource: 17185405!

----SNAPSHOT----(12 July 2021 21:35:34) CuisUniversity-4532.image priorSource: 17193412!

----SNAPSHOT----(12 July 2021 21:36:22) CuisUniversity-4532.image priorSource: 17193502!

----QUIT----(12 July 2021 21:36:27) CuisUniversity-4532.image priorSource: 17193592!

----STARTUP---- (12 July 2021 21:54:17) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


----QUIT----(12 July 2021 21:54:24) CuisUniversity-4532.image priorSource: 17193682!

----STARTUP---- (14 July 2021 16:05:15) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:08:23'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:08:23'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/14/2021 16:08:23'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:08:23'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/14/2021 16:08:24'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:08:24'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/14/2021 16:08:24'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:08:24'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:08:24'!
PASSED!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:10:07' prior: 50862465!
test01AccountSummaryBalanceIs0PesosOnEmptyAccount
	
	| anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	
	summary := (SummaryMaker for: anAccount) compute.
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:10:17' prior: 50869000!
test01AccountSummaryBalanceIs0PesosOnEmptyAccount
	
	| anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	
	summary := (SummaryMaker for: anAccount) compute.
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:10:50' prior: 50862485!
test02DepositTransactionShowsOnSummary
	
	| anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	summary := (SummaryMaker for: anAccount) compute.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:10:58' prior: 50869026!
test02DepositTransactionShowsOnSummary
	
	| anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	summary := (SummaryMaker for: anAccount) compute.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:11:13' prior: 50869013!
test01AccountSummaryBalanceIs0PesosOnEmptyAccount
	
	| anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	summary := (SummaryMaker for: anAccount) compute.
	
	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:11:19' prior: 50862567!
test03MultipleTransactionsShowOnSummary
	
	| anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Deposit register: 5 * peso on: anAccount.
	summary := (SummaryMaker for: anAccount) compute.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	
	self assert: anAccount summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:11:24' prior: 50869069!
test03MultipleTransactionsShowOnSummary
	
	| anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Deposit register: 5 * peso on: anAccount.
	summary := (SummaryMaker for: anAccount) compute.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:11:33' prior: 50862538!
test04WithdrawTransactionShowsOnSummary
	
	| anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	Withdraw register: 5 * peso on: anAccount.
	summary := (SummaryMaker for: anAccount) compute.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Extracción por 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:12:00' prior: 50862665!
test05TransferDepositLegShowsOnSummary
	
	| anAccount anotherAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	summary := (SummaryMaker for: anotherAccount) compute.
	
	expectedSummary := OrderedCollection with: 'Entrada por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:12:30' prior: 50862631!
test06TransferWithdrawLegShowsOnSummary
	
	| anAccount anotherAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	summary := (SummaryMaker for: anAccount ) compute.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	 
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:12:33' prior: 50869140!
test06TransferWithdrawLegShowsOnSummary
	
	| anAccount anotherAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	summary := (SummaryMaker for: anAccount) compute.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	 
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:13:07' prior: 50862700!
test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio
	
	| aPortfolio expectedSummary summary |
	
	aPortfolio := Portfolio new.
	summary := (SummaryMaker for: aPortfolio) compute.

	expectedSummary := OrderedCollection with: 'Balance = 0 pesos'.
	 
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:13:29' prior: 50862719!
test08CanShowSummaryWithPortfolioWithASingleAccount
	
	| aPortfolio anAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	aPortfolio := Portfolio with: anAccount.
	summary := (SummaryMaker for: aPortfolio) compute.

	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Balance = 10 pesos'.
	 
	self assert: summary equals: expectedSummary! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:13:41' prior: 50862790!
test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts
	
	| aPortfolio anAccount anotherPortfolio anotherAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	summary := (SummaryMaker for: aPortfolio) compute.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Depósito por 5 pesos' with: 'Balance = 15 pesos'.
	 
	self assert: summary equals: expectedSummary! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:13:47'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:13:47'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/14/2021 16:13:47'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:13:47'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/14/2021 16:13:47'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:13:47'!
FAILURE!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/14/2021 16:13:47'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:13:47'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:13:47'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:13:47'!
FAILURE!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:14:12' prior: 50869160!
test06TransferWithdrawLegShowsOnSummary
	
	| anAccount anotherAccount expectedSummary summary |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	summary := (SummaryMaker for: anAccount) compute.
	
	expectedSummary := OrderedCollection with: 'Depósito por 10 pesos' with: 'Salida por transferencia de 5 pesos' with: 'Balance = 5 pesos'.
	 
	self assert: summary equals: expectedSummary! !

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:14:15'!
PASSED!

!methodRemoval: Account #summary stamp: 'JP 7/14/2021 16:14:45'!
summary
	^(SummaryMaker for: self) compute!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:15:33' prior: 50863710!
test01AccountSummaryTransferNetIs0PesosOnEmptyAccount

	| anAccount transferNet |
	anAccount := ReceptiveAccount new.
	transferNet := (TransferNetCalculator for: anAccount) compute
	
	self assert: anAccount transferNet equals: 0 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:15:43' prior: 50869331!
test01AccountSummaryTransferNetIs0PesosOnEmptyAccount

	| anAccount transferNet |
	anAccount := ReceptiveAccount new.
	transferNet := (TransferNetCalculator for: anAccount) compute.
	
	self assert: transferNet equals: 0 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:16:42' prior: 50863753!
test02BothAccountsOfTransferHaveOppositeTransferNet

	| anAccount anotherAccount transferNetAnAccount transferNetAnotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	transferNetAnAccount := (TransferNetCalculator for: anAccount) compute.
	transferNetAnotherAccount := (TransferNetCalculator for: anotherAccount) compute.
	
	self assert: transferNetAnAccount equals: 5 * peso.
	self assert: transferNetAnotherAccount equals: -5 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:16:46' prior: 50869353!
test02BothAccountsOfTransferHaveOppositeTransferNet

	| anAccount anotherAccount transferNetAnAccount transferNetAnotherAccount |
	anAccount := ReceptiveAccount new.
	
	anotherAccount := ReceptiveAccount new.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	
	transferNetAnAccount := (TransferNetCalculator for: anAccount) compute.
	transferNetAnotherAccount := (TransferNetCalculator for: anotherAccount) compute.
	
	self assert: transferNetAnAccount equals: 5 * peso.
	self assert: transferNetAnotherAccount equals: -5 * peso.! !

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/14/2021 16:16:46'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:16:46'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/14/2021 16:16:46'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/14/2021 16:16:46'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/14/2021 16:16:46'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:16:46'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:16:46'!
PASSED!
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:16:56' prior: 50863819!
test03TransferNetIgnoresAnyNonTransferTransactions

	| anAccount anotherAccount transferNetAnAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	transferNetAnAccount := (TransferNetCalculator for: anAccount) compute.
	
	self assert: anAccount transferNet equals: 3 * peso.
	self assert: anotherAccount transferNet equals: -3 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:17:05' prior: 50869422!
test03TransferNetIgnoresAnyNonTransferTransactions

	| anAccount anotherAccount transferNetAnAccount transferNetAnotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	transferNetAnAccount := (TransferNetCalculator for: anAccount) compute.
	transferNetAnotherAccount := (TransferNetCalculator for: anotherAccount) compute.
	
	self assert: anAccount transferNet equals: 3 * peso.
	self assert: anotherAccount transferNet equals: -3 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:17:14' prior: 50869446!
test03TransferNetIgnoresAnyNonTransferTransactions

	| anAccount anotherAccount transferNetAnAccount transferNetAnotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	transferNetAnAccount := (TransferNetCalculator for: anAccount) compute.
	transferNetAnotherAccount := (TransferNetCalculator for: anotherAccount) compute.
	
	self assert: transferNetAnAccount transferNet equals: 3 * peso.
	self assert: transferNetAnotherAccount transferNet equals: -3 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:17:23' prior: 50863859!
test04EmptyPortfolioTransferNetIs0Peso

	| aPortfolio  |
	
	aPortfolio := Portfolio new.
	 
	
	
	self assert: aPortfolio transferNet equals: 0 * peso
	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:17:31' prior: 50869473!
test03TransferNetIgnoresAnyNonTransferTransactions

	| anAccount anotherAccount transferNetAnAccount transferNetAnotherAccount |
	anAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anotherAccount.
	Withdraw register: 2 * peso on: anotherAccount.
	
	Transfer amount: 5 * peso from: anotherAccount to: anAccount.
	Transfer amount: 2 * peso from: anAccount to: anotherAccount.
	
	transferNetAnAccount := (TransferNetCalculator for: anAccount) compute.
	transferNetAnotherAccount := (TransferNetCalculator for: anotherAccount) compute.
	
	self assert: transferNetAnAccount equals: 3 * peso.
	self assert: transferNetAnotherAccount equals: -3 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:17:47' prior: 50869501!
test04EmptyPortfolioTransferNetIs0Peso

	| aPortfolio  transferNet |
	
	aPortfolio := Portfolio new.
	 
	transferNet := (TransferNetCalculator for: aPortfolio) compute.
	
	self assert: transferNet equals: 0 * peso
	! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:18:00' prior: 50863923!
test05CanShowTransferNetWithPortfolioWithASingleAccount

	| aPortfolio anAccount anotherAccount transferNet |
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio := Portfolio with: anAccount.
	
	Transfer amount: 10 * peso from: anotherAccount to: anAccount.
	
	transferNet := (TransferNetCalculator for: aPortfolio) compute.
	
	self assert: transferNet equals: 10 * peso.! !
!TransferNetTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:18:19' prior: 50864001!
test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts

	| aPortfolio anAccount anotherPortfolio anotherAccount outsidePortfolioAccount transferNet |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	anotherAccount := ReceptiveAccount new.
	Deposit register: 5 * peso on: anotherAccount.
	
	anotherPortfolio := Portfolio with: anotherAccount.
	
	aPortfolio := Portfolio with: anAccount with: anotherPortfolio.
	
	outsidePortfolioAccount := ReceptiveAccount new.
	Deposit register: 10 * peso on: anAccount.
	
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	Transfer amount: 2 * peso from: outsidePortfolioAccount to: anotherAccount.
	transferNet := (TransferNetCalculator for: aPortfolio) compute.
	 
	self assert: transferNet equals: 2 * peso.! !

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:18:28'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/14/2021 16:18:29'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/14/2021 16:18:29'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/14/2021 16:18:29'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:18:29'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:18:29'!
PASSED!

!methodRemoval: Account #transferNet stamp: 'JP 7/14/2021 16:18:37'!
transferNet
	^(TransferNetCalculator for: self) compute!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/14/2021 16:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/14/2021 16:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:18:42'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/14/2021 16:18:42'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:18:42'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:18:42'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/14/2021 16:18:42'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/14/2021 16:18:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/14/2021 16:18:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/14/2021 16:18:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/14/2021 16:18:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/14/2021 16:18:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/14/2021 16:18:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/14/2021 16:18:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/14/2021 16:18:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/14/2021 16:18:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/14/2021 16:18:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/14/2021 16:18:46'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/14/2021 16:18:46'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/14/2021 16:18:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/14/2021 16:18:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/14/2021 16:18:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/14/2021 16:18:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/14/2021 16:18:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/14/2021 16:18:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/14/2021 16:18:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/14/2021 16:18:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/14/2021 16:18:48'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:18:48'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/14/2021 16:18:49'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/14/2021 16:18:49'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/14/2021 16:18:49'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:18:50'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:18:50'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/14/2021 16:18:50'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/14/2021 16:18:50'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/14/2021 16:18:51'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/14/2021 16:18:51'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/14/2021 16:18:51'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/14/2021 16:18:51'!
PASSED!

----SNAPSHOT----(14 July 2021 16:19:01) CuisUniversity-4532.image priorSource: 17193878!

----SNAPSHOT----(14 July 2021 16:20:05) CuisUniversity-4532.image priorSource: 17220099!
!Report methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:21:20' prior: 50868759!
initializeFor: anAccount

	account := anAccount.! !

!methodRemoval: TransferNetCalculator #initializeFor: stamp: 'JP 7/14/2021 16:21:28'!
initializeFor: anAccount
	account := anAccount.!

!methodRemoval: SummaryMaker #initializeFor: stamp: 'JP 7/14/2021 16:21:33'!
initializeFor: anAccount
	account := anAccount.!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/14/2021 16:21:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/14/2021 16:21:38'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/14/2021 16:21:39'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/14/2021 16:21:39'!
PASSED!

----SNAPSHOT----(14 July 2021 16:21:43) CuisUniversity-4532.image priorSource: 17220189!

Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #AccountTransaction category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 16:23:58'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

TestCase subclass: #PortfolioTreePrinterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreePrinterTest category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 16:26:26'!
TestCase subclass: #PortfolioTreePrinterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioTreePrinterTest methodsFor: 'nil' stamp: 'JP 7/14/2021 16:27:03'!
test01

	! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:32:17' prior: 50869987!
test01

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Cuenta 1'.
	 
	portfolioTree := (TransferNetCalculator for: aPortfolio) compute.
	expectedTree := OrderedCollection new.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:33:07' prior: 50869991!
test01

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Cuenta 1'.
	 
	portfolioTree := (TransferNetCalculator for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1'.
	
	self assert: portfolioTree equals: expectedTree! !

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 16:33:09'!
ERROR!
!Portfolio class methodsFor: 'nil' stamp: 'JP 7/14/2021 16:39:05'!
named: aName



	! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:40:15' prior: 50870017!
named: aName

	^self new initializeWithName: aName! !

!classDefinition: #Portfolio category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 16:42:43'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!Portfolio methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:42:41'!
initializeWithName: aName

	self initialize.
	
	name := aName ! !
!Portfolio methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:42:49' prior: 50870033!
initializeWithName: aName

	self initialize.
	name := aName ! !
!Portfolio methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:44:18' prior: 50870038!
initializeWithName: aName


	name := aName ! !
!Portfolio methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:44:25' prior: 50870043!
initializeWithName: aName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.
	name := aName ! !
!Portfolio methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:44:43'!
initializeWithNamee: aName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.
	name := aName ! !

!methodRemoval: Portfolio #initializeWithName: stamp: 'JP 7/14/2021 16:44:50'!
initializeWithName: aName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.
	name := aName !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:45:04'!
initializeWithName

	super initialize.
	transactions := OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:45:04'!
initializeWithName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:45:04' prior: 50860404 overrides: 16896425!
initialize

	super initializeWithName.
	transactions := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:45:04' prior: 50870067!
initializeWithName

	super initializeWithName.
	transactions := OrderedCollection new.! !

!methodRemoval: ReceptiveAccount #initialize stamp: 'JP 7/14/2021 16:45:05'!
initialize

	super initializeWithName.
	transactions := OrderedCollection new.!

!methodRemoval: Portfolio #initialize stamp: 'JP 7/14/2021 16:45:05'!
initialize

	accounts := OrderedCollection new.
	parents := OrderedCollection new.!
!Portfolio methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:47:06' prior: 50870072!
initializeWithName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:47:15'!
initializeWithName: aName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.
	name := aName! !

!methodRemoval: Portfolio #initializeWithName stamp: 'JP 7/14/2021 16:47:20'!
initializeWithName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.!

!methodRemoval: Portfolio #initializeWithNamee: stamp: 'JP 7/14/2021 16:47:23'!
initializeWithNamee: aName

	accounts := OrderedCollection new.
	parents := OrderedCollection new.
	name := aName !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:47:48'!
initializeWithName: aName

	| name |
	transactions := OrderedCollection new.
	name := aName! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:48:30' prior: 50870125!
initializeWithName: aName

	| name |
	transactions := OrderedCollection new.
	name := aName! !

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #Portfolio category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 16:48:44'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #Account category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 16:48:56'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:49:15' prior: 50870131!
initializeWithName: aName

	transactions := OrderedCollection new.! !

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #Account category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 16:49:19'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:49:33' overrides: 16896425!
initialize

	transactions := OrderedCollection new.! !

!methodRemoval: ReceptiveAccount #initializeWithName stamp: 'JP 7/14/2021 16:49:39'!
initializeWithName

	super initializeWithName.
	transactions := OrderedCollection new.!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JP 7/14/2021 16:49:49' prior: 50870170!
initializeWithName: aName

	transactions := OrderedCollection new.
	name := aName ! !

!methodRemoval: ReceptiveAccount #initialize stamp: 'JP 7/14/2021 16:49:55'!
initialize

	transactions := OrderedCollection new.!
!ReceptiveAccount class methodsFor: 'nil' stamp: 'JP 7/14/2021 16:51:20' overrides: 16783533!
new

	^self basicNew initializeWithName: self noNameAccount! !
!Account class methodsFor: 'nil' stamp: 'JP 7/14/2021 16:51:56'!
noNameAccount

	^'Nameless Account'! !
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:52:13' prior: 50870208 overrides: 16783533!
new

	^(self basicNew) initializeWithName: self noNameAccount! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:53:47' overrides: 16783533!
new 

	^self basicNew initializeWithName: self noNameAccount ! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:53:50' prior: 50870224 overrides: 16783533!
new 

	^self basicNew initializeWithName: self noNameAccount! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:54:09'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:54:09'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/14/2021 16:54:09'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:54:09'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/14/2021 16:54:09'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:54:09'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/14/2021 16:54:09'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 16:54:10'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/14/2021 16:54:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/14/2021 16:54:11'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 16:54:11'!
FAILURE!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:54:36'!
atest01

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Cuenta 1'.
	 
	portfolioTree := (TransferNetCalculator for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1'.
	
	self assert: portfolioTree equals: expectedTree! !

!methodRemoval: PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 16:54:36'!
test01

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Cuenta 1'.
	 
	portfolioTree := (TransferNetCalculator for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1'.
	
	self assert: portfolioTree equals: expectedTree!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:54:38'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/14/2021 16:54:39'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/14/2021 16:54:40'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/14/2021 16:54:40'!
PASSED!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:54:47'!
test01

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Cuenta 1'.
	 
	portfolioTree := (TransferNetCalculator for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1'.
	
	self assert: portfolioTree equals: expectedTree! !

!methodRemoval: PortfolioTreePrinterTest #atest01 stamp: 'JP 7/14/2021 16:54:47'!
atest01

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Cuenta 1'.
	 
	portfolioTree := (TransferNetCalculator for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1'.
	
	self assert: portfolioTree equals: expectedTree!

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 16:55:03'!
FAILURE!

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 16:55:35'!
Object subclass: #PortfolioTreePrinter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:55:30' prior: 50870585!
test01

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Cuenta 1'.
	 
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinter class methodsFor: 'no messages' stamp: 'JP 7/14/2021 16:56:40'!
for: anAccount
	^self new initializeFor: anAccount! !

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 16:57:02'!
Object subclass: #PortfolioTreePrinter
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioTreePrinter methodsFor: 'no messages' stamp: 'JP 7/14/2021 16:57:01'!
initializeFor: anAccount

	account := anAccount.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:57:43'!
compute

	^OrderedCollection with: 'Cuenta 1'! !

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 16:57:49'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 16:57:49'!
PASSED!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:57:53'!
test02

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Cuenta 1'.
	 
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 16:59:38' prior: 50870659!
test02

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Cuenta 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1'.
	
	self assert: portfolioTree equals: expectedTree! !

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 16:59:42'!
ERROR!
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:00:44'!
named: aName

	self subclassResponsibility ! !
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:00:56' prior: 50870688!
named: aName

	^self new initializeWithName: aName! !

!methodRemoval: Portfolio class #named: stamp: 'JP 7/14/2021 17:01:00'!
named: aName

	^self new initializeWithName: aName!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:02:18'!
initualizeWithName: aName

	self subclassResponsibility ! !
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:02:54'!
initializeWithName: aName

	self subclassResponsibility ! !

!methodRemoval: Account #initualizeWithName: stamp: 'JP 7/14/2021 17:02:54'!
initualizeWithName: aName

	self subclassResponsibility !
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:03:25' prior: 50870693!
named: aName

	self subclassResponsibility! !
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:03:40' prior: 50870716!
named: aName
	
	
	self subclassResponsibility! !
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:03:52' prior: 50870721!
named: aName
	
	self subclassResponsibility! !
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:03:53' prior: 50870726!
named: aName
	
	self subclassResponsibility! !
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:03:58' prior: 50870731!
named: aName
	
	self subclassResponsibility! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:04:05' overrides: 50870736!
named: aName

	^self new initializeWithName: aName! !
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:04:09' overrides: 50870736!
named: aName

	^self new initializeWithName: aName! !
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:04:23' overrides: 16783533!
new

	self subclassResponsibility! !
!Account class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:07:58' prior: 50870736!
named: aName
	
	"Si bien ambos accounts responden este mismo mensaje igual, creemos que subirlo a esta clase seria dañino para la legibilidad del codigo, ya que account es una clase abstracta de la cual no se deberia poder instanciar directamente"
	
	self subclassResponsibility! !

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:08:19'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:08:35'!
named: aName with: anAccount

	^self new 
		add: anAccount;
		yourself! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:08:59' prior: 50870772!
named: aName with: anAccount

	^self named: aName; 
		add: anAccount;
		yourself! !

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:09:12'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:09:37' prior: 50870778!
named: aName with: anAccount

	^(self named: aName) 
		add: anAccount;
		yourself! !

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:09:45'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 17:09:45'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:09:45'!
PASSED!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:10:19' prior: 50870671!
test02

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Cuenta 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:10:37' prior: 50870801!
test02

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Cuenta 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:10:41' prior: 50870817!
test02

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Cuenta 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Cuenta 1' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:12:05' prior: 50870833!
test02

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Cuenta 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Cuenta 1' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:12:27' prior: 50870849!
test02

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:12:35'!
FAILURE!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:13:01' prior: 50870619!
test01

	| aPortfolio   expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioTree equals: expectedTree! !

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:13:05'!
FAILURE!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:18:32' prior: 50870649!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	account isEmpty ifTrue: [tree add: 'Portfolio 1'. ^tree].
	
	tree add: 'Portfolio 1'.
	tree add: '	Cuenta de Lucho'.
	^tree.! !

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 17:18:38'!
ERROR!

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:18:38'!
ERROR!

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 17:18:43'!
ERROR!

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 17:18:49'!
ERROR!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:19:37' prior: 50870899!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: 'Portfolio 1'.
	account  isEmpty ifTrue: [^tree].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:19:47' prior: 50870919!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: 'Portfolio 1'.
	account isEmpty ifTrue: [^tree].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:27:10' prior: 50870928!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: 'Portfolio 1'.
	account accountsIsEmpty ifTrue: [^tree].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 17:27:19'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:27:19'!
PASSED!
!Portfolio methodsFor: 'accounts management' stamp: 'JP 7/14/2021 17:31:14'!
accounts

	^accounts ! !
!Portfolio methodsFor: 'accounts management' stamp: 'JP 7/14/2021 17:31:17' prior: 50870950!
accounts

	^accounts copy! !

Object subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/14/2021 17:32:08'!
Object subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:32:14' prior: 50870937!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: 'Portfolio 1'.
	portfolio accountsIsEmpty ifTrue: [^tree].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:32:18' prior: 50870644!
initializeFor: anAccount

	portfolio := anAccount.! !

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/14/2021 17:32:20'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/14/2021 17:32:21'!
PASSED!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:32:28'!
test03

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:33:36' prior: 50870991!
test03

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:33:52' prior: 50871007!
test03

	| aPortfolio anotherPortfolio anAccount anotherAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:37:12' prior: 50871023!
test03

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de JuanJr'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:39:20' prior: 50871040!
test03

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	self assert: portfolioTree equals: expectedTree! !

!testRun: #PortfolioTreePrinterTest #test03 stamp: 'JP 7/14/2021 17:39:23'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:40:06'!
named: aName with: anAccount with: anotherAccount

	^(self named: aName)
		add: anAccount;
		add: anotherAccount;
		yourself! !

!testRun: #PortfolioTreePrinterTest #test03 stamp: 'JP 7/14/2021 17:40:23'!
FAILURE!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:41:05' prior: 50870972!
compute
	
	| tree |
	tree := OrderedCollection new.

	portfolio accounts ifTrue: [^tree].
	
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:41:33' prior: 50871105!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: portfolio name.
	portfolio accounts ifTrue: [^tree].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!Portfolio methodsFor: 'nil' stamp: 'JP 7/14/2021 17:41:58' overrides: 16882612!
name

	^name! !
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:42:05' overrides: 16882612!
name

	^name! !

!methodRemoval: Portfolio #name stamp: 'JP 7/14/2021 17:42:12'!
name

	^name!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:42:28' prior: 50871112!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: portfolio name.
	
	portfolio accounts do: [^tree].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/14/2021 17:43:58' prior: 50871131!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: portfolio name.
	
	portfolio accounts do: [].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !

----SNAPSHOT----(14 July 2021 17:46:58) CuisUniversity-4532.image priorSource: 17225842!

----QUIT----(14 July 2021 17:47:00) CuisUniversity-4532.image priorSource: 17263898!

----STARTUP---- (14 July 2021 17:47:11) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


----QUIT----(14 July 2021 17:47:59) CuisUniversity-4532.image priorSource: 17263988!

----STARTUP---- (15 July 2021 14:17:43) as D:\Admin\Descargas\Imagen servicios 2\CuisUniversity-4532.image!


!testRun: #PortfolioTreePrinterTest #test03 stamp: 'JP 7/15/2021 14:21:55'!
ERROR!

!testRun: #PortfolioTreePrinterTest #test03 stamp: 'JP 7/15/2021 14:21:55'!
ERROR!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:26:36' prior: 50871140!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: portfolio name.
	
	portfolio accounts do: [].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:27:58' prior: 50871169!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: portfolio name.
	
	portfolio accounts do: [].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:29:41' prior: 50871178!
compute
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: portfolio name.
	
	portfolio accounts do: [].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:31:36'!
writeAccountWith: anIdentation
	
	| tree |
	tree := OrderedCollection new.
	
	tree add: portfolio name.
	
	portfolio accounts do: [].
	
	tree add: '	Cuenta de Lucho'.
	^tree.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:31:55' prior: 50870981!
initializeFor: anAccount
	
	portfolio := anAccount.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:32:03' prior: 50871187!
compute
	
	| treee |
	treee := OrderedCollection new.
	
	treee add: portfolio name.
	
	portfolio accounts do: [].
	
	treee add: '	Cuenta de Lucho'.
	^treee.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:32:22' prior: 50871204!
initializeFor: anAccount
	
	portfolio := anAccount.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:32:38' prior: 50871195!
writeAccountWith: anIdentation
	
	| treee |
	treee := OrderedCollection new.
	
	treee add: portfolio name.
	
	portfolio accounts do: [].
	
	treee add: '	Cuenta de Lucho'.
	^treee.! !

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 14:32:47'!
Object subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:32:46' prior: 50871218!
initializeFor: anAccount
	
	portfolio := anAccount.
	report := OrderedCollection new.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:34:03' prior: 50871209!
compute

	self writeAccountWith: ''.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:34:43' prior: 50871248!
compute

	self writeAccountWith: ''.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:34:57' prior: 50871253!
compute

	self writeAccountWith: ''.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:35:24' prior: 50871223!
writeAccountWith: anIdentation
	
	report add: portfolio name.
	
	portfolio accounts do: [].
	
	report add: '	Cuenta de Lucho'.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:36:03' prior: 50871258!
compute

	self writeAccountWith: ''.
	^report ! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:36:52' prior: 50871263!
writeAccountWith: anIdentation
	
	report add: (anIdentation, portfolio name).
	
	portfolio accounts do: [].
	
	report add: '	Cuenta de Lucho'.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:37:03' prior: 50871276!
writeAccountWith: anIdentation
	
	report add: (anIdentation , portfolio name).
	
	portfolio accounts do: [].
	
	report add: '	Cuenta de Lucho'.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:39:18'!
writeAccount: anAccount With: anIdentation
	
	report add: (anIdentation , portfolio name).
	
	portfolio accounts do: [].
	
	report add: '	Cuenta de Lucho'.! !

!methodRemoval: PortfolioTreePrinter #writeAccountWith: stamp: 'JP 7/15/2021 14:39:23'!
writeAccountWith: anIdentation
	
	report add: (anIdentation , portfolio name).
	
	portfolio accounts do: [].
	
	report add: '	Cuenta de Lucho'.!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:39:39' prior: 50871292!
writeAccount: anAccount With: anIdentation
	
	report add: (anIdentation , anAccount name).
	
	anAccount accounts do: [].
	
	report add: '	Cuenta de Lucho'.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:39:49' prior: 50871271!
compute

	self writeAccount: portfolio With: ''.
	^report ! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:39:54' prior: 50871317!
compute

	self writeAccount: portfolio WithIdentation: ''.
	^report ! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:40:31'!
writeAccount: anAccount WithIdentation: anIdentation
	
	report add: (anIdentation , anAccount name).
	
	anAccount accounts do: [].
	
	report add: '	Cuenta de Lucho'.! !

!methodRemoval: PortfolioTreePrinter #writeAccount:With: stamp: 'JP 7/15/2021 14:40:33'!
writeAccount: anAccount With: anIdentation
	
	report add: (anIdentation , anAccount name).
	
	anAccount accounts do: [].
	
	report add: '	Cuenta de Lucho'.!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:41:09' prior: 50871328!
writeAccount: anAccount WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , anAccount name).
	newIdentation := anIdentation , '	'.
	
	anAccount accounts do: [].
	
	report add: '	Cuenta de Lucho'.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:41:15' prior: 50871345!
writeAccount: anAccount WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , anAccount name).
	
	newIdentation := anIdentation , '	'.
	
	anAccount accounts do: [].
	
	report add: '	Cuenta de Lucho'.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:43:03' prior: 50871356!
writeAccount: aPortfolio WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , aPortfolio name).
	
	newIdentation := anIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | 
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name).].].
	
	report add: '	Cuenta de Lucho'.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:43:19'!
writePortfolio: aPortfolio WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , aPortfolio name).
	
	newIdentation := anIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | 
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name).].].
	
	report add: '	Cuenta de Lucho'.! !

!methodRemoval: PortfolioTreePrinter #writeAccount:WithIdentation: stamp: 'JP 7/15/2021 14:43:23'!
writeAccount: aPortfolio WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , aPortfolio name).
	
	newIdentation := anIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | 
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name).].].
	
	report add: '	Cuenta de Lucho'.!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:43:33' prior: 50871323!
compute

	self writePortfolio: portfolio WithIdentation: ''.
	^report ! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:44:51' prior: 50871381!
writePortfolio: aPortfolio WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , aPortfolio name).
	
	newIdentation := anIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | 
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name)].
		(anAccount isKindOf: Portfolio ) ifTrue: [report add: (newIdentation , anAccount name)].].
	
	report add: '	Cuenta de Lucho'.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:46:57' prior: 50871415!
writePortfolio: aPortfolio WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , aPortfolio name).
	
	newIdentation := anIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | 
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name)].
		(anAccount isKindOf: Portfolio ) ifTrue: [self writePortfolio: anAccount WithIdentation: newIdentation].].! !

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/15/2021 14:47:11'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/15/2021 14:47:11'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03 stamp: 'JP 7/15/2021 14:47:11'!
PASSED!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:48:02'!
test04

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	self assert: portfolioTree equals: expectedTree! !

!testRun: #PortfolioTreePrinterTest #test04 stamp: 'JP 7/15/2021 14:48:06'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/15/2021 14:48:06'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/15/2021 14:48:06'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03 stamp: 'JP 7/15/2021 14:48:06'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04 stamp: 'JP 7/15/2021 14:48:06'!
PASSED!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:48:25' prior: 50871456!
test04

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	portfolioTree compute.
	
	self assert: portfolioTree equals: expectedTree! !

!testRun: #PortfolioTreePrinterTest #test04 stamp: 'JP 7/15/2021 14:48:26'!
ERROR!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:49:17' prior: 50871500!
test04

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree portfolioTreePrinter |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTreePrinter := (PortfolioTreePrinter for: aPortfolio).
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:50:18' prior: 50871532!
test04

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree portfolioTreePrinter|
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTreePrinter := (PortfolioTreePrinter for: aPortfolio).
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	portfolioTree := portfolioTreePrinter compute.
	portfolioTree := portfolioTreePrinter compute.
	
	self assert: portfolioTree equals: expectedTree! !

!testRun: #PortfolioTreePrinterTest #test04 stamp: 'JP 7/15/2021 14:50:20'!
FAILURE!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:50:36' prior: 50871409!
compute
	
	report := OrderedCollection new.
	self writePortfolio: portfolio WithIdentation: ''.
	^report ! !

!testRun: #PortfolioTreePrinterTest #test01 stamp: 'JP 7/15/2021 14:51:22'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02 stamp: 'JP 7/15/2021 14:51:22'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03 stamp: 'JP 7/15/2021 14:51:22'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04 stamp: 'JP 7/15/2021 14:51:22'!
PASSED!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:51:34' prior: 50870884!
test01

	| aPortfolio expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:52:16' prior: 50871614!
test01

	| aPortfolio expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:53:08'!
test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName

	| aPortfolio expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioTree equals: expectedTree! !

!methodRemoval: PortfolioTreePrinterTest #test01 stamp: 'JP 7/15/2021 14:53:08'!
test01

	| aPortfolio expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioTree equals: expectedTree!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:53:46'!
test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree! !

!methodRemoval: PortfolioTreePrinterTest #test02 stamp: 'JP 7/15/2021 14:53:46'!
test02

	| aPortfolio anAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho'.
	
	self assert: portfolioTree equals: expectedTree!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:55:14'!
test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	self assert: portfolioTree equals: expectedTree! !

!methodRemoval: PortfolioTreePrinterTest #test03 stamp: 'JP 7/15/2021 14:55:14'!
test03

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	self assert: portfolioTree equals: expectedTree!
!PortfolioTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 14:56:12'!
test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree portfolioTreePrinter|
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTreePrinter := (PortfolioTreePrinter for: aPortfolio).
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	portfolioTree := portfolioTreePrinter compute.
	portfolioTree := portfolioTreePrinter compute.
	
	self assert: portfolioTree equals: expectedTree! !

!methodRemoval: PortfolioTreePrinterTest #test04 stamp: 'JP 7/15/2021 14:56:13'!
test04

	| aPortfolio anotherPortfolio anAccount anotherAccount aThirdAccount expectedTree portfolioTree portfolioTreePrinter|
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'.
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	aThirdAccount := ReceptiveAccount named: 'Cuenta de Serge'.
	
	anotherPortfolio := Portfolio named: 'Portfolio de Ayudantes' with: anotherAccount with: aThirdAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	portfolioTreePrinter := (PortfolioTreePrinter for: aPortfolio).
	
	expectedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '	Portfolio de Ayudantes' with: '		Cuenta de Juan' with: '		Cuenta de Serge'.
	
	portfolioTree := portfolioTreePrinter compute.
	portfolioTree := portfolioTreePrinter compute.
	
	self assert: portfolioTree equals: expectedTree!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:02:51' prior: 50871596!
compute
	
	report := report clear.
	self writePortfolio: portfolio WithIdentation: ''.
	^report ! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:03:04' prior: 50871817!
compute
	
	report := OrderedCollection new.
	self writePortfolio: portfolio WithIdentation: ''.
	^report ! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:03:34' prior: 50871824!
compute
	
	report := OrderedCollection new.
	self writePortfolio: portfolio WithIdentation: ''.
	^report copy! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 15:03:50'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/15/2021 15:03:50'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/15/2021 15:03:51'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/15/2021 15:03:52'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/15/2021 15:03:52'!
PASSED!
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:09:44'!
beAddedTo: aReport

	! !
!Account methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:09:50' prior: 50872015!
beAddedTo: aReport

	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:10:05' overrides: 50872019!
beAddedTo: aReport

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'JP 7/15/2021 15:10:08' overrides: 50872019!
beAddedTo: aReport

	self subclassResponsibility ! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:11:09' prior: 50871432!
writePortfolio: aPortfolio WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , aPortfolio name).
	
	newIdentation := anIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name)].
		(anAccount isKindOf: Portfolio ) ifTrue: [self writePortfolio: anAccount WithIdentation: newIdentation].].! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:11:36'!
addReceptiveAccount: aReceptiveAccount! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:11:49'!
addPortfolio: aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:12:08' prior: 50872024 overrides: 50872019!
beAddedTo: aReport

	aReport addPortfolio: self.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:12:18' prior: 50872029 overrides: 50872019!
beAddedTo: aReport

	aReport addReceptiveAccount: self.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:20:19' prior: 50872034!
writePortfolio: aPortfolio WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , aPortfolio name).
	
	newIdentation := anIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name)].
		(anAccount isKindOf: Portfolio ) ifTrue: [self writePortfolio: anAccount WithIdentation: newIdentation].].! !

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 15:20:52'!
Object subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio report currentIdentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:20:51' prior: 50872051!
addReceptiveAccount: aReceptiveAccount

	report add: (currentIdentation , aReceptiveAccount name)! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:21:17' prior: 50872056!
addPortfolio: aPortfolio

	self writePortfolio: aPortfolio WithIdentation: currentIdentation ! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:24:35'!
writePortfolio: aPortfolio
	
	| newIdentation |
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name)].
		(anAccount isKindOf: Portfolio ) ifTrue: [self writePortfolio: anAccount WithIdentation: newIdentation].].
	
	! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:24:55' prior: 50872113!
writePortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (currentIdentation , anAccount name)].
		(anAccount isKindOf: Portfolio ) ifTrue: [self writePortfolio: anAccount WithIdentation: currentIdentation].].
	
	! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:26:04' prior: 50872130!
writePortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:26:14' prior: 50872107!
addPortfolio: aPortfolio

	self writePortfolio: aPortfolio! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:26:59' prior: 50872147!
writePortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	currentIdentation := currentIdentation copyFrom: 1 to: currentIdentation size - 1.
	
	! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:27:05' prior: 50872163!
writePortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).
	
	! !

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 15:27:08'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 15:27:09'!
ERROR!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:27:09'!
ERROR!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 15:27:09'!
ERROR!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 15:27:12'!
ERROR!

!methodRemoval: PortfolioTreePrinter #writePortfolio:WithIdentation: stamp: 'JP 7/15/2021 15:27:25'!
writePortfolio: aPortfolio WithIdentation: anIdentation
	
	| newIdentation |
	report add: (anIdentation , aPortfolio name).
	
	newIdentation := anIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.
		(anAccount isKindOf: ReceptiveAccount) ifTrue: [report add: (newIdentation , anAccount name)].
		(anAccount isKindOf: Portfolio ) ifTrue: [self writePortfolio: anAccount WithIdentation: newIdentation].].!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:27:32' prior: 50871831!
compute
	
	report := OrderedCollection new.
	self writePortfolio: portfolio.
	^report copy! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:27:43' prior: 50871241!
initializeFor: anAccount
	
	portfolio := anAccount.
	report := OrderedCollection new.
	currentIdentation := ''! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:27:58' prior: 50872227!
compute
	
	report := OrderedCollection new.
	currentIdentation := ''.
	
	self writePortfolio: portfolio.
	^report copy! !

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 15:28:09'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 15:28:09'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:28:09'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 15:28:09'!
PASSED!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:29:15' prior: 50872176!
writePortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).
	! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:29:54' prior: 50872157!
addPortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:30:00' prior: 50872241!
compute
	
	report := OrderedCollection new.
	currentIdentation := ''.
	
	self addPortfolio: portfolio.
	^report copy! !

!methodRemoval: PortfolioTreePrinter #writePortfolio: stamp: 'JP 7/15/2021 15:30:07'!
writePortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).
	!

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 15:30:10'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 15:30:10'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:30:10'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 15:30:10'!
PASSED!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:30:29' prior: 50872279!
addPortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).
	self revertIdentation! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:30:32' prior: 50872329!
addPortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).
	self revertIdentation.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:30:45' prior: 50872342!
addPortfolio: aPortfolio
	
	report add: (currentIdentation , aPortfolio name).
	
	currentIdentation := currentIdentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	self revertIdentation.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:30:58'!
revertIdentation
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:31:25'!
revertIndentation
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).! !

!methodRemoval: PortfolioTreePrinter #revertIdentation stamp: 'JP 7/15/2021 15:31:29'!
revertIdentation
	
	currentIdentation := currentIdentation copyFrom: 1 to: (currentIdentation size - 1).!

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 15:31:41'!
Object subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:31:41' prior: 50872234!
initializeFor: anAccount
	
	portfolio := anAccount.
	report := OrderedCollection new.
	currentIndentation := ''! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:31:41' prior: 50872292!
compute
	
	report := OrderedCollection new.
	currentIndentation := ''.
	
	self addPortfolio: portfolio.
	^report copy! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:31:41' prior: 50872373!
revertIndentation
	
	currentIndentation := currentIndentation copyFrom: 1 to: (currentIndentation size - 1).! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:31:41' prior: 50872356!
addPortfolio: aPortfolio
	
	report add: (currentIndentation , aPortfolio name).
	
	currentIndentation := currentIndentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	self revertIdentation.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:31:41' prior: 50872100!
addReceptiveAccount: aReceptiveAccount

	report add: (currentIndentation , aReceptiveAccount name)! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:31:52' prior: 50872417!
addPortfolio: aPortfolio
	
	report add: (currentIndentation , aPortfolio name).
	
	currentIndentation := currentIndentation , '	'.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	self revertIndentation.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:32:05' prior: 50872435!
addPortfolio: aPortfolio
	
	report add: (currentIndentation , aPortfolio name).
	
	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	self revertIndentation.! !
!PortfolioTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:32:14'!
addIndentation

	currentIndentation := currentIndentation , '	'.! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/15/2021 15:33:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 15:33:42'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 15:33:43'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/15/2021 15:33:43'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/15/2021 15:33:43'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/15/2021 15:33:43'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/15/2021 15:33:43'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/15/2021 15:33:43'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/15/2021 15:33:43'!
PASSED!

----SNAPSHOT----(15 July 2021 15:33:48) CuisUniversity-4532.image priorSource: 17264184!

----SNAPSHOT----(15 July 2021 15:34:12) CuisUniversity-4532.image priorSource: 17311622!

----SNAPSHOT----(15 July 2021 15:36:59) CuisUniversity-4532.image priorSource: 17311712!

TestCase subclass: #PortfolioDetailedTreePrinterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioDetailedTreePrinterTest category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 15:37:43'!
TestCase subclass: #PortfolioDetailedTreePrinterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioDetailedTreePrinterTest methodsFor: 'no messages' stamp: 'JP 7/15/2021 15:41:04'!
test01

	| aPortfolio |
	aPortfolio := Portfolio new.! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:41:27' prior: 50872662!
test01

	| aPortfolio expectedTree portfolioTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioTree := (PortfolioTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioTree equals: expectedTree! !

!classDefinition: #PortfolioDetailedTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 15:41:55'!
Object subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:42:00' prior: 50872668!
test01

	| aPortfolio expectedTree portfolioTree portfolioDetailedTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioTree equals: expectedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:42:13' prior: 50872689!
test01

	| aPortfolio expectedTree  portfolioDetailedTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioDetailedTree equals: expectedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:42:21' prior: 50872703!
test01

	| aPortfolio expectedTree portfolioDetailedTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioDetailedTree equals: expectedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:42:38' prior: 50872717!
test01

	| aPortfolio expectedDetailedTree portfolioDetailedTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:43:16' prior: 50872731!
test01

	| aPortfolio expectedDetailedTree portfolioDetailedTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: 'Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinter methodsFor: 'no messages' stamp: 'JP 7/15/2021 15:43:36'!
compute! !

!classDefinition: #PortfolioDetailedTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 15:43:58'!
Object subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioDetailedTreePrinter methodsFor: 'nil' stamp: 'JP 7/15/2021 15:43:56'!
initializeFor: anAccount
	
	portfolio := anAccount.! !
!PortfolioDetailedTreePrinter class methodsFor: 'no messages' stamp: 'JP 7/15/2021 15:44:06'!
for: anAccount
	^self new initializeFor: anAccount! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:44:44' prior: 50872760!
compute

	^OrderedCollection with: 'Portfolio 1' with: 'Balance = 0'! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 15:44:52'!
PASSED!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:45:01'!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: 'Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:45:20' prior: 50872792!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: 'Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:45:35' prior: 50872807!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1'.
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: 'Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:45:44' prior: 50872824!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount .
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: 'Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:45:45' prior: 50872841!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: 'Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:46:57' prior: 50872859!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho' with: '		Balance = 0' with: '	Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:47:12' prior: 50872783!
compute

	^OrderedCollection with: 'Portfolio 1' with: '	Balance = 0'! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 15:47:16'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 15:47:16'!
FAILURE!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:47:20' prior: 50872746!
test01

	| aPortfolio expectedDetailedTree portfolioDetailedTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: '	Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 15:47:22'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 15:47:22'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 15:47:22'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 15:47:22'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 15:47:37'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 15:47:39'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 15:47:39'!
FAILURE!

!classDefinition: #PortfolioDetailedTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 15:48:36'!
Object subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: 'portfolio report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:48:34' prior: 50872896!
compute
	
	report := OrderedCollection new.
	
	^OrderedCollection with: 'Portfolio 1' with: '	Balance = 0'! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:50:35' prior: 50872953!
compute
	
	report := OrderedCollection new.
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	^OrderedCollection with: 'Portfolio 1' with: '	Balance = 0'! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:51:14' prior: 50872960!
compute
	
	report := OrderedCollection new.
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	^report ! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 15:51:16'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 15:51:16'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 15:51:16'!
FAILURE!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:51:43' prior: 50872971!
compute
	
	report := OrderedCollection new.
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'. ^report
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:51:54' prior: 50872991!
compute
	
	report := OrderedCollection new.
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 15:51:55'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 15:51:55'!
PASSED!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:55:24' prior: 50872877!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho' with: '		Balance = 0' with: '	Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:55:28'!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho' with: '		Balance = 0' with: '	Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 15:57:25' prior: 50873040!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount.
	
	Deposit register: 10 * peso on: anAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '		Depósito por 10 pesos' with: '		Balance = 10 pesos' with: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 15:57:53'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 15:57:53'!
FAILURE!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:02:14' prior: 50873003!
compute
	
	report := OrderedCollection new.
	
	
	
	
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:03:00' prior: 50873087!
compute
	
	report := OrderedCollection new.
	
	report add: portfolio name.
	
	
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:03:01' prior: 50873099!
compute
	
	report := OrderedCollection new.
	
	report add: portfolio name.
	
	
	
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:03:03' prior: 50873112!
compute
	
	report := OrderedCollection new.
	
	report add: portfolio name.
	
	
	
	
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:03:15' prior: 50873125!
compute
	
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:04:00' prior: 50873138!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := SummaryMaker for: (portfolio accounts last). 
	
	
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:04:10' prior: 50873153!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := SummaryMaker for: (portfolio accounts last) compute. 
	
	
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:04:49' prior: 50873170!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := SummaryMaker for: (portfolio accounts last) compute. 
	
	report add: '	' , portfolio name.
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:05:29' prior: 50873188!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := SummaryMaker for: (portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	summary 
	
	
	report add: 'Portfolio 1'.
	
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	report add: '	Cuenta de Lucho'.
	report add: '		Balance = 0'.
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:08:12' prior: 50873207!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := SummaryMaker for: (portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = 0'.
	^report ! !

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 16:08:24'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 16:08:24'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 16:08:24'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 16:08:24'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:08:27'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:08:27'!
ERROR!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:08:27'!
ERROR!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:08:34'!
ERROR!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:08:39'!
ERROR!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:08:53' prior: 50873226!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := SummaryMaker for: (portfolio accounts last compute). 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = 0'.
	^report ! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:08:56'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:08:56'!
ERROR!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:08:56'!
ERROR!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:09:06' prior: 50873275!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := SummaryMaker for: (portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:09:18' prior: 50873300!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := (SummaryMaker for: (portfolio accounts last)) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:09:23' prior: 50873317!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = 0'.
	^report ! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:09:26'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:09:26'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:09:26'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:09:27'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:09:35'!
FAILURE!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:09:49' prior: 50873021!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho' with: '		Balance = 0' with: '	Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:09:55' prior: 50873366!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho' with: '		Balance = 0' with: '	Balance = 0'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:10:57' prior: 50873334!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = 0'.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:11:13' prior: 50873404!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = 0 pesos'.
	^report ! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:11:25' prior: 50873385!
test02

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio 1' with: anAccount.
	
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: '	Cuenta de Lucho' with: '		Balance = 0 pesos' with: '	Balance = 0 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:11:29'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:11:30'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:11:30'!
FAILURE!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:11:41' prior: 50872908!
test01

	| aPortfolio expectedDetailedTree portfolioDetailedTree |
	
	aPortfolio := Portfolio named: 'Portfolio 1'.
	 
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio 1' with: '	Balance = 0 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:11:42'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:11:42'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:11:42'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:11:42'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:11:42'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:11:46'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:11:46'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:11:46'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:11:46'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:11:47'!
FAILURE!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:12:16' prior: 50873059!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount.
	
	Deposit register: 10 * peso on: anAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '		Depósito por 10 pesos' with: '		Balance = 10 pesos' with: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:12:30' prior: 50873512!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount.
	
	Deposit register: 10 * peso on: anAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '		Depósito por 10 pesos' with: '		Balance = 10 pesos' with: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:12:34' prior: 50873535!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount.
	
	Deposit register: 10 * peso on: anAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '		Depósito por 10 pesos' with: '		Balance = 10 pesos' with: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:13:03'!
FAILURE!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:14:44' prior: 50873421!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: portfolio balance.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:14:50' prior: 50873583!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	' , portfolio balance.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:14:57' prior: 50873600!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	' , portfolio balance asString .
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:14:58' prior: 50873617!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	' , portfolio balance asString.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:15:03' prior: 50873635!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	' , portfolio balance.
	^report ! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:15:06'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:15:07'!
ERROR!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:15:07'!
ERROR!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:15:16' prior: 50873653!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	' , portfolio balance asString .
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:15:17' prior: 50873679!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	' , portfolio balance asString.
	^report ! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:15:19'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:15:19'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:15:19'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:15:20'!
FAILURE!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:15:48' prior: 50873697!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	summary := (SummaryMaker for: portfolio accounts last) compute. 
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = ' , portfolio balance asString.
	^report ! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:15:52'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:15:52'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:15:52'!
PASSED!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:18:17' prior: 50873558!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherAccount.
	
	Deposit register: 10 * peso on: anAccount.
	
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '		Depósito por 10 pesos' with: '		Balance = 10 pesos' with: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:18:28' prior: 50873753!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherAccount.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '		Depósito por 10 pesos' with: '		Balance = 10 pesos' with: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:18:46' prior: 50873781!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherAccount.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:19:46' prior: 50873809!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherAccount.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	expectedDetailedTree add: 'Portfolio de Algo3'.
	expectedDetailedTree add: '	Cuenta de Lucho'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:21:09' prior: 50873832!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherAccount.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	expectedDetailedTree add: 'Portfolio de Algo3'.
	expectedDetailedTree add: '	Cuenta de Lucho'.
	expectedDetailedTree add: '		Depósito por 10 pesos'.
	expectedDetailedTree add: '		Salida por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5'.
	expectedDetailedTree add: '	Cuenta de Juan'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:21:42' prior: 50873858!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherAccount.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	expectedDetailedTree add: 'Portfolio de Algo3'.
	expectedDetailedTree add: '	Cuenta de Lucho'.
	expectedDetailedTree add: '		Depósito por 10 pesos'.
	expectedDetailedTree add: '		Salida por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5'.
	expectedDetailedTree add: '	Cuenta de Juan'.
	expectedDetailedTree add: '		Entrada por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5'.
	expectedDetailedTree add: '	Balance = 10'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:22:04' prior: 50873891!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherAccount.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	expectedDetailedTree add: 'Portfolio de Algo3'.
	expectedDetailedTree add: '	Cuenta de Lucho'.
	expectedDetailedTree add: '		Depósito por 10 pesos'.
	expectedDetailedTree add: '		Salida por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Cuenta de Juan'.
	expectedDetailedTree add: '		Entrada por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:22:21'!
test04

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherAccount.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	expectedDetailedTree add: 'Portfolio de Algo3'.
	expectedDetailedTree add: '	Cuenta de Lucho'.
	expectedDetailedTree add: '		Depósito por 10 pesos'.
	expectedDetailedTree add: '		Salida por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Cuenta de Juan'.
	expectedDetailedTree add: '		Entrada por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:12:34' prior: 50873929!
test03

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount.
	
	Deposit register: 10 * peso on: anAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection with: 'Portfolio de Algo3' with: '	Cuenta de Lucho' with: '		Depósito por 10 pesos' with: '		Balance = 10 pesos' with: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:22:43'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 16:22:57'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:23:06'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:23:06'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:23:06'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 16:23:06'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 16:23:06'!
FAILURE!

(OrderedCollection new) do: [:andads | andads ]!

(OrderedCollection new) do: [:andads | andads ]!

(OrderedCollection new) do: [:andads | andads ]!

(OrderedCollection new) do: [:andads | andads ]!

(OrderedCollection new) do: [:andads | andads ]!

(OrderedCollection new) do: [:andads | andads ]!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:27:44' prior: 50873726!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	portfolio accounts do: [:anAccount | summary := (SummaryMaker for: anAccount) compute.].
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = ' , portfolio balance asString.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:27:57' prior: 50874058!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	portfolio accounts do: [:anAccount | summary := (SummaryMaker for: anAccount) compute.].
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = ' , portfolio balance asString.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:28:02' prior: 50874077!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	portfolio accounts do: [:anAccount | summary := (SummaryMaker for: anAccount) compute.].
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = ' , portfolio balance asString.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:28:32' prior: 50874096!
compute
	
	| summary |
	report := OrderedCollection new.
	
	report add: portfolio name.
	portfolio accounts ifEmpty: [report add: '	Balance = 0 pesos'. ^report].
	
	portfolio accounts do: [:anAccount | summary := (SummaryMaker for: anAccount) compute.
		report add: '	' , anAccount name.
		].
	
	report add: '	' , portfolio accounts last name.
	
	report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
	
	report add: '	Balance = ' , portfolio balance asString.
	^report ! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:29:06' prior: 50874115!
compute
	
	| summary |
	report := OrderedCollection new.
	report add: portfolio name.
	
	portfolio accounts do: [:anAccount | summary := (SummaryMaker for: anAccount) compute.
		report add: '	' , anAccount name.
		report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
		].
	
	report add: '	Balance = ' , portfolio balance asString.
	^report ! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:29:10'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:29:10'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:29:10'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 16:29:10'!
PASSED!
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:30:42'!
test05

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount anotherPortfolio |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	anotherPortfolio := Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	expectedDetailedTree add: 'Portfolio de Algo3'.
	expectedDetailedTree add: '	Cuenta de Lucho'.
	expectedDetailedTree add: '		Depósito por 10 pesos'.
	expectedDetailedTree add: '		Salida por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Cuenta de Juan'.
	expectedDetailedTree add: '		Entrada por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:31:32' prior: 50874162!
test05

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount anotherPortfolio |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	anotherPortfolio := Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	expectedDetailedTree add: 'Portfolio de Algo3'.
	expectedDetailedTree add: '	Cuenta de Lucho'.
	expectedDetailedTree add: '		Depósito por 10 pesos'.
	expectedDetailedTree add: '		Salida por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Portfolio de Juan'.
	expectedDetailedTree add: '		Cuenta de Juan'.
	expectedDetailedTree add: '			Entrada por transferencia de 5 pesos'.
	expectedDetailedTree add: '			Balance = 5 pesos'.
	expectedDetailedTree add: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !
!PortfolioDetailedTreePrinterTest methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:32:12' prior: 50874204!
test05

	| aPortfolio expectedDetailedTree portfolioDetailedTree anAccount anotherAccount anotherPortfolio |
	
	anAccount := ReceptiveAccount named: 'Cuenta de Lucho'. 
	anotherAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	anotherPortfolio := Portfolio named: 'Portfolio de Juan' with: anotherAccount.
	
	aPortfolio := Portfolio named: 'Portfolio de Algo3' with: anAccount with: anotherPortfolio.
	
	Deposit register: 10 * peso on: anAccount.
	Transfer amount: 5 * peso from: anAccount to: anotherAccount.
	
	portfolioDetailedTree := (PortfolioDetailedTreePrinter for: aPortfolio) compute.
	expectedDetailedTree := OrderedCollection new.
	
	expectedDetailedTree add: 'Portfolio de Algo3'.
	expectedDetailedTree add: '	Cuenta de Lucho'.
	expectedDetailedTree add: '		Depósito por 10 pesos'.
	expectedDetailedTree add: '		Salida por transferencia de 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Portfolio de Juan'.
	expectedDetailedTree add: '		Cuenta de Juan'.
	expectedDetailedTree add: '			Entrada por transferencia de 5 pesos'.
	expectedDetailedTree add: '			Balance = 5 pesos'.
	expectedDetailedTree add: '		Balance = 5 pesos'.
	expectedDetailedTree add: '	Balance = 10 pesos'.
	
	self assert: portfolioDetailedTree equals: expectedDetailedTree! !

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 16:46:58'!
FAILURE!

!classDefinition: #PortfolioDetailedTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 16:50:56'!
Object subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioDetailedTreePrinter methodsFor: 'nil' stamp: 'JP 7/15/2021 16:50:54'!
addPortfolio: aPortfolio
	
	report add: (currentIndentation , aPortfolio name).
	
	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'nil' stamp: 'JP 7/15/2021 16:51:06'!
addIndentation

	currentIndentation := currentIndentation , '	'.! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:51:19'!
addReceptiveAccount: aReceptiveAccount

	report add: (currentIndentation , aReceptiveAccount name)! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:51:54' prior: 50874135!
compute
	
	| summary |
	report := OrderedCollection new.
	report add: portfolio name.
	
	portfolio accounts do: [:anAccount | summary := (SummaryMaker for: anAccount) compute.
		report add: '	' , anAccount name.
		report addAll: (summary collect: [:aTransactionSentence | '		' , aTransactionSentence]).
		].
	
	report add: '	Balance = ' , portfolio balance asString.
	report.
	
	report := OrderedCollection new.
	currentIndentation := ''.
	
	self addPortfolio: portfolio.
	^report copy! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:52:08' prior: 50872772!
initializeFor: anAccount
	
	portfolio := anAccount.
	report := OrderedCollection new.
	currentIndentation := ''! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:52:17'!
revertIndentation
	
	currentIndentation := currentIndentation copyFrom: 1 to: (currentIndentation size - 1).! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:54:35' prior: 50874318!
addReceptiveAccount: aReceptiveAccount

	| summary |
	report add: (currentIndentation , aReceptiveAccount name).
	self addIndentation.
	
	summary := (SummaryMaker for: aReceptiveAccount) compute.
	report addAll: (summary collect: [:aTransactionSentence | currentIndentation , aTransactionSentence]).
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:55:55' prior: 50874303!
addPortfolio: aPortfolio
	
	report add: (currentIndentation , aPortfolio name).
	
	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	report add: currentIndentation, '	Balance = ' , portfolio balance asString.
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:56:06' prior: 50874325!
compute
	
	report := OrderedCollection new.
	currentIndentation := ''.
	
	self addPortfolio: portfolio.
	^report copy! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:56:11'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:56:12'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:56:12'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 16:56:12'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 16:56:12'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:56:18'!
FAILURE!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:56:48' prior: 50874372!
addPortfolio: aPortfolio
	
	report add: (currentIndentation , aPortfolio name).
	
	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	report add: currentIndentation, 'Balance = ' , portfolio balance asString.
	
	self revertIndentation.! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:56:51'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:56:52'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:56:52'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 16:56:52'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 16:56:52'!
FAILURE!

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 16:56:52'!
FAILURE!
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:58:20' prior: 50874410!
addPortfolio: aPortfolio
	
	report add: (currentIndentation , aPortfolio name).
	
	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	report add: currentIndentation, 'Balance = ' , aPortfolio balance asString.
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 16:58:23' prior: 50874440!
addPortfolio: aPortfolio
	
	report add: (currentIndentation , aPortfolio name).
	
	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	report add: currentIndentation, 'Balance = ' , aPortfolio balance asString.
	
	self revertIndentation.! !

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 16:58:24'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 16:58:25'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 16:58:25'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 16:58:25'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 16:58:25'!
PASSED!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 17:01:53'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/15/2021 17:01:53'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/15/2021 17:01:53'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/15/2021 17:01:53'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/15/2021 17:01:53'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/15/2021 17:01:53'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/15/2021 17:01:53'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 17:01:53'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 17:01:54'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/15/2021 17:01:55'!
PASSED!

Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #Report category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:05:35'!
Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classRenamed: #Report as: #TransactionReport stamp: 'JP 7/15/2021 17:05:43'!
Smalltalk renameClassNamed: #Report as: #TransactionReport!

Object subclass: #AccountReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #AccountReport category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:05:58'!
Object subclass: #AccountReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

AccountReport subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioDetailedTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:06:07'!
AccountReport subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

AccountReport subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:06:22'!
AccountReport subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!AccountReport methodsFor: 'no messages' stamp: 'JP 7/15/2021 17:08:04'!
addReceptiveAccount: aReceptiveAccount

	self subclassResponsibility ! !
!AccountReport methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 17:08:16'!
addPortfolio: aPortfolio

	self subclassResponsibility ! !
!AccountReport methodsFor: 'nil' stamp: 'JP 7/15/2021 17:10:05'!
initializeFor: anAccount

	self subclassResponsibility ! !
!AccountReport class methodsFor: 'no messages' stamp: 'JP 7/15/2021 17:10:25'!
for: anAccount
	^self new initializeFor: anAccount! !

!methodRemoval: PortfolioDetailedTreePrinter class #for: stamp: 'JP 7/15/2021 17:10:30'!
for: anAccount
	^self new initializeFor: anAccount!

!methodRemoval: PortfolioTreePrinter class #for: stamp: 'JP 7/15/2021 17:10:34'!
for: anAccount
	^self new initializeFor: anAccount!

Object subclass: #AccountReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #AccountReport category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:13:25'!
Object subclass: #AccountReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

----SNAPSHOT----(15 July 2021 17:23:20) CuisUniversity-4532.image priorSource: 17311802!

Object subclass: #PortfolioTreeReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreeReport category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:24:46'!
Object subclass: #PortfolioTreeReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

AccountReport subclass: #PortfolioTreeReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreeReport category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:24:55'!
AccountReport subclass: #PortfolioTreeReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

PortfolioTreeReport subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioDetailedTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:25:03'!
PortfolioTreeReport subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

PortfolioTreeReport subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:25:11'!
PortfolioTreeReport subclass: #PortfolioTreePrinter
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

Object subclass: #PortfolioTreeReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreeReport category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:25:49'!
Object subclass: #PortfolioTreeReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

AccountReport subclass: #PortfolioTreeReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreeReport category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:26:21'!
AccountReport subclass: #PortfolioTreeReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

AccountReport subclass: #PortfolioTreeReport
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

PortfolioTreeReport subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioDetailedTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:26:56'!
PortfolioTreeReport subclass: #PortfolioDetailedTreePrinter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

PortfolioTreeReport subclass: #PortfolioTreePrinter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreePrinter category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:27:01'!
PortfolioTreeReport subclass: #PortfolioTreePrinter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

AccountReport subclass: #PortfolioTreeReport
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!

!classDefinition: #PortfolioTreeReport category: 'ServiciosFinancieros2' stamp: 'JP 7/15/2021 17:27:05'!
AccountReport subclass: #PortfolioTreeReport
	instanceVariableNames: 'portfolio report currentIndentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros2'!
!PortfolioTreeReport methodsFor: 'no messages' stamp: 'JP 7/15/2021 17:27:22' overrides: 50874736!
addPortfolio: aPortfolio

	self subclassResponsibility ! !
!PortfolioTreeReport methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 17:27:33' prior: 50874905 overrides: 50874736!
addPortfolio: aPortfolio

	self subclassResponsibility ! !
!PortfolioTreeReport methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 17:27:43' overrides: 50874731!
addReceptiveAccount: aReceptiveAccount

	self subclassResponsibility ! !
!PortfolioTreeReport methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 17:27:51'!
addIndentation

	currentIndentation := currentIndentation , '	'.! !
!PortfolioTreeReport methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 17:27:59'!
compute
	
	report := OrderedCollection new.
	currentIndentation := ''.
	
	self addPortfolio: portfolio.
	^report copy! !
!PortfolioTreeReport methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 17:28:08' overrides: 50874740!
initializeFor: anAccount
	
	portfolio := anAccount.
	report := OrderedCollection new.
	currentIndentation := ''! !
!PortfolioTreeReport methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 17:28:17'!
revertIndentation
	
	currentIndentation := currentIndentation copyFrom: 1 to: (currentIndentation size - 1).! !

!methodRemoval: PortfolioTreePrinter #revertIndentation stamp: 'JP 7/15/2021 17:28:26'!
revertIndentation
	
	currentIndentation := currentIndentation copyFrom: 1 to: (currentIndentation size - 1).!

!methodRemoval: PortfolioDetailedTreePrinter #revertIndentation stamp: 'JP 7/15/2021 17:28:36'!
revertIndentation
	
	currentIndentation := currentIndentation copyFrom: 1 to: (currentIndentation size - 1).!

!methodRemoval: PortfolioDetailedTreePrinter #compute stamp: 'JP 7/15/2021 17:28:47'!
compute
	
	report := OrderedCollection new.
	currentIndentation := ''.
	
	self addPortfolio: portfolio.
	^report copy!

!methodRemoval: PortfolioDetailedTreePrinter #initializeFor: stamp: 'JP 7/15/2021 17:28:50'!
initializeFor: anAccount
	
	portfolio := anAccount.
	report := OrderedCollection new.
	currentIndentation := ''!

!methodRemoval: PortfolioDetailedTreePrinter #addIndentation stamp: 'JP 7/15/2021 17:28:54'!
addIndentation

	currentIndentation := currentIndentation , '	'.!

!methodRemoval: PortfolioTreePrinter #addIndentation stamp: 'JP 7/15/2021 17:29:02'!
addIndentation

	currentIndentation := currentIndentation , '	'.!

!methodRemoval: PortfolioTreePrinter #compute stamp: 'JP 7/15/2021 17:29:04'!
compute
	
	report := OrderedCollection new.
	currentIndentation := ''.
	
	self addPortfolio: portfolio.
	^report copy!

!methodRemoval: PortfolioTreePrinter #initializeFor: stamp: 'JP 7/15/2021 17:29:08'!
initializeFor: anAccount
	
	portfolio := anAccount.
	report := OrderedCollection new.
	currentIndentation := ''!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 17:29:12'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/15/2021 17:29:12'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/15/2021 17:29:12'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/15/2021 17:29:12'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/15/2021 17:29:12'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/15/2021 17:29:12'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/15/2021 17:29:12'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:29:13'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/15/2021 17:29:14'!
PASSED!

----SNAPSHOT----(15 July 2021 17:29:40) CuisUniversity-4532.image priorSource: 17379816!
!AccountReport methodsFor: 'as yet unclassified' stamp: 'JP 7/15/2021 17:29:50'!
compute 

	self subclassResponsibility ! !

----SNAPSHOT----(15 July 2021 17:30:03) CuisUniversity-4532.image priorSource: 17393211!

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 17:38:08'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/15/2021 17:38:08'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/15/2021 17:38:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:38:10'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/15/2021 17:38:11'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/15/2021 17:38:11'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/15/2021 17:38:11'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/15/2021 17:38:11'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/15/2021 17:38:11'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/15/2021 17:38:11'!
PASSED!
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:39:52' prior: 50874453 overrides: 50874911!
addPortfolio: aPortfolio
	
	self addSentenceToReport.
	report add: (currentIndentation , aPortfolio name).
	
	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	report add: currentIndentation, 'Balance = ' , aPortfolio balance asString.
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:40:59'!
addSentenceToReport: aSentence

	report add: (currentIndentation , aSentence).! !
!PortfolioTreeReport methodsFor: 'Private' stamp: 'JP 7/15/2021 17:41:19'!
addSentenceToReport: aSentence

	report add: (currentIndentation , aSentence).! !

!methodRemoval: PortfolioDetailedTreePrinter #addSentenceToReport: stamp: 'JP 7/15/2021 17:41:19'!
addSentenceToReport: aSentence

	report add: (currentIndentation , aSentence).!
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:41:49' prior: 50875393 overrides: 50874911!
addPortfolio: aPortfolio
	
	self addSentenceToReport: aPortfolio name.

	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	report add: currentIndentation, 'Balance = ' , aPortfolio balance asString.
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:42:13' prior: 50875423 overrides: 50874911!
addPortfolio: aPortfolio
	
	self addSentenceToReport: aPortfolio name.

	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	self addSentenceToReport: 'Balance = ' , aPortfolio balance asString.
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:42:30' prior: 50874358 overrides: 50874917!
addReceptiveAccount: aReceptiveAccount

	| summary |
	self addSentenceToReport: aReceptiveAccount name.
	
	self addIndentation.
	
	summary := (SummaryMaker for: aReceptiveAccount) compute.
	report addAll: (summary collect: [:aTransactionSentence | currentIndentation , aTransactionSentence]).
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:43:53' prior: 50875449 overrides: 50874917!
addReceptiveAccount: aReceptiveAccount

	| summary |
	self addSentenceToReport: aReceptiveAccount name.
	
	self addIndentation.
	
	self addSummaryToReportFrom: aReceptiveAccount.
	summary := (SummaryMaker for: aReceptiveAccount) compute.
	report addAll: (summary collect: [:aTransactionSentence | currentIndentation , aTransactionSentence]).
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:44:27'!
addSummaryToReportFrom: anAccount

	| summary |
	summary := (SummaryMaker for: anAccount) compute.
	report addAll: (summary collect: [:aTransactionSentence | currentIndentation , aTransactionSentence]).! !
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:44:37' prior: 50875463 overrides: 50874917!
addReceptiveAccount: aReceptiveAccount

	| summary |
	self addSentenceToReport: aReceptiveAccount name.
	
	self addIndentation.
	
	self addSummaryToReportFrom: aReceptiveAccount.
	
	self revertIndentation.! !
!PortfolioDetailedTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:44:45' prior: 50875489 overrides: 50874917!
addReceptiveAccount: aReceptiveAccount

	self addSentenceToReport: aReceptiveAccount name.
	
	self addIndentation.
	
	self addSummaryToReportFrom: aReceptiveAccount.
	
	self revertIndentation.! !
!PortfolioTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:45:14' prior: 50872446 overrides: 50874911!
addPortfolio: aPortfolio
	
	self addSentenceToReport: aPortfolio name.
	
	self addIndentation.
	
	aPortfolio accounts do: [:anAccount | anAccount beAddedTo: self.].
	
	self revertIndentation.! !
!PortfolioTreePrinter methodsFor: 'Private' stamp: 'JP 7/15/2021 17:45:31' prior: 50872428 overrides: 50874917!
addReceptiveAccount: aReceptiveAccount
	
	self addSentenceToReport: aReceptiveAccount name.! !

!testRun: #AccountSummaryTest #test01AccountSummaryBalanceIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #AccountSummaryTest #test02DepositTransactionShowsOnSummary stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #AccountSummaryTest #test03MultipleTransactionsShowOnSummary stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #AccountSummaryTest #test04WithdrawTransactionShowsOnSummary stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #AccountSummaryTest #test05TransferDepositLegShowsOnSummary stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #AccountSummaryTest #test06TransferWithdrawLegShowsOnSummary stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #AccountSummaryTest #test07AccountSummaryBalanceIs0PesosOnEmptyPortfolio stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #AccountSummaryTest #test08CanShowSummaryWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #AccountSummaryTest #test09SummaryShowsRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test01 stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test02 stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test03 stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test04 stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #PortfolioDetailedTreePrinterTest #test05 stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JP 7/15/2021 17:45:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test01PortfolioTreeOfAnEmptyPortfolioOnlyShowsItsName stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test02PortfolioTreeCanShowTreeOfPortfolioWithOneAccount stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test03PortfolioTreeShowsTreeRecursivelyOfPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #PortfolioTreePrinterTest #test04MultipleCallsOnPortfolioTreePrinterReturnsTheSameReport stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JP 7/15/2021 17:45:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferNetTest #test01AccountSummaryTransferNetIs0PesosOnEmptyAccount stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferNetTest #test02BothAccountsOfTransferHaveOppositeTransferNet stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferNetTest #test03TransferNetIgnoresAnyNonTransferTransactions stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferNetTest #test04EmptyPortfolioTransferNetIs0Peso stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferNetTest #test05CanShowTransferNetWithPortfolioWithASingleAccount stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferNetTest #test06TransferNetCalculatesRecursivelyInPortfolioWithMultipleAccounts stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceFromOriginAccountAndIncreasesItForDestinationAccount stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferTest #test02ATransferKnowsItsValue stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferTest #test03DepositLegKnowsItsWithdrawCounterpart stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferTest #test04WithdrawLegKnowsItsDepositCounterpart stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferTest #test05OriginAndDestinationAccountsCannotBeTheSame stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAZeroAmount stamp: 'JP 7/15/2021 17:45:36'!
PASSED!

----SNAPSHOT----(15 July 2021 17:49:02) CuisUniversity-4532.image priorSource: 17393450!