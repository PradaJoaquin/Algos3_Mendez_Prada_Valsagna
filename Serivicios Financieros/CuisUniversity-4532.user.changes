

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (17 May 2021 19:10:33) as D:\Admin\Descargas\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\Joaquin\Desktop\GitHub\Algos3_Mendez_Prada_Valsagna\CodigoRepetido-Ejercicio.st----!

!classRemoval: #CustomerBook stamp: 'JP 5/17/2021 19:12:18'!
Object subclass: #CustomerBook
	instanceVariableNames: 'suspended active'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #CustomerBookTest stamp: 'JP 5/17/2021 19:12:19'!
TestCase subclass: #CustomerBookTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #NotFound stamp: 'JP 5/17/2021 19:12:19'!
Error subclass: #NotFound
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #CantSuspend stamp: 'JP 5/17/2021 19:12:19'!
Error subclass: #CantSuspend
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

----QUIT----(17 May 2021 19:12:24) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (4 July 2021 17:04:08) as C:\Users\fedev\Escritorio\Imagen Limpia CUIS\CuisUniversity-4532.image!


----End fileIn of C:\Users\fedev\Downloads\ejercicios-2021-1c-main\07-ServiciosFinancieros\ServiciosFinancieros-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 17:12:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:12:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:12:43'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 17:12:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 17:12:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 17:12:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 17:12:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:12:43'!
FAILURE!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 17:12:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:13:01'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:13:01'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:15:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:15:04'!
FAILURE!
!Withdraw class methodsFor: 'instance creation' stamp: 'FV 7/4/2021 17:18:27' prior: 50859910!
for: aValue

	^ self new initializeFor: aValue * -1. ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 17:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 17:18:39'!
FAILURE!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 17:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 17:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 17:18:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 17:18:39'!
FAILURE!
!Withdraw class methodsFor: 'instance creation' stamp: 'FV 7/4/2021 17:19:39' prior: 50860009!
for: aValue

	^ self new initializeFor: aValue. ! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/4/2021 17:25:48' prior: 50859934!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit ) ifTrue: [aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [aTransaction value * -1].	
		]
	ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 17:25:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:25:55'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:25:55'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 17:25:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 17:25:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 17:25:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 17:25:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:26:16'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:26:16'!
ERROR!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/4/2021 17:26:51' prior: 50860049!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit ) ifTrue: [aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [aTransaction value * -1].	
		]
	ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:27:02'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:27:02'!
ERROR!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/4/2021 17:30:10' prior: 50860093!
balance

	^transactions sum: [ :aTransaction | aTransaction xxx.] ifEmpty: [ 0 ].! !
!AccountTransaction methodsFor: 'value' stamp: 'FV 7/4/2021 17:30:27'!
xxx
	self subclassResponsibility.! !
!Deposit methodsFor: 'value' stamp: 'FV 7/4/2021 17:30:45' overrides: 50860115!
xxx
	^self value.! !
!Withdraw methodsFor: 'value' stamp: 'FV 7/4/2021 17:31:02' overrides: 50860115!
xxx
	^self value * -1.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:31:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 17:31:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:31:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:31:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 17:31:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 17:31:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 17:31:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 17:31:14'!
PASSED!

5 negative.!

5 negated.!
!Withdraw methodsFor: 'value' stamp: 'FV 7/4/2021 17:31:57' prior: 50860123 overrides: 50860115!
xxx
	^self value negated.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 17:32:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:32:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:32:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 17:32:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 17:32:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 17:32:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 17:32:07'!
PASSED!
!Withdraw methodsFor: 'value' stamp: 'FV 7/4/2021 17:36:30'!
effectOnAccount
	^self value negated.! !
!Deposit methodsFor: 'value' stamp: 'FV 7/4/2021 17:36:30'!
effectOnAccount
	^self value.! !
!AccountTransaction methodsFor: 'value' stamp: 'FV 7/4/2021 17:36:30'!
effectOnAccount
	self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 17:36:30' prior: 50860110!
balance

	^transactions sum: [ :aTransaction | aTransaction effectOnAccount.] ifEmpty: [ 0 ].! !

!methodRemoval: Withdraw #xxx stamp: 'FV 7/4/2021 17:36:30'!
xxx
	^self value negated.!

!methodRemoval: Deposit #xxx stamp: 'FV 7/4/2021 17:36:30'!
xxx
	^self value.!

!methodRemoval: AccountTransaction #xxx stamp: 'FV 7/4/2021 17:36:30'!
xxx
	self subclassResponsibility.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:37:15'!
test08
	
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:38:05' prior: 50860214!
test08
	
	|account|
	
	account := ReceptiveAccount ! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:39:03' prior: 50860218!
test08
	
	|account|
	
	account := ReceptiveAccount new.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:39:39' prior: 50860223!
test08
	
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:40:35' prior: 50860228!
test08
	
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:41:26' prior: 50860234!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:42:30' prior: 50860241!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	! !

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 17:45:01'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:43:23' prior: 50860248!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:45:29' prior: 50860264!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:45:52' prior: 50860274!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:46:07' prior: 50860284!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:46:47' prior: 50860294!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance  equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:46:51' prior: 50860305!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:47:14' prior: 50860316!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 17:47:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 17:49:06'!
ERROR!
!ReceptiveAccountTest class methodsFor: 'no messages' stamp: 'FV 7/4/2021 17:50:35'!
register: anAmountOfPesos from: accountSender to: accountReceiver

	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 17:50:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:50:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 17:50:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 17:50:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 17:50:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 17:50:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 17:50:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 17:50:42'!
ERROR!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 17:50:42'!
ERROR!

!methodRemoval: ReceptiveAccountTest class #register:from:to: stamp: 'FV 7/4/2021 17:51:03'!
register: anAmountOfPesos from: accountSender to: accountReceiver

	!
!Transfer class methodsFor: 'no messages' stamp: 'FV 7/4/2021 17:51:19'!
register: anAmountOfPesos from: accountSender to: accountReceiver
	! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 17:51:29'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:51:54' prior: 50860327!
test08
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:52:05' prior: 50860394!
test08
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:52:24' prior: 50860407!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:54:58'!
test09
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 150 * peso.
	self assert: accountReceiver balance equals: 50 * peso.! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 17:55:01'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 17:55:01'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:56:00' prior: 50860434!
test09
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance .! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 17:56:04'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 17:56:04'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 17:58:05' prior: 50860386!
register: anAmountOfPesos from: accountSender to: accountReceiver

	Withdraw register: anAmountOfPesos  on: accountSender.
	Deposit register: anAmountOfPesos on: accountReceiver.! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 17:58:13'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:58:34'!
test10
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:59:59' prior: 50860485!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:01:00' prior: 50860500!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:02:28' prior: 50860512!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer).
	self assert: (accountReceiver hasRegistered: aTransfer).
	
	! !

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 18:02:35'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 18:02:35'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:04:11' prior: 50860474!
register: anAmountOfPesos from: accountSender to: accountReceiver

	Withdraw register: anAmountOfPesos  on: accountSender.
	Deposit register: anAmountOfPesos on: accountReceiver.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:05:41' prior: 50860545!
register: anAmountOfPesos from: accountSender to: accountReceiver

	self initializeFor: anAmountOfPesos from: accountSender to: accountReceiver.
	Withdraw register: anAmountOfPesos  on: accountSender.
	Deposit register: anAmountOfPesos on: accountReceiver.! !

!methodRemoval: ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:10:13'!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.!

!methodRemoval: ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 18:11:12'!
test09
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance .!

!methodRemoval: ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 18:11:16'!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer).
	self assert: (accountReceiver hasRegistered: aTransfer).
	
	!

!classRemoval: #Transfer stamp: 'FV 7/4/2021 18:11:25'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 18:18:41'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:18:25'!
test08
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	! !
!Transfer methodsFor: 'no messages' stamp: 'FV 7/4/2021 18:20:16'!
register: anAmountOfMoney from: accountSender to: accountReceiver! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:21:21' prior: 50860634!
register: anAmountOfMoney from: accountSender to: accountReceiver
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:21:31'!
ERROR!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:21:31'!
ERROR!

!methodRemoval: Transfer #register:from:to: stamp: 'FV 7/4/2021 18:21:46'!
register: anAmountOfMoney from: accountSender to: accountReceiver
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.!
!Transfer class methodsFor: 'no messages' stamp: 'FV 7/4/2021 18:21:50'!
register: anAmountOfMoney from: accountSender to: accountReceiver
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:21:55'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:22:46'!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer).
	self assert: (accountReceiver hasRegistered: aTransfer).! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 18:23:06'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:28:29' prior: 50860660!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aTransaction|
	
	aTransaction := self new.
	accountSender register: aTransaction.
	accountReceiver register: aTransaction.
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	^aTransaction! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 18:28:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 18:28:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 18:28:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 18:28:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 18:28:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 18:28:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 18:28:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:28:35'!
ERROR!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 18:28:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:28:35'!
ERROR!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 18:28:52'!
PASSED!
!Transfer methodsFor: 'no messages' stamp: 'FV 7/4/2021 18:29:24' overrides: 50860195!
effectOnAccount
! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:29:48'!
ERROR!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:29:48'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:30:08' prior: 50860738 overrides: 50860195!
effectOnAccount
	^0! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 18:30:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 18:30:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 18:30:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 18:30:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 18:30:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 18:30:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 18:30:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:30:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 18:30:12'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:34:35'!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 50 * peso equals: aTransfer value.! !

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 18:35:07'!
ERROR!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 18:35:07'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:35:41' overrides: 50859823!
value
	| value |
	^value! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:36:11' prior: 50860802 overrides: 50859823!
value! !

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 18:36:21'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:36:32' prior: 50860807 overrides: 50859823!
value
	^ value.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:36:52'!
initializeFor: aValue
	value := aValue.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:37:15' prior: 50860689!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aTransaction|
	
	aTransaction := self new initializeFor: anAmountOfMoney.
	accountSender register: aTransaction.
	accountReceiver register: aTransaction.
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	^aTransaction! !

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 18:37:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 18:37:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 18:37:32'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:37:49'!
test11
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:37:57' prior: 50860883!
test11
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:38:24' prior: 50860887!
test11
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:38:35' prior: 50860899!
test11
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	! !

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 18:39:41'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:48:04'!
test12
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender equals: aTransfer transferSender.
	self assert: accountReceiver equals: aTransfer transferReceiver.
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:48:27'!
transferSender
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:50:38' prior: 50860928!
test12
	
	|accountSender accountReceiver aTransfer aDepositOnAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions.
	
	self assert: accountSender equals: aTransfer transferSender.
	self assert: accountReceiver equals: aTransfer transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:51:25' prior: 50860948!
test12
	
	|accountSender accountReceiver aTransfer aDepositOnAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	
	self assert: accountSender equals: aTransfer transferSender.
	self assert: accountReceiver equals: aTransfer transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:53:38' prior: 50860967!
test12
	
	|accountSender accountReceiver aTransfer aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	self assert: accountSender equals: aDepositFromAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositOnAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:53:51' prior: 50860986!
test12
	
	|accountSender accountReceiver aTransfer aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:54:06' prior: 50861009!
test12
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:55:48' prior: 50861032!
test12
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:05:31' prior: 50861054!
test12
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	
	self assert: aDepositOnAnotherAccount equals: aDepositFromAnotherAccount counterpart.
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:06:01'!
atest11
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	! !

!methodRemoval: ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:06:07'!
test11
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:06:14'!
test11
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	
	self assert: aDepositOnAnotherAccount equals: aDepositFromAnotherAccount counterpart.
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !

!methodRemoval: ReceptiveAccountTest #test12 stamp: 'FV 7/4/2021 19:06:22'!
test12
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	
	self assert: aDepositOnAnotherAccount equals: aDepositFromAnotherAccount counterpart.
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:13:40' prior: 50861125!
test11
	
	|accountSender accountReceiver withdrawPartOfTransfer depositPartOfTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	withdrawPartOfTransfer := accountSender transactions last.
	depositPartOfTransfer := accountReceiver  transactions last.
	
	
	self assert: depositPartOfTransfer equals: withdrawPartOfTransfer counterpart.
	self assert: withdrawPartOfTransfer equals: depositPartOfTransfer counterpart.
	! !

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:14:36'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:18:39' prior: 50860833!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aTransaction aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountReceiver register: aDepositPartOfTransfer.
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	^aTransaction! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:20:16' prior: 50861198!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountReceiver register: aDepositPartOfTransfer.
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:20:27' prior: 50861217!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:21:11' prior: 50861236!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:22:58' prior: 50861255!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:23:31' prior: 50861274!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:24:20'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:24:39'!
counterpart: aCounterpart
	| counterPart |
	counterPart := aCounterpart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:25:21' prior: 50861333!
counterpart: aCounterpart
	counterpart := aCounterpart ! !

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:25:29'!
ERROR!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:25:29'!
ERROR!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:25:43'!
counterpart
	^counterpart! !

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:25:51'!
ERROR!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:25:51'!
ERROR!

Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:31:00'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Transfer subclass: #ReceiverPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceiverPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:31:09'!
Transfer subclass: #ReceiverPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classRenamed: #ReceiverPartOfTransfer as: #WithdrawPartOfTransfer stamp: 'FV 7/4/2021 19:32:00'!
Smalltalk renameClassNamed: #ReceiverPartOfTransfer as: #WithdrawPartOfTransfer!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:32:27' prior: 50861297!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:33:00' prior: 50860748 overrides: 50860195!
effectOnAccount
	self subclassResponsibility.! !
!DepositPartOfTransfer methodsFor: 'no messages' stamp: 'FV 7/4/2021 19:33:13'!
effectOnT! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:33:34' overrides: 50861415!
effectOnAccount! !

!methodRemoval: DepositPartOfTransfer #effectOnT stamp: 'FV 7/4/2021 19:33:34'!
effectOnT!
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:34:08' prior: 50861424 overrides: 50861415!
effectOnAccount

	^value! !
!WithdrawPartOfTransfer methodsFor: 'no messages' stamp: 'FV 7/4/2021 19:34:18' overrides: 50861415!
effectOnAccount

	^value negated.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:34:35' prior: 50861391!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.

	^self new.! !

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 19:34:39'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 19:34:39'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 19:35:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 19:35:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 19:35:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 19:35:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 19:35:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 19:35:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 19:35:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 19:35:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:35:53'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 19:35:53'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:35:53'!
PASSED!
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:38:22' prior: 50861432 overrides: 50861415!
effectOnAccount

	^self value! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:38:26' prior: 50861437 overrides: 50861415!
effectOnAccount

	^self value negated.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:38:29'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 19:38:29'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:38:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:38:41'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:38:41'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:39:11'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:39:11'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 19:39:35'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 19:39:35'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:40:33' prior: 50861442!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.

	^self new initializeFor: anAmountOfMoney .! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:41:59'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 19:41:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:41:59'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 19:42:15'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:46:14' prior: 50860671!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer receiverPart).
	self assert: (accountReceiver hasRegistered: aTransfer senderPart).! !

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:47:36'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:47:44'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:47:51'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value senderPart receiverPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:48:06'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value senderPart receiverPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!methodRemoval: Transfer #transferSender stamp: 'FV 7/4/2021 19:48:54'!
transferSender
!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:49:04'!
receiverPart
	^receiverPart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:49:13'!
senderPart
	^senderPart
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:49:16' prior: 50861707!
senderPart
	^senderPart! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:49:22'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:49:22'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:49:41' prior: 50861565!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.

	^self new initializeFor: anAmountOfMoney .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:50:56' prior: 50861720!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	

	^self new initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/4/2021 19:52:59'!
initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	value := anAmountOfMoney.
	senderPart := aDepositPartOfTransfer.
	receiverPart := aWithdrawPartOfTransfer.! !

!methodRemoval: Transfer #initializeFor: stamp: 'FV 7/4/2021 19:53:08'!
initializeFor: aValue
	value := aValue.!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:53:32'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value depositPart receiverPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:53:32' prior: 50861711!
senderPart
	^depositPart! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:53:32' prior: 50861767!
initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	value := anAmountOfMoney.
	depositPart := aDepositPartOfTransfer.
	receiverPart := aWithdrawPartOfTransfer.! !

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:53:51'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value depositPart withdrawPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:53:51' prior: 50861703!
receiverPart
	^withdrawPart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:53:51' prior: 50861794!
initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	value := anAmountOfMoney.
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:54:06'!
ERROR!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 19:54:06'!
ERROR!

Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:55:27'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:58:03'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'counterpart transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:58:07'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'counterpart transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:59:16'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/4/2021 19:59:25'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:00:52' prior: 50861744!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer aTransfer|
	
	aTransfer := self new initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFromTransfer: aTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFromTransfer: aTransfer.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	

	^aTransfer! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:03:50' prior: 50861905!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer aTransfer|
	
	aTransfer := self new initializeFor: anAmountOfMoney.
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFromTransfer: aTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFromTransfer: aTransfer.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	aTransfer setDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.
	^aTransfer! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/4/2021 20:04:29'!
initializeFor: anAmountOfMoney
	value := anAmountOfMoney.! !

!methodRemoval: Transfer #initializeFor:withDepositPart:andWithdrawPart: stamp: 'FV 7/4/2021 20:04:33'!
initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	value := anAmountOfMoney.
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.!

!methodRemoval: Transfer #counterpart: stamp: 'FV 7/4/2021 20:04:50'!
counterpart: aCounterpart
	counterpart := aCounterpart !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/4/2021 20:05:48'!
setDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:06:44'!
initializeFromTransfer: aTransfer
	transfer := aTransfer! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:06:54'!
initializeFromTransfer: aTransfer
	transfer := aTransfer.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:07:27'!
ERROR!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 20:07:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:07:27'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:07:53'!
ERROR!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:07:53'!
ERROR!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:08:27'!
ERROR!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:08:27'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:09:44' prior: 50860620!
test08
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:09:53'!
ERROR!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:09:53'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:10:19' prior: 50862034!
test08
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:11:30' prior: 50861509 overrides: 50861415!
effectOnAccount

	^transfer value negated.! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:11:37' prior: 50861504 overrides: 50861415!
effectOnAccount

	^transfer value! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 20:11:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:11:47'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:11:47'!
FAILURE!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:11:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 20:12:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:12:01'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:12:01'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:12:12'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:12:12'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:12:44' prior: 50861349!
counterpart
	self subclassResponsibility.! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:12:55' overrides: 50862165!
counterpart
	^ transfer! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:13:19' prior: 50862170 overrides: 50862165!
counterpart
	^ transfer senderPart.! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:13:34' overrides: 50862165!
counterpart
	^transfer receiverPart.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 20:13:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:13:42'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:13:42'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:14:28'!
FAILURE!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:14:28'!
FAILURE!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:15:37' prior: 50861813!
receiverPart
	^depositPart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:02'!
depositPart
	^depositPart ! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:02' prior: 50862180 overrides: 50862165!
counterpart
	^transfer depositPart.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:02' prior: 50861627!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer depositPart).
	self assert: (accountReceiver hasRegistered: aTransfer senderPart).! !

!methodRemoval: Transfer #receiverPart stamp: 'FV 7/4/2021 20:16:02'!
receiverPart
	^depositPart !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:19' prior: 50861790!
senderPart
	^withdrawPart! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:31'!
withdrawPart
	^withdrawPart! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:31' prior: 50862242!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer depositPart).
	self assert: (accountReceiver hasRegistered: aTransfer withdrawPart).! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:31' prior: 50862175 overrides: 50862165!
counterpart
	^ transfer withdrawPart.! !

!methodRemoval: Transfer #senderPart stamp: 'FV 7/4/2021 20:16:31'!
senderPart
	^withdrawPart!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 20:16:38'!
FAILURE!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:16:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 20:16:38'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:17:06' prior: 50862270!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:17:11'!
PASSED!

!methodRemoval: ReceptiveAccountTest #atest11 stamp: 'FV 7/4/2021 20:17:28'!
atest11
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:21:18'!
test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	! !

!methodRemoval: ReceptiveAccountTest #test08 stamp: 'FV 7/4/2021 20:21:18'!
test08
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:21:49'!
test09BothAccountsRegisterTransfer
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).! !

!methodRemoval: ReceptiveAccountTest #test09 stamp: 'FV 7/4/2021 20:21:49'!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:22:23'!
test09BothAccountsRegisterTheirPartOfTransfer
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).! !

!methodRemoval: ReceptiveAccountTest #test09BothAccountsRegisterTransfer stamp: 'FV 7/4/2021 20:22:23'!
test09BothAccountsRegisterTransfer
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:22:58'!
test10ATransferKnowsItsValue
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 50 * peso equals: aTransfer value.! !

!methodRemoval: ReceptiveAccountTest #test10 stamp: 'FV 7/4/2021 20:22:58'!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 50 * peso equals: aTransfer value.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:23:28'!
test11BothTransferPartsKnowTheirCounterpart
	
	|accountSender accountReceiver withdrawPartOfTransfer depositPartOfTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	withdrawPartOfTransfer := accountSender transactions last.
	depositPartOfTransfer := accountReceiver  transactions last.
	
	
	self assert: depositPartOfTransfer equals: withdrawPartOfTransfer counterpart.
	self assert: withdrawPartOfTransfer equals: depositPartOfTransfer counterpart.
	! !

!methodRemoval: ReceptiveAccountTest #test11 stamp: 'FV 7/4/2021 20:23:28'!
test11
	
	|accountSender accountReceiver withdrawPartOfTransfer depositPartOfTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	withdrawPartOfTransfer := accountSender transactions last.
	depositPartOfTransfer := accountReceiver  transactions last.
	
	
	self assert: depositPartOfTransfer equals: withdrawPartOfTransfer counterpart.
	self assert: withdrawPartOfTransfer equals: depositPartOfTransfer counterpart.
	!

----STARTUP---- (5 July 2021 20:40:14) as C:\Users\fedev\Escritorio\Imagen Limpia CUIS\CuisUniversity-4532.image!


!classDefinition: #ReceptiveAccountTest category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceptiveAccountTest category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:10:43'!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:14:20'!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 * peso on: account.
		
	self assert: 100 * peso equals: account balance
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:14:24'!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 * peso on: account.
	Withdraw register: 50 * peso on: account.
		
	self assert: 50 * peso equals: account balance
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:10:14'!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50 * peso.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:10:22'!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 * peso on: account.
	withdraw := Withdraw register: 50 * peso on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:12:14'!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 100 * peso.
	withdraw := Withdraw for: 50 * peso.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LL 7/1/2021 03:12:23'!
test07AccountKnowsItsTransactions 

	| account deposit |
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 50 * peso on: account.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit).
! !

!classDefinition: #AccountTransaction category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #AccountTransaction category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!AccountTransaction methodsFor: 'value' stamp: 'HernanWilkinson 9/12/2011 12:25' overrides: 16881508!
value 

	self subclassResponsibility ! !

!classDefinition: 'AccountTransaction class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
AccountTransaction class
	instanceVariableNames: ''!

!classDefinition: 'AccountTransaction class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
AccountTransaction class
	instanceVariableNames: ''!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'NR 10/17/2019 03:22:00'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!classDefinition: #Deposit category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Deposit category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Deposit methodsFor: 'initialization' stamp: 'HernanWilkinson 7/13/2011 18:45'!
initializeFor: aValue

	value := aValue ! !
!Deposit methodsFor: 'value' stamp: 'HernanWilkinson 7/13/2011 18:38' overrides: 50862673!
value

	^ value! !

!classDefinition: 'Deposit class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
Deposit class
	instanceVariableNames: ''!

!classDefinition: 'Deposit class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
Deposit class
	instanceVariableNames: ''!
!Deposit class methodsFor: 'instance creation' stamp: 'HernanWilkinson 7/13/2011 18:38'!
for: aValue

	^ self new initializeFor: aValue ! !

!classDefinition: #Withdraw category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Withdraw category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Withdraw methodsFor: 'initialization' stamp: 'HernanWilkinson 7/13/2011 18:46'!
initializeFor: aValue

	value := aValue ! !
!Withdraw methodsFor: 'value' stamp: 'HernanWilkinson 7/13/2011 18:33' overrides: 50862673!
value

	^ value! !

!classDefinition: 'Withdraw class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
Withdraw class
	instanceVariableNames: ''!

!classDefinition: 'Withdraw class' category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
Withdraw class
	instanceVariableNames: ''!
!Withdraw class methodsFor: 'instance creation' stamp: 'HernanWilkinson 7/13/2011 18:33'!
for: aValue

	^ self new initializeFor: aValue ! !

!classDefinition: #ReceptiveAccount category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:24'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'NR 10/17/2019 15:06:56' overrides: 16896425!
initialize

	transactions := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'HAW 5/23/2019 15:19:32'!
balance

	^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'NR 10/17/2019 03:28:43'!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'HernanWilkinson 7/13/2011 18:37'!
register: aTransaction

	transactions add: aTransaction 
! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'HernanWilkinson 7/13/2011 18:37'!
transactions 

	^ transactions copy! !
!Withdraw class methodsFor: 'instance creation' stamp: 'FV 7/4/2021 17:18:27' prior: 50862769!
for: aValue

	^ self new initializeFor: aValue * -1. ! !
!Withdraw class methodsFor: 'instance creation' stamp: 'FV 7/4/2021 17:19:39' prior: 50862818!
for: aValue

	^ self new initializeFor: aValue. ! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/4/2021 17:25:48' prior: 50862796!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit ) ifTrue: [aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [aTransaction value * -1].	
		]
	ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/4/2021 17:26:51' prior: 50862828!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit ) ifTrue: [aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [aTransaction value * -1].	
		]
	ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/4/2021 17:30:10' prior: 50862838!
balance

	^transactions sum: [ :aTransaction | aTransaction xxx.] ifEmpty: [ 0 ].! !
!AccountTransaction methodsFor: 'value' stamp: 'FV 7/4/2021 17:30:27'!
xxx
	self subclassResponsibility.! !
!Deposit methodsFor: 'value' stamp: 'FV 7/4/2021 17:30:45' overrides: 50862853!
xxx
	^self value.! !
!Withdraw methodsFor: 'value' stamp: 'FV 7/4/2021 17:31:02' overrides: 50862853!
xxx
	^self value * -1.! !
!Withdraw methodsFor: 'value' stamp: 'FV 7/4/2021 17:31:57' prior: 50862861 overrides: 50862853!
xxx
	^self value negated.! !
!Withdraw methodsFor: 'value' stamp: 'FV 7/4/2021 17:36:30'!
effectOnAccount
	^self value negated.! !
!Deposit methodsFor: 'value' stamp: 'FV 7/4/2021 17:36:30'!
effectOnAccount
	^self value.! !
!AccountTransaction methodsFor: 'value' stamp: 'FV 7/4/2021 17:36:30'!
effectOnAccount
	self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 17:36:30' prior: 50862848!
balance

	^transactions sum: [ :aTransaction | aTransaction effectOnAccount.] ifEmpty: [ 0 ].! !

!methodRemoval: Withdraw #xxx stamp: 'FV 7/5/2021 20:40:24'!
xxx
	^self value negated.!

!methodRemoval: Deposit #xxx stamp: 'FV 7/5/2021 20:40:24'!
xxx
	^self value.!

!methodRemoval: AccountTransaction #xxx stamp: 'FV 7/5/2021 20:40:25'!
xxx
	self subclassResponsibility.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:37:15'!
test08
	
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:38:05' prior: 50862895!
test08
	
	|account|
	
	account := ReceptiveAccount ! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:39:03' prior: 50862899!
test08
	
	|account|
	
	account := ReceptiveAccount new.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:39:39' prior: 50862904!
test08
	
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:40:35' prior: 50862909!
test08
	
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:41:26' prior: 50862915!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:42:30' prior: 50862922!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	! !

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:25'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:43:23' prior: 50862929!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:45:29' prior: 50862945!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:45:52' prior: 50862955!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:46:07' prior: 50862965!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:46:47' prior: 50862975!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance  equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:46:51' prior: 50862986!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:47:14' prior: 50862997!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.! !
!ReceptiveAccountTest class methodsFor: 'no messages' stamp: 'FV 7/4/2021 17:50:35'!
register: anAmountOfPesos from: accountSender to: accountReceiver

	! !

!methodRemoval: ReceptiveAccountTest class #register:from:to: stamp: 'FV 7/5/2021 20:40:25'!
register: anAmountOfPesos from: accountSender to: accountReceiver

	!
!Transfer class methodsFor: 'no messages' stamp: 'FV 7/4/2021 17:51:19'!
register: anAmountOfPesos from: accountSender to: accountReceiver
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:51:54' prior: 50863008!
test08
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:52:05' prior: 50863036!
test08
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:52:24' prior: 50863049!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:54:58'!
test09
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 150 * peso.
	self assert: accountReceiver balance equals: 50 * peso.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:56:00' prior: 50863076!
test09
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 17:58:05' prior: 50863031!
register: anAmountOfPesos from: accountSender to: accountReceiver

	Withdraw register: anAmountOfPesos  on: accountSender.
	Deposit register: anAmountOfPesos on: accountReceiver.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:58:34'!
test10
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 17:59:59' prior: 50863114!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:01:00' prior: 50863129!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:02:28' prior: 50863141!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer).
	self assert: (accountReceiver hasRegistered: aTransfer).
	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:04:11' prior: 50863106!
register: anAmountOfPesos from: accountSender to: accountReceiver

	Withdraw register: anAmountOfPesos  on: accountSender.
	Deposit register: anAmountOfPesos on: accountReceiver.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:05:41' prior: 50863169!
register: anAmountOfPesos from: accountSender to: accountReceiver

	self initializeFor: anAmountOfPesos from: accountSender to: accountReceiver.
	Withdraw register: anAmountOfPesos  on: accountSender.
	Deposit register: anAmountOfPesos on: accountReceiver.! !

!methodRemoval: ReceptiveAccountTest #test08 stamp: 'FV 7/5/2021 20:40:25'!
test08
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 0 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender balance equals: 0 * peso.
	self assert: accountReceiver balance equals: 0 * peso.!

!methodRemoval: ReceptiveAccountTest #test09 stamp: 'FV 7/5/2021 20:40:25'!
test09
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance .!

!methodRemoval: ReceptiveAccountTest #test10 stamp: 'FV 7/5/2021 20:40:25'!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer).
	self assert: (accountReceiver hasRegistered: aTransfer).
	
	!

!classRemoval: #Transfer stamp: 'FV 7/5/2021 20:40:25'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:25'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:18:25'!
test08
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	! !
!Transfer methodsFor: 'no messages' stamp: 'FV 7/4/2021 18:20:16'!
register: anAmountOfMoney from: accountSender to: accountReceiver! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:21:21' prior: 50863258!
register: anAmountOfMoney from: accountSender to: accountReceiver
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.! !

!methodRemoval: Transfer #register:from:to: stamp: 'FV 7/5/2021 20:40:25'!
register: anAmountOfMoney from: accountSender to: accountReceiver
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.!
!Transfer class methodsFor: 'no messages' stamp: 'FV 7/4/2021 18:21:50'!
register: anAmountOfMoney from: accountSender to: accountReceiver
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:22:46'!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer).
	self assert: (accountReceiver hasRegistered: aTransfer).! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:28:29' prior: 50863279!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aTransaction|
	
	aTransaction := self new.
	accountSender register: aTransaction.
	accountReceiver register: aTransaction.
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	^aTransaction! !
!Transfer methodsFor: 'no messages' stamp: 'FV 7/4/2021 18:29:24' overrides: 50862876!
effectOnAccount
! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:30:08' prior: 50863316 overrides: 50862876!
effectOnAccount
	^0! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:34:35'!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 50 * peso equals: aTransfer value.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:35:41' overrides: 50862673!
value
	| value |
	^value! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:36:11' prior: 50863338 overrides: 50862673!
value! !

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:25'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:25'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:36:32' prior: 50863343 overrides: 50862673!
value
	^ value.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:36:52'!
initializeFor: aValue
	value := aValue.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:37:15' prior: 50863303!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aTransaction|
	
	aTransaction := self new initializeFor: anAmountOfMoney.
	accountSender register: aTransaction.
	accountReceiver register: aTransaction.
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	^aTransaction! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:37:49'!
test11
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:37:57' prior: 50863386!
test11
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:38:24' prior: 50863390!
test11
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:38:35' prior: 50863402!
test11
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:48:04'!
test12
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: accountSender equals: aTransfer transferSender.
	self assert: accountReceiver equals: aTransfer transferReceiver.
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 18:48:27'!
transferSender
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:50:38' prior: 50863429!
test12
	
	|accountSender accountReceiver aTransfer aDepositOnAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions.
	
	self assert: accountSender equals: aTransfer transferSender.
	self assert: accountReceiver equals: aTransfer transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:51:25' prior: 50863449!
test12
	
	|accountSender accountReceiver aTransfer aDepositOnAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	
	self assert: accountSender equals: aTransfer transferSender.
	self assert: accountReceiver equals: aTransfer transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:53:38' prior: 50863468!
test12
	
	|accountSender accountReceiver aTransfer aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	self assert: accountSender equals: aDepositFromAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositOnAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:53:51' prior: 50863487!
test12
	
	|accountSender accountReceiver aTransfer aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:54:06' prior: 50863510!
test12
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 18:55:48' prior: 50863533!
test12
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:05:31' prior: 50863555!
test12
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	
	self assert: aDepositOnAnotherAccount equals: aDepositFromAnotherAccount counterpart.
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:06:01'!
atest11
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	! !

!methodRemoval: ReceptiveAccountTest #test11 stamp: 'FV 7/5/2021 20:40:26'!
test11
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:06:14'!
test11
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	
	self assert: aDepositOnAnotherAccount equals: aDepositFromAnotherAccount counterpart.
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	! !

!methodRemoval: ReceptiveAccountTest #test12 stamp: 'FV 7/5/2021 20:40:26'!
test12
	
	|accountSender accountReceiver aDepositOnAnotherAccount aDepositFromAnotherAccount|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	aDepositOnAnotherAccount := accountSender transactions last.
	aDepositFromAnotherAccount := accountReceiver  transactions last.
	
	
	self assert: aDepositOnAnotherAccount equals: aDepositFromAnotherAccount counterpart.
	self assert: accountSender equals: aDepositOnAnotherAccount transferSender.
	self assert: accountReceiver equals: aDepositFromAnotherAccount transferReceiver.
	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:13:40' prior: 50863626!
test11
	
	|accountSender accountReceiver withdrawPartOfTransfer depositPartOfTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	withdrawPartOfTransfer := accountSender transactions last.
	depositPartOfTransfer := accountReceiver  transactions last.
	
	
	self assert: depositPartOfTransfer equals: withdrawPartOfTransfer counterpart.
	self assert: withdrawPartOfTransfer equals: depositPartOfTransfer counterpart.
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:18:39' prior: 50863372!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aTransaction aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountReceiver register: aDepositPartOfTransfer.
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	^aTransaction! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:20:16' prior: 50863697!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountReceiver register: aDepositPartOfTransfer.
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:20:27' prior: 50863716!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:21:11' prior: 50863735!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:22:58' prior: 50863754!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:23:31' prior: 50863773!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := self new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := self new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:24:39'!
counterpart: aCounterpart
	| counterPart |
	counterPart := aCounterpart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:25:21' prior: 50863835!
counterpart: aCounterpart
	counterpart := aCounterpart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:25:43'!
counterpart
	^counterpart! !

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceiverPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #ReceiverPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceiverPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #ReceiverPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:32:27' prior: 50863796!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	Withdraw register: anAmountOfMoney on: accountSender.
	Deposit register: anAmountOfMoney on: accountReceiver.
	
	
	^self new.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:33:00' prior: 50863321 overrides: 50862876!
effectOnAccount
	self subclassResponsibility.! !
!DepositPartOfTransfer methodsFor: 'no messages' stamp: 'FV 7/4/2021 19:33:13'!
effectOnT! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:33:34' overrides: 50863909!
effectOnAccount! !

!methodRemoval: DepositPartOfTransfer #effectOnT stamp: 'FV 7/5/2021 20:40:26'!
effectOnT!
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:34:08' prior: 50863918 overrides: 50863909!
effectOnAccount

	^value! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:34:35' prior: 50863885!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.

	^self new.! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:38:22' prior: 50863926 overrides: 50863909!
effectOnAccount

	^self value! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:40:33' prior: 50863930!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.

	^self new initializeFor: anAmountOfMoney .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 19:46:14' prior: 50863287!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer receiverPart).
	self assert: (accountReceiver hasRegistered: aTransfer senderPart).! !

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value senderPart receiverPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value senderPart receiverPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!methodRemoval: Transfer #transferSender stamp: 'FV 7/5/2021 20:40:26'!
transferSender
!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:49:04'!
receiverPart
	^receiverPart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:49:13'!
senderPart
	^senderPart
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:49:16' prior: 50864070!
senderPart
	^senderPart! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:49:41' prior: 50863956!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	accountSender register: aWithdrawPartOfTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.

	^self new initializeFor: anAmountOfMoney .! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:50:56' prior: 50864078!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer|
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFor: anAmountOfMoney.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFor: anAmountOfMoney.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	

	^self new initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/4/2021 19:52:59'!
initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	value := anAmountOfMoney.
	senderPart := aDepositPartOfTransfer.
	receiverPart := aWithdrawPartOfTransfer.! !

!methodRemoval: Transfer #initializeFor: stamp: 'FV 7/5/2021 20:40:26'!
initializeFor: aValue
	value := aValue.!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value depositPart receiverPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:53:32' prior: 50864074!
senderPart
	^depositPart! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:53:32' prior: 50864125!
initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	value := anAmountOfMoney.
	depositPart := aDepositPartOfTransfer.
	receiverPart := aWithdrawPartOfTransfer.! !

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
AccountTransaction subclass: #Transfer
	instanceVariableNames: 'value depositPart withdrawPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:53:51' prior: 50864066!
receiverPart
	^withdrawPart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 19:53:51' prior: 50864152!
initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	value := anAmountOfMoney.
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.! !

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'counterpart transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'counterpart transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'counterpart transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:26'!
Transfer subclass: #DepositPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:27'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:40:27'!
Transfer subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:00:52' prior: 50864102!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer aTransfer|
	
	aTransfer := self new initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFromTransfer: aTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFromTransfer: aTransfer.
	aWithdrawPartOfTransfer counterpart: aDepositPartOfTransfer.
	aDepositPartOfTransfer counterpart: aWithdrawPartOfTransfer.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	

	^aTransfer! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:03:50' prior: 50864276!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer aTransfer|
	
	aTransfer := self new initializeFor: anAmountOfMoney.
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer new initializeFromTransfer: aTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer new initializeFromTransfer: aTransfer.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	aTransfer setDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.
	^aTransfer! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/4/2021 20:04:29'!
initializeFor: anAmountOfMoney
	value := anAmountOfMoney.! !

!methodRemoval: Transfer #initializeFor:withDepositPart:andWithdrawPart: stamp: 'FV 7/5/2021 20:40:27'!
initializeFor: anAmountOfMoney withDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	value := anAmountOfMoney.
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.!

!methodRemoval: Transfer #counterpart: stamp: 'FV 7/5/2021 20:40:27'!
counterpart: aCounterpart
	counterpart := aCounterpart !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/4/2021 20:05:48'!
setDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:06:44'!
initializeFromTransfer: aTransfer
	transfer := aTransfer! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:06:54'!
initializeFromTransfer: aTransfer
	transfer := aTransfer.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:09:44' prior: 50863244!
test08
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:10:19' prior: 50864359!
test08
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:11:30' overrides: 50863909!
effectOnAccount

	^transfer value negated.! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:11:37' prior: 50863951 overrides: 50863909!
effectOnAccount

	^transfer value! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:12:44' prior: 50863846!
counterpart
	self subclassResponsibility.! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:12:55' overrides: 50864399!
counterpart
	^ transfer! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:13:19' prior: 50864404 overrides: 50864399!
counterpart
	^ transfer senderPart.! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:13:34' overrides: 50864399!
counterpart
	^transfer receiverPart.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:15:37' prior: 50864171!
receiverPart
	^depositPart ! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:02'!
depositPart
	^depositPart ! !
!WithdrawPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:02' prior: 50864414 overrides: 50864399!
counterpart
	^transfer depositPart.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:02' prior: 50863977!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer depositPart).
	self assert: (accountReceiver hasRegistered: aTransfer senderPart).! !

!methodRemoval: Transfer #receiverPart stamp: 'FV 7/5/2021 20:40:27'!
receiverPart
	^depositPart !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:19' prior: 50864148!
senderPart
	^withdrawPart! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:31'!
withdrawPart
	^withdrawPart! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:31' prior: 50864433!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer depositPart).
	self assert: (accountReceiver hasRegistered: aTransfer withdrawPart).! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/4/2021 20:16:31' prior: 50864409 overrides: 50864399!
counterpart
	^ transfer withdrawPart.! !

!methodRemoval: Transfer #senderPart stamp: 'FV 7/5/2021 20:40:27'!
senderPart
	^withdrawPart!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:17:06' prior: 50864461!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).! !

!methodRemoval: ReceptiveAccountTest #atest11 stamp: 'FV 7/5/2021 20:40:27'!
atest11
	
	|accountSender accountReceiver |
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 2 equals: accountSender transactions size.
	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:21:18'!
test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	! !

!methodRemoval: ReceptiveAccountTest #test08 stamp: 'FV 7/5/2021 20:40:27'!
test08
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 150 * peso equals: accountSender balance.
	self assert: 50 * peso equals: accountReceiver balance.
	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:21:49'!
test09BothAccountsRegisterTransfer
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).! !

!methodRemoval: ReceptiveAccountTest #test09 stamp: 'FV 7/5/2021 20:40:27'!
test09
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:22:23'!
test09BothAccountsRegisterTheirPartOfTransfer
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).! !

!methodRemoval: ReceptiveAccountTest #test09BothAccountsRegisterTransfer stamp: 'FV 7/5/2021 20:40:27'!
test09BothAccountsRegisterTransfer
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: (accountSender hasRegistered: aTransfer withdrawPart).
	self assert: (accountReceiver hasRegistered: aTransfer depositPart).!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:22:58'!
test10ATransferKnowsItsValue
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 50 * peso equals: aTransfer value.! !

!methodRemoval: ReceptiveAccountTest #test10 stamp: 'FV 7/5/2021 20:40:27'!
test10
	
	|accountSender accountReceiver aTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	aTransfer := Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self assert: 50 * peso equals: aTransfer value.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/4/2021 20:23:28'!
test11BothTransferPartsKnowTheirCounterpart
	
	|accountSender accountReceiver withdrawPartOfTransfer depositPartOfTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	withdrawPartOfTransfer := accountSender transactions last.
	depositPartOfTransfer := accountReceiver  transactions last.
	
	
	self assert: depositPartOfTransfer equals: withdrawPartOfTransfer counterpart.
	self assert: withdrawPartOfTransfer equals: depositPartOfTransfer counterpart.
	! !

!methodRemoval: ReceptiveAccountTest #test11 stamp: 'FV 7/5/2021 20:40:27'!
test11
	
	|accountSender accountReceiver withdrawPartOfTransfer depositPartOfTransfer|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	
	withdrawPartOfTransfer := accountSender transactions last.
	depositPartOfTransfer := accountReceiver  transactions last.
	
	
	self assert: depositPartOfTransfer equals: withdrawPartOfTransfer counterpart.
	self assert: withdrawPartOfTransfer equals: depositPartOfTransfer counterpart.
	!

!classRemoval: #ReceiverPartOfTransfer stamp: 'FV 7/5/2021 20:41:43'!
Transfer subclass: #ReceiverPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #PortfolioTest category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:43:28'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Portfolio category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:49:20'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!PortfolioTest methodsFor: 'no messages' stamp: 'FV 7/5/2021 20:49:13'!
test01
	|aPortfolio|
	
	aPortfolio := Portfolio new.

	self assert: aPortfolio balance equals: 0.
	! !
!Portfolio methodsFor: 'no messages' stamp: 'FV 7/5/2021 20:49:36'!
balance
	^0.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:50:08'!
test02
	|aPortfolio|
	
	aPortfolio := Portfolio new.

	self assert: aPortfolio balance equals: 0.
	! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 20:50:08'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 20:50:08'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 20:50:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:52:08' prior: 50864716!
test02
	|aPortfolio anAccount anotherAccount|
	
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:54:27' prior: 50864730!
test02
	|aPortfolio anAccount |
	
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	Deposit register: 100 * peso on: anAccount.
	
	self assert: aPortfolio balance equals: 100 * peso.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:54:35' prior: 50864737!
test02
	|aPortfolio anAccount |
	
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	Deposit register: 100 * peso on: anAccount.
	
	self assert: aPortfolio balance equals: 100 * peso.! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 20:54:35'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:54:57' prior: 50864747!
test02
	|aPortfolio anAccount |
	
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:54:58' prior: 50864759!
test02
	|aPortfolio anAccount |
	
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 20:54:59'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:56:04' prior: 50864769!
test02
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 20:56:18'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:56:34'!
add: anAccount

	! !

Object subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Portfolio category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/5/2021 20:57:07'!
Object subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:57:26' prior: 50864793!
add: anAccount

	listOfAccounts add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:58:23' prior: 50864713!
balance
	^ listOfAccounts sum: [:anAccount | anAccount balance].! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 20:58:32'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 20:59:13' overrides: 16896425!
initialize
	
	listOfAccounts := OrderedCollection new.! !
!PortfolioTest class methodsFor: 'no messages' stamp: 'FV 7/5/2021 20:59:51' overrides: 16783533!
new
	^self basicNew initialize.! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 20:59:58'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 20:59:58'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 20:59:58'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 20:59:58'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 21:00:29'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 21:00:29'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 21:00:29'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:01:12' prior: 50864815!
balance
	^ listOfAccounts sum: [:anAccount | anAccount balance] ifEmpty: [^0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:01:20' prior: 50864848!
balance
	^ listOfAccounts sum: [:anAccount | anAccount balance] ifEmpty: [^0 * peso].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:01:33' prior: 50864707!
test01
	|aPortfolio|
	
	aPortfolio := Portfolio new.

	self assert: aPortfolio balance equals: 0 * peso.
	! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 21:01:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 21:01:41'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:02:56'!
test03
	|aPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:03:01' prior: 50864871!
test03
	|aPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.! !

!testRun: #PortfolioTest #test03 stamp: 'FV 7/5/2021 21:03:03'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 21:03:03'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 21:03:03'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/5/2021 21:03:03'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:03:55' prior: 50864854!
balance
	^ listOfAccounts last balance.
! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 21:04:04'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/5/2021 21:04:10'!
FAILURE!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/5/2021 21:04:10'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:04:19' prior: 50864910!
balance
	^ listOfAccounts sum: [:anAccount | anAccount balance] ifEmpty: [^0 * peso].
! !

!testRun: #PortfolioTest #test03 stamp: 'FV 7/5/2021 21:04:24'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:06:04'!
test04
	|aPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:13:52' prior: 50864930!
test04
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: aPortfolio hasRegistered: aTransaction.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:14:01' prior: 50864945!
test04
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aTransaction).! !

!testRun: #PortfolioTest #test04 stamp: 'FV 7/5/2021 21:14:04'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:14:45'!
hasRegistered: aTransaction
	^true.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 21:14:50'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 21:14:50'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/5/2021 21:14:50'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/5/2021 21:14:50'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:15:08'!
test05
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aTransaction).! !

!testRun: #PortfolioTest #test04 stamp: 'FV 7/5/2021 21:15:15'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 21:15:15'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 21:15:15'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/5/2021 21:15:15'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/5/2021 21:15:15'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:15:15'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:16:14' prior: 50864983!
test05
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self assert: (aPortfolio hasRegistered: aTransactionNotInPortfolio).! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:16:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:16:30' prior: 50865008!
test05
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:16:38'!
FAILURE!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:16:38'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:17:03' prior: 50864970!
hasRegistered: aTransaction
	^listOfAccounts last hasRegistered: aTransaction .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:17:04' prior: 50865042!
hasRegistered: aTransaction
	^listOfAccounts last hasRegistered: aTransaction.! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:17:08'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:17:08'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:19:05' prior: 50865048!
hasRegistered: aTransaction
	^listOfAccounts do: [:anAccount | anAccount hasRegistered: aTransaction].! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:19:09'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:19:09'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:20:24'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:20:24'!
ERROR!

aBoolean!

----End fileIn of C:\Users\fedev\Escritorio\Imagen Limpia CUIS\Packages\TerseGuide.pck.st----!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:24:50' prior: 50865058!
hasRegistered: aTransaction
	listOfAccounts detect: [:anAccount | anAccount hasRegistered: aTransaction] ifNone: [^false].
	^true.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/5/2021 21:24:53'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/5/2021 21:24:53'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/5/2021 21:24:53'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/5/2021 21:24:53'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/5/2021 21:24:53'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:25:04'!
testa05
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).! !

!methodRemoval: PortfolioTest #test05 stamp: 'FV 7/5/2021 21:25:04'!
test05
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:25:09'!
test05
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aTransaction).! !

!methodRemoval: PortfolioTest #test04 stamp: 'FV 7/5/2021 21:25:09'!
test04
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:25:15'!
test04
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).! !

!methodRemoval: PortfolioTest #testa05 stamp: 'FV 7/5/2021 21:25:15'!
testa05
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/5/2021 21:27:15' prior: 50868062!
hasRegistered: aTransaction
	listOfAccounts detect: [:anAccount | anAccount hasRegistered: aTransaction] ifNone: [^false].
	^true.! !

----SNAPSHOT----(5 July 2021 21:33:05) CuisUniversity-4532.image priorSource: 16898108!

----STARTUP---- (7 July 2021 16:06:16) as C:\Users\fedev\Escritorio\Imagen Limpia CUIS\CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:09:18'!
test06
	|aPortfolio anAccount|
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aPortfolio).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:13:08' prior: 50868168!
test06
	|aPortfolio anAccount|
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.

	
	self assert: (aPortfolio transactions) equals: anAccount transactions.! !

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:13:18'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:13:55'!
transactions
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:14:42' prior: 50868194!
transactions
	^ listOfAccounts last transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:14:46' prior: 50868198!
transactions
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:14:47' prior: 50868203!
transactions
	^ listOfAccounts last transactions.! !

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:14:50'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:14:52'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:14:52'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:14:52'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:14:52'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:14:52'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:14:52'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:17:14'!
test07
	|aPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.
	Withdraw register: 100* peso on: anotherAccount.

	
	self assert: (aPortfolio transactions) equals: anAccount transactions.! !

x = OrderedCollection new.!

x = OrderedCollection new.!

x := OrderedCollection new.!

x add: 1!

x add: 4.!

y := OrderedCollection new.!

y add: 1.!

y add: 4.!

y add: 3. !

y add: 2.!

x!

y!

y + x!

x union: y.!

x!

x addAll: y.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:22:55' prior: 50868228!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.
	Withdraw register: 100* peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions addAllLast: anotherAccount transactions.
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:23:34' prior: 50868254!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.
	Withdraw register: 100* peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions addAllLast: anotherAccount transactions.
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:24:02'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:24:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:24:02'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:24:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:24:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:24:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:24:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:24:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:24:10'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:24:10'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:24:10'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:24:10'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:24:10'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:24:10'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:24:10'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:24:10'!
PASSED!

self size.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:25:39' prior: 50868276!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.
	Withdraw register: 100* peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions addAll: anotherAccount transactions.
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:25:41'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:25:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:25:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:25:41'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:25:41'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:25:41'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:25:41'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:25:42'!
PASSED!

x!

y!

z := OrderedCollection new.!

z add: 10.!

y!

z add: 15.!

z!

y addAll: z!

y!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:27:18' prior: 50868335!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.
	Withdraw register: 100* peso on: anotherAccount.

	listOfAllTransactions := (anAccount transactions) addAll: (anotherAccount transactions).
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:27:20'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:27:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:27:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:27:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:27:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:27:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:27:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:27:20'!
PASSED!

self transactions.!

self transactions.!

Deposit!

self transactions addAll: self transactions.!

self transactions.!

Deposit!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:30:43' prior: 50868378!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.
	Withdraw register: 100* peso on: anotherAccount.

	listOfAllTransactions := (anAccount transactions) addAll: (anotherAccount transactions).
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:31:04' prior: 50868422!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.


	listOfAllTransactions := (anAccount transactions) addAll: (anotherAccount transactions).
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

self transactions.!

self transactions.!

self!

self!

self transactions!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:33:36' prior: 50868446!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := OrderedCollection new.
	listOfAllTransactions := (anAccount transactions) addAll: (anotherAccount transactions).
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:33:39'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:33:39'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:33:39'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:33:39'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:33:39'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:33:39'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:33:39'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:33:39'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:34:18' prior: 50868470!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := (anAccount transactions).
	listOfAllTransactions := listOfAllTransactions addAll: (anotherAccount transactions).
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:34:20' prior: 50868512!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := (anAccount transactions).
	listOfAllTransactions := listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:34:26'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:34:44' prior: 50868536!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:34:49'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:37:26' prior: 50868207!
transactions
	|allTheTransactions|
	allTheTransactions := OrderedCollection new.
	listOfAccounts do: [:anAccount| allTheTransactions addAll: anAccount transactions].
	^allTheTransactions.! !

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:37:30'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:37:32'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:37:32'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:37:32'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:37:32'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:37:32'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:37:33'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:37:33'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:38:58'!
test08
	|aPortfolio anotherPortfolio anAccount anotherAccount|! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:42:12' prior: 50868614!
test08
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.
	
	Deposit register: 500 * peso on: anAccount.
	Deposit register: 300 * peso on: anotherAccount.
	Withdraw register: 100 * peso on: anotherAccount.
	
	self assert: aPortfolio balance equals: 700 * peso.
	self assert: anotherPortfolio balance equals: 200 * peso.! !

!testRun: #PortfolioTest #test08 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'FV 7/7/2021 16:42:19'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:46:34' prior: 50868620!
test08
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:47:49' prior: 50868662!
test08
| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:47:53' prior: 50868666!
test08
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.! !

!testRun: #PortfolioTest #test08 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'FV 7/7/2021 16:48:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:48:55'!
test07a
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!methodRemoval: PortfolioTest #test07 stamp: 'FV 7/7/2021 16:48:55'!
test07
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:49:06'!
test07
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.! !

!methodRemoval: PortfolioTest #test08 stamp: 'FV 7/7/2021 16:49:06'!
test08
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:49:13'!
test08
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!methodRemoval: PortfolioTest #test07a stamp: 'FV 7/7/2021 16:49:13'!
test07a
| aPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:50:00'!
test06a
	|aPortfolio anAccount|
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.

	
	self assert: (aPortfolio transactions) equals: anAccount transactions.! !

!methodRemoval: PortfolioTest #test06 stamp: 'FV 7/7/2021 16:50:00'!
test06
	|aPortfolio anAccount|
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.

	
	self assert: (aPortfolio transactions) equals: anAccount transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:50:08'!
test06
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.! !

!methodRemoval: PortfolioTest #test07 stamp: 'FV 7/7/2021 16:50:08'!
test07
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:50:13'!
test07
	|aPortfolio anAccount|
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.

	
	self assert: (aPortfolio transactions) equals: anAccount transactions.! !

!methodRemoval: PortfolioTest #test06a stamp: 'FV 7/7/2021 16:50:13'!
test06a
	|aPortfolio anAccount|
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.

	
	self assert: (aPortfolio transactions) equals: anAccount transactions.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:51:39' prior: 50868756!
test08
| aPortfolio anotherPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:51:45' prior: 50868860!
test08
| aPortfolio anotherPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Withdraw register: 50 * peso on: anAccount.
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:51:53' prior: 50868886!
test08
| aPortfolio anotherPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!testRun: #PortfolioTest #test08 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'FV 7/7/2021 16:52:02'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:54:03' prior: 50864886!
test03
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 16:55:21' prior: 50868957!
test03
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.! !

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'FV 7/7/2021 16:55:26'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:00:14'!
test01TheBalanceOfAnEmptyPortfolioIs0
	|aPortfolio|
	
	aPortfolio := Portfolio new.

	self assert: aPortfolio balance equals: 0 * peso.
	! !

!methodRemoval: PortfolioTest #test01 stamp: 'FV 7/7/2021 17:00:14'!
test01
	|aPortfolio|
	
	aPortfolio := Portfolio new.

	self assert: aPortfolio balance equals: 0 * peso.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:01:34'!
test02PortfolioCalculatesBalanceOfAnAccount
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test02 stamp: 'FV 7/7/2021 17:01:34'!
test02
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:01:52'!
test02PortfolioCanCalculateBalanceOfAnAccount
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test02PortfolioCalculatesBalanceOfAnAccount stamp: 'FV 7/7/2021 17:01:52'!
test02PortfolioCalculatesBalanceOfAnAccount
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:02:29'!
test03APortfolioCanCalculateBalanceOfAllAccountsOnIt
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test03 stamp: 'FV 7/7/2021 17:02:29'!
test03
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:02:41'!
test03APortfolioCanCalculateBalanceOfAllAccountsInsideIt
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test03APortfolioCanCalculateBalanceOfAllAccountsOnIt stamp: 'FV 7/7/2021 17:02:41'!
test03APortfolioCanCalculateBalanceOfAllAccountsOnIt
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:02:53'!
test02APortfolioCanCalculateBalanceOfAnAccountInsideIt
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test02PortfolioCanCalculateBalanceOfAnAccount stamp: 'FV 7/7/2021 17:02:53'!
test02PortfolioCanCalculateBalanceOfAnAccount
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:03:34'!
test02APortfolioCanCalculateBalanceOfTheAccount
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test02APortfolioCanCalculateBalanceOfAnAccountInsideIt stamp: 'FV 7/7/2021 17:03:34'!
test02APortfolioCanCalculateBalanceOfAnAccountInsideIt
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:03:49'!
test03APortfolioCanCalculateBalanceOfItsAccounts
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test03APortfolioCanCalculateBalanceOfAllAccountsInsideIt stamp: 'FV 7/7/2021 17:03:49'!
test03APortfolioCanCalculateBalanceOfAllAccountsInsideIt
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:04:09'!
test02APortfolioCanCalculateBalanceOfOneAccount
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test02APortfolioCanCalculateBalanceOfTheAccount stamp: 'FV 7/7/2021 17:04:09'!
test02APortfolioCanCalculateBalanceOfTheAccount
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:06:32'!
test04APortfolioDoesNotRegisterAlienTransaccions
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).! !

!methodRemoval: PortfolioTest #test04 stamp: 'FV 7/7/2021 17:06:32'!
test04
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:08:41'!
test04APortfolioDoesNotRegisterTransaccionsOutsideOfIt
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).! !

!methodRemoval: PortfolioTest #test04APortfolioDoesNotRegisterAlienTransaccions stamp: 'FV 7/7/2021 17:08:41'!
test04APortfolioDoesNotRegisterAlienTransaccions
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:09:11'!
test05APortfolioCanRegisterTransactionsOfItsAccounts
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aTransaction).! !

!methodRemoval: PortfolioTest #test05 stamp: 'FV 7/7/2021 17:09:11'!
test05
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:09:43'!
test06AnEmptyPortfolioTransactionListIsEmpty
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.! !

!methodRemoval: PortfolioTest #test06 stamp: 'FV 7/7/2021 17:09:43'!
test06
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:09:55'!
test06AnEmptyPortfolioTransactionsListIsEmpty
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.! !

!methodRemoval: PortfolioTest #test06AnEmptyPortfolioTransactionListIsEmpty stamp: 'FV 7/7/2021 17:09:55'!
test06AnEmptyPortfolioTransactionListIsEmpty
	| aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self assert: aPortfolio transactions size equals: 0.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:11:25'!
test06APortfolioCanShowAllOfItsTransactions
| aPortfolio anotherPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!methodRemoval: PortfolioTest #test08 stamp: 'FV 7/7/2021 17:11:25'!
test08
| aPortfolio anotherPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.!

!methodRemoval: PortfolioTest #test07 stamp: 'FV 7/7/2021 17:11:35'!
test07
	|aPortfolio anAccount|
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.

	
	self assert: (aPortfolio transactions) equals: anAccount transactions.!

!methodRemoval: PortfolioTest #test02APortfolioCanCalculateBalanceOfOneAccount stamp: 'FV 7/7/2021 17:11:40'!
test02APortfolioCanCalculateBalanceOfOneAccount
	|aPortfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	Deposit register: 100 * peso on: anAccount.
	
	self assert: 100 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:11:46'!
test02APortfolioCanCalculateBalanceOfItsAccounts
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.! !

!methodRemoval: PortfolioTest #test03APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/7/2021 17:11:46'!
test03APortfolioCanCalculateBalanceOfItsAccounts
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self assert: 250 * peso equals: aPortfolio balance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:11:52'!
test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).! !

!methodRemoval: PortfolioTest #test04APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/7/2021 17:11:52'!
test04APortfolioDoesNotRegisterTransaccionsOutsideOfIt
	|aPortfolio anAccountNotInPortfolio aTransactionNotInPortfolio |
	
	anAccountNotInPortfolio := ReceptiveAccount new.
	aPortfolio := Portfolio new.

	aTransactionNotInPortfolio := Deposit register: 100 * peso on: anAccountNotInPortfolio .

	
	self deny: (aPortfolio hasRegistered: aTransactionNotInPortfolio).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:11:59'!
test04APortfolioCanRegisterTransactionsOfItsAccounts
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aTransaction).! !

!methodRemoval: PortfolioTest #test05APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/7/2021 17:11:59'!
test05APortfolioCanRegisterTransactionsOfItsAccounts
	|aPortfolio anAccount aTransaction |
	
	anAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	aPortfolio add: anAccount.

	aTransaction := Deposit register: 100 * peso on: anAccount.

	
	self assert: (aPortfolio hasRegistered: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:12:07'!
test05APortfolioCanShowAllOfItsTransactions
| aPortfolio anotherPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.! !

!methodRemoval: PortfolioTest #test06APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/7/2021 17:12:07'!
test06APortfolioCanShowAllOfItsTransactions
| aPortfolio anotherPortfolio listOfAllTransactions anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.
	
	Deposit register: 100 * peso on: anAccount.
	Withdraw register: 25 * peso on: anAccount.
	Deposit register: 500 * peso on: anotherAccount.

	listOfAllTransactions := anAccount transactions.
	listOfAllTransactions addAll: (anotherAccount transactions).
	
	self assert: (aPortfolio transactions) equals: listOfAllTransactions.!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/7/2021 17:12:14'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/7/2021 17:12:14'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/7/2021 17:12:14'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/7/2021 17:12:14'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/7/2021 17:12:14'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:14'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:15'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:16'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:20'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/7/2021 17:12:20'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/7/2021 17:12:20'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/7/2021 17:12:20'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/7/2021 17:12:20'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/7/2021 17:12:20'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:20'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:22'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/7/2021 17:12:22'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/7/2021 17:12:22'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/7/2021 17:12:22'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/7/2021 17:12:22'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/7/2021 17:12:22'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:22'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/7/2021 17:12:23'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/7/2021 17:12:23'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/7/2021 17:12:23'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/7/2021 17:12:23'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/7/2021 17:12:23'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:23'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/7/2021 17:12:29'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/7/2021 17:12:29'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/7/2021 17:12:29'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/7/2021 17:12:29'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/7/2021 17:12:29'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:29'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/7/2021 17:12:41'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/7/2021 17:12:41'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/7/2021 17:12:41'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/7/2021 17:12:41'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/7/2021 17:12:41'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/7/2021 17:12:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/7/2021 17:18:38'!
PASSED!

Object subclass: #Transfer
	instanceVariableNames: 'value depositPart withdrawPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Transfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/7/2021 17:19:13'!
Object subclass: #Transfer
	instanceVariableNames: 'value depositPart withdrawPart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/7/2021 17:19:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/7/2021 17:19:19'!
PASSED!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:26:51' prior: 50864301!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer aTransfer|
	
	aTransfer := self new initializeFor: anAmountOfMoney.
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer newFromTransfer: aTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer newFromTransfer: aTransfer.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	aTransfer setDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.
	^aTransfer! !
!DepositPartOfTransfer class methodsFor: 'no messages' stamp: 'FV 7/7/2021 17:27:49'!
newFromTransfer: aTransfer
	^self new initialzeFromTransfer: aTransfer.! !
!DepositPartOfTransfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:28:06' prior: 50869835!
newFromTransfer: aTransfer
	^self new initializeFromTransfer: aTransfer.! !
!DepositPartOfTransfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:28:17' prior: 50869841!
newFromTransfer: aTransfer
	^self new initializeFromTransfer: aTransfer.! !
!WithdrawPartOfTransfer class methodsFor: 'no messages' stamp: 'FV 7/7/2021 17:28:30'!
newFromTransfer: aTransfer
	^self new initializeFromTransfer: aTransfer.! !

Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #XXX category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/7/2021 17:29:25'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

XXX subclass: #DepositPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/7/2021 17:29:31'!
XXX subclass: #DepositPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

XXX subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/7/2021 17:29:35'!
XXX subclass: #WithdrawPartOfTransfer
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!XXX methodsFor: 'no messages' stamp: 'FV 7/7/2021 17:29:45'!
initializeFromTransfer: aTransfer
	| transfer |
	transfer := aTransfer! !
!XXX methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:30:01' prior: 50869897!
initializeFromTransfer: aTransfer
	| transfer |
	transfer := aTransfer! !
!XXX methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:30:06' prior: 50869902!
initializeFromTransfer: aTransfer
	| transfera |
	transfera := aTransfer! !

Object subclass: #XXX
	instanceVariableNames: 'aTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Object subclass: #XXX
	instanceVariableNames: 'aTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Object subclass: #XXX
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Object subclass: #XXX
	instanceVariableNames: 'transferz'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #XXX category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/7/2021 17:30:30'!
Object subclass: #XXX
	instanceVariableNames: 'transferz'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

XXX subclass: #DepositPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #DepositPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/7/2021 17:30:34'!
XXX subclass: #DepositPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

XXX subclass: #WithdrawPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #WithdrawPartOfTransfer category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/7/2021 17:30:40'!
XXX subclass: #WithdrawPartOfTransfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Object subclass: #XXX
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #XXX category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/7/2021 17:30:45'!
Object subclass: #XXX
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!methodRemoval: WithdrawPartOfTransfer #initializeFromTransfer: stamp: 'FV 7/7/2021 17:30:55'!
initializeFromTransfer: aTransfer
	transfer := aTransfer.!

!methodRemoval: DepositPartOfTransfer #initializeFromTransfer: stamp: 'FV 7/7/2021 17:31:00'!
initializeFromTransfer: aTransfer
	transfer := aTransfer!
!XXX methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:31:08' prior: 50869907!
initializeFromTransfer: aTransfer
	transfer := aTransfer! !
!XXX methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:31:21'!
counterpart! !
!XXX methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:31:32' prior: 50869993!
counterpart
	self subclassResponsibility.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:32:00'!
effectOnAccount
	self subclassResponsibility.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/7/2021 17:32:05'!
PASSED!

!methodRemoval: Transfer #counterpart stamp: 'FV 7/7/2021 17:32:27'!
counterpart
	self subclassResponsibility.!

!methodRemoval: Transfer #effectOnAccount stamp: 'FV 7/7/2021 17:32:33'!
effectOnAccount
	self subclassResponsibility.!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/7/2021 17:32:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/7/2021 17:32:36'!
PASSED!
!XXX class methodsFor: 'no messages' stamp: 'FV 7/7/2021 17:33:05'!
newFromTransfer: aTransfer
	^self new initializeFromTransfer: aTransfer.! !

!methodRemoval: DepositPartOfTransfer class #newFromTransfer: stamp: 'FV 7/7/2021 17:33:15'!
newFromTransfer: aTransfer
	^self new initializeFromTransfer: aTransfer.!

!methodRemoval: WithdrawPartOfTransfer class #newFromTransfer: stamp: 'FV 7/7/2021 17:33:25'!
newFromTransfer: aTransfer
	^self new initializeFromTransfer: aTransfer.!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/7/2021 17:33:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/7/2021 17:33:27'!
PASSED!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:37:17' prior: 50869814!
register: anAmountOfMoney from: accountSender to: accountReceiver
	|aWithdrawPartOfTransfer aDepositPartOfTransfer aTransfer|
	
	aTransfer := self new initializeFor: anAmountOfMoney.
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer newFromTransfer: aTransfer.
	aDepositPartOfTransfer := DepositPartOfTransfer newFromTransfer: aTransfer.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	aTransfer setDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.
	^aTransfer! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/7/2021 17:38:05' prior: 50864322!
initializeFor: anAmountOfMoney
	value := anAmountOfMoney.! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/7/2021 17:38:59'!
initializeWith: anAmountOfMoney from: accountSender to: accountReceiver
	value := anAmountOfMoney.! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/7/2021 17:40:04' prior: 50870179!
initializeWith: anAmountOfMoney from: accountSender to: accountReceiver
	
	| aDepositPartOfTransfer  aWithdrawPartOfTransfer aTransfer |
	value := anAmountOfMoney.
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer newFromTransfer: self.
	aDepositPartOfTransfer := DepositPartOfTransfer newFromTransfer: self.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	aTransfer setDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer.! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/7/2021 17:40:51' prior: 50870185!
initializeWith: anAmountOfMoney from: accountSender to: accountReceiver
	
	| aDepositPartOfTransfer  aWithdrawPartOfTransfer aTransfer |
	value := anAmountOfMoney.
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer newFromTransfer: self.
	aDepositPartOfTransfer := DepositPartOfTransfer newFromTransfer: self.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.! !
!Transfer methodsFor: 'initialization' stamp: 'FV 7/7/2021 17:41:00' prior: 50870204!
initializeWith: anAmountOfMoney from: accountSender to: accountReceiver
	
	| aDepositPartOfTransfer  aWithdrawPartOfTransfer |
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer newFromTransfer: self.
	aDepositPartOfTransfer := DepositPartOfTransfer newFromTransfer: self.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	value := anAmountOfMoney.
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.! !

!methodRemoval: Transfer #initializeFor: stamp: 'FV 7/7/2021 17:42:22'!
initializeFor: anAmountOfMoney
	value := anAmountOfMoney.!

!methodRemoval: Transfer #setDepositPart:andWithdrawPart: stamp: 'FV 7/7/2021 17:42:32'!
setDepositPart: aDepositPartOfTransfer andWithdrawPart: aWithdrawPartOfTransfer
	
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:42:53' prior: 50870153!
register: anAmountOfMoney from: accountSender to: accountReceiver
	
	
	^self new initializeFor: anAmountOfMoney.
	
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'FV 7/7/2021 17:43:14' prior: 50870254!
register: anAmountOfMoney from: accountSender to: accountReceiver
	
	^self new initializeWith: anAmountOfMoney from: accountSender to: accountReceiver
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/7/2021 17:43:18'!
PASSED!

----SNAPSHOT----(7 July 2021 17:44:21) CuisUniversity-4532.image priorSource: 17168325!