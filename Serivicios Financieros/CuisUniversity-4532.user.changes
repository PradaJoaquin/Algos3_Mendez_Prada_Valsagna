

----SNAPSHOT----(8 July 2021 04:16:18) CuisUniversity-4532.image priorSource: 17237093!

----STARTUP---- (8 July 2021 15:03:48) as C:\Users\fedev\Escritorio\Imagen Limpia CUIS\CuisUniversity-4532.image!


!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 15:07:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 15:07:43'!
PASSED!
!Transfer methodsFor: 'initialization' stamp: 'FV 7/8/2021 15:11:35' prior: 50870223!
initializeWith: anAmountOfMoney from: accountSender to: accountReceiver
	
	| aDepositPartOfTransfer  aWithdrawPartOfTransfer |
	
	
	aWithdrawPartOfTransfer := WithdrawPartOfTransfer newFromTransfer: self.
	aDepositPartOfTransfer := DepositPartOfTransfer newFromTransfer: self.
	accountSender register: aWithdrawPartOfTransfer.
	accountReceiver register: aDepositPartOfTransfer.
	
	value := anAmountOfMoney.
	depositPart := aDepositPartOfTransfer.
	withdrawPart := aWithdrawPartOfTransfer.! !
!DepositPartOfTransfer methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 15:11:54' prior: 50864395 overrides: 50870001!
effectOnAccount

	^transfer value! !

!classRenamed: #XXX as: #TransferPart stamp: 'FV 7/8/2021 15:15:15'!
Smalltalk renameClassNamed: #XXX as: #TransferPart!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/8/2021 15:19:57'!
theAccount: anAccount balanceIs: anExpectedBalance
	self assert: anAccount balance equals: anExpectedBalance.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/8/2021 15:21:19' prior: 50862583!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self theAccount: account balanceIs: 0.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/8/2021 15:21:25' prior: 50870417!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self theAccount: account balanceIs: 0 * peso.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 15:21:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 15:21:27'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/8/2021 15:21:38' prior: 50862590!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 * peso on: account.
		
	self theAccount: account balanceIs: 100 * peso.
! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 15:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 15:21:40'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/8/2021 15:21:47' prior: 50862599!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 * peso on: account.
	Withdraw register: 50 * peso on: account.
		
	self theAccount: account balanceIs: 50 * peso.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/8/2021 15:22:32' prior: 50864514!
test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self theAccount: accountSender balanceIs: 150 * peso.
	self assert: 50 * peso equals: accountReceiver balance.
	! !

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 15:22:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 15:22:34'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'FV 7/8/2021 15:22:46' prior: 50870544!
test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount
	|accountSender accountReceiver|
	
	accountSender := ReceptiveAccount new.
	Deposit register: 200 * peso on: accountSender.
	accountReceiver := ReceptiveAccount new.
	
	Transfer register: 50 * peso from: accountSender to: accountReceiver.
	
	self theAccount: accountSender balanceIs: 150 * peso.
	self theAccount: accountReceiver balanceIs: 50 * peso.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 15:24:37'!
theAccount: anAccount balanceIs: anExpectedBalance
	self assert: anAccount balance equals: anExpectedBalance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 15:25:20'!
thePortfolio: aPortfolio balanceIs: anExpectedBalance
	self assert: aPortfolio equals: anExpectedBalance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 15:25:26' prior: 50870630!
thePortfolio: aPortfolio balanceIs: anExpectedBalance
	self assert: aPortfolio balance equals: anExpectedBalance.! !

!methodRemoval: PortfolioTest #theAccount:balanceIs: stamp: 'FV 7/8/2021 15:25:43'!
theAccount: anAccount balanceIs: anExpectedBalance
	self assert: anAccount balance equals: anExpectedBalance.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 15:26:04' prior: 50869011!
test01TheBalanceOfAnEmptyPortfolioIs0
	|aPortfolio|
	
	aPortfolio := Portfolio new.

	self thePortfolio: aPortfolio balanceIs: 0 * peso.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 15:26:23' prior: 50869431!
test02APortfolioCanCalculateBalanceOfItsAccounts
	|aPortfolio anotherPortfolio anAccount anotherAccount|
	
	anAccount := ReceptiveAccount new.
	anotherAccount := ReceptiveAccount new.
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anotherAccount.

	Deposit register: 100 * peso on: anAccount.
	Deposit register: 150 * peso on: anotherAccount.
	
	self thePortfolio: aPortfolio balanceIs: 250 * peso.! !

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 15:26:27'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 15:26:27'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 15:26:27'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 15:26:27'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 15:26:27'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 15:26:27'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 15:26:28'!
PASSED!

Object subclass: #AccountType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #AccountType category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 15:32:56'!
Object subclass: #AccountType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

AccountType subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Portfolio category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 15:33:14'!
AccountType subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

AccountType subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 15:33:22'!
AccountType subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!AccountType methodsFor: 'no messages' stamp: 'FV 7/8/2021 15:34:13'!
balance
	^self subclassResponsibility.! !
!AccountType methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 15:35:27'!
hasRegistered: anAccount
	self subclassResponsibility.! !
!AccountType methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 15:35:57'!
transactions
	self subclassResponsibility.! !

Object subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Portfolio category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 15:40:39'!
Object subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 15:40:45'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classRemoval: #AccountType stamp: 'FV 7/8/2021 15:40:49'!
Object subclass: #AccountType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 15:50:50'!
test01
	|aPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	
	self should: [aPortfolio add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 15:50:54'!
FAILURE!
!Portfolio class methodsFor: 'Errors' stamp: 'FV 7/8/2021 15:51:42'!
accountAlreadyInPortfolioError
	^ 'The account is already in the portfolio.'! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 15:51:51'!
FAILURE!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 15:51:51'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 15:51:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 15:51:51'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 15:51:51'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 15:51:51'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 15:51:51'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 15:51:51'!
FAILURE!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 15:54:12' prior: 50864810!
add: anAccount
	(listOfAccounts includes: anAccount) ifTrue: [^ self class accountAlreadyInPortfolioError].
	listOfAccounts add: anAccount.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 15:54:15'!
FAILURE!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 15:54:15'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 15:54:15'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 15:54:15'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 15:54:15'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 15:54:15'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 15:54:15'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 15:54:15'!
FAILURE!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 15:54:29'!
FAILURE!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 15:54:29'!
FAILURE!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 15:55:02' prior: 50870836!
add: anAccount
	(listOfAccounts includes: anAccount) ifTrue: [^self class accountAlreadyInPortfolioError].
	listOfAccounts add: anAccount.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 15:55:16' prior: 50870874!
add: anAccount
	(listOfAccounts includes: anAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: anAccount.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 15:55:22'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 15:57:27'!
test02
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	
	self should: [aPortfolio add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 15:57:51' prior: 50870892!
test02
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	anotherPortfolio add: anAccount.
	
	self should: [aPortfolio add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 15:58:21' prior: 50870907!
test02
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anAccount.
	
	self should: [aPortfolio add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 15:58:44'!
FAILURE!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:03:01' prior: 50870882!
add: anAccount
	(listOfAccounts includes: anAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: anAccount.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:07:59' prior: 50870941!
add: anAccount
	
	
	(listOfAccounts includes: anAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: anAccount.! !

Object subclass: #AccountType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #AccountType category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 16:08:24'!
Object subclass: #AccountType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

AccountType subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Portfolio category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 16:08:31'!
AccountType subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

AccountType subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 16:08:39'!
AccountType subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:09:02' prior: 50870949!
add: anAccount
	
	(listOfAccounts includes: anAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: anAccount.! !

x := OrderedCollection new.!

x anySatisfy: [x > 3].!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:16:41' prior: 50870997!
add: aNewAccount
	
	(listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: aNewAccount.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:16:49'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:16:49'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:16:49'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:16:49'!
ERROR!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:16:49'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:16:49'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:16:49'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:16:49'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:17:05'!
ERROR!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:17:05'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:17:05'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:17:23'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:17:23'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:17:32'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:17:32'!
ERROR!
!AccountType methodsFor: 'no messages' stamp: 'FV 7/8/2021 16:18:04'!
includes: aNewAccount
	self subclassResponsibility.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:19:05' overrides: 50871072!
includes: aNewAccount
	^ listOfAccounts includes: aNewAccount.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:19:45' prior: 50871077 overrides: 50871072!
includes: aNewAccount
	^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:20:14' prior: 50871007!
add: aNewAccount
	
	(self includes: aNewAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: aNewAccount.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:20:20' prior: 50871083 overrides: 50871072!
includes: aNewAccount
	^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount].! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:21:10' overrides: 50871072!
includes: aNewAccount
	^ self = aNewAccount.
	! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:21:14'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:21:14'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:21:14'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:21:14'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:21:14'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:21:14'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:21:14'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:21:14'!
PASSED!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:22:05' prior: 50871105 overrides: 50871072!
includes: aNewAccount
	^ self = aNewAccount.
	! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:22:36'!
equals: aNewAccount
	^ self = aNewAccount.
	! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:22:43' prior: 50871136 overrides: 50871072!
includes: aNewAccount
	^ self equals: aNewAccount.
	! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:23:16' overrides: 16881029!
= aNewAccount
	^ self = aNewAccount.
	! !

!methodRemoval: ReceptiveAccount #= stamp: 'FV 7/8/2021 16:23:23'!
= aNewAccount
	^ self = aNewAccount.
	!

!methodRemoval: ReceptiveAccount #equals: stamp: 'FV 7/8/2021 16:23:27'!
equals: aNewAccount
	^ self = aNewAccount.
	!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:23:35' prior: 50871146 overrides: 50871072!
includes: aNewAccount
	^ self = aNewAccount.
	! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:23:43'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 16:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 16:23:49'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:23:51'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:23:51'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:23:51'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:23:51'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:23:51'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:23:51'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:23:51'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:23:51'!
PASSED!

----SNAPSHOT----(8 July 2021 16:24:05) CuisUniversity-4532.image priorSource: 17237182!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:24:56'!
test03
	|aPortfolio|
	
	aPortfolio := Portfolio new.
	
	aPortfolio add: aPortfolio..! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:24:57' prior: 50871330!
test03
	|aPortfolio|
	
	aPortfolio := Portfolio new.
	
	aPortfolio add: aPortfolio.! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:25:34' prior: 50871336!
test03
	|aPortfolio|
	
	aPortfolio := Portfolio new.
	
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItself].! !

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:25:41'!
FAILURE!
!Portfolio class methodsFor: 'Errors' stamp: 'FV 7/8/2021 16:26:55'!
portfolioCannotContainItselfError
	^'A portfolio cannot contain itself'.! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:27:12' prior: 50871342!
test03
	|aPortfolio|
	
	aPortfolio := Portfolio new.
	
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:27:13'!
FAILURE!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:27:54' prior: 50871361!
test03
	|aPortfolio|
	
	aPortfolio := Portfolio new.
	
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:29:05' prior: 50871375!
test03
	|aPortfolio anotherPortfolio|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: aPortfolio.
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:30:15'!
test04
	|aPortfolio anotherPortfolio|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: aPortfolio.
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:30:36' prior: 50871386!
test03
	|aPortfolio |
	
	aPortfolio := Portfolio new.
	
	aPortfolio add: aPortfolio.
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 16:32:10' prior: 50871089!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	(self includes: aNewAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: aNewAccount.! !

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:32:15'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:32:15'!
ERROR!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:32:53' prior: 50871416!
test03
	|aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:32:55'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:33:01'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:33:03'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:33:56' prior: 50871401!
test04
	|aPortfolio anotherPortfolio|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	
	aPortfolio add: anotherPortfolio.
	self should: [anotherPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:33:57'!
FAILURE!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:35:05'!
FAILURE!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:36:06' prior: 50871492!
test04
	|aPortfolio anotherPortfolio|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	
	aPortfolio add: anotherPortfolio.

	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 16:36:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 16:36:06'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:36:38' prior: 50871511!
test04
	|aPortfolio anotherPortfolio|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	
	aPortfolio add: anotherPortfolio.
	self should: [anotherPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:37:38'!
FAILURE!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:38:46' prior: 50871599!
test04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anotherPortfolio.
	self should: [anotherPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:39:09' prior: 50871616!
test04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	
	aPortfolio add: anotherPortfolio.
	self should: [anotherPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:39:34' prior: 50871632!
test04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	
	self should: [anotherPortfolio add: anAccount.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:40:07' prior: 50871649!
test04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	
	self should: [anotherPortfolio add: anAccount.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:43:30'!
FAILURE!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:43:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 16:43:30'!
FAILURE!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:43:41'!
atest04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	
	self should: [anotherPortfolio add: anAccount.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].! !

!methodRemoval: PortfolioTest #test04 stamp: 'FV 7/8/2021 16:43:41'!
test04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	
	self should: [anotherPortfolio add: anAccount.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:43:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 16:43:45'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 16:43:47'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 16:43:47'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 16:43:47'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 16:43:47'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 16:43:47'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 16:43:47'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 16:43:47'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 16:43:47'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 16:43:47'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 16:43:56'!
test04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	
	self should: [anotherPortfolio add: anAccount.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].! !

!methodRemoval: PortfolioTest #atest04 stamp: 'FV 7/8/2021 16:43:56'!
atest04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	
	self should: [anotherPortfolio add: anAccount.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].!

Object subclass: #AccountType
	instanceVariableNames: 'fatherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #AccountType category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 16:56:13'!
Object subclass: #AccountType
	instanceVariableNames: 'fatherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:09:04' prior: 50871098 overrides: 50871072!
includes: aNewAccount
	^(fatherPortfolio includes: aNewAccount) or: [listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].! !

----SNAPSHOT----(8 July 2021 17:09:50) CuisUniversity-4532.image priorSource: 17269650!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:11:58' prior: 50871428!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	(self includes: aNewAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !

Object subclass: #AccountType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #AccountType category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 17:13:00'!
Object subclass: #AccountType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

AccountType subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts fatherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!

!classDefinition: #Portfolio category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 17:13:06'!
AccountType subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts fatherPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:13:23' prior: 50871901!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	(self includes: aNewAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: aNewAccount.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:14:04' prior: 50871940!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	(self includes: aNewAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !
!AccountType methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 17:14:54'!
nowBelongsTo: aFatherPortfolio
	^self subclassResponsibility.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:15:55' overrides: 50871963!
nowBelongsTo: aFatherPortfolio
	fatherPortfolio := aFatherPortfolio.! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:16:33' overrides: 50871963!
nowBelongsTo: aFatherPortfolio! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:16:41'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:16:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:16:41'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:16:41'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:16:41'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:16:41'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:16:41'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:16:41'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:16:41'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:16:41'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:16:53'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:16:53'!
ERROR!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:19:52' prior: 50871890 overrides: 50871072!
includes: aNewAccount
	(fatherPortfolio = nil): [].
	^(fatherPortfolio includes: aNewAccount) or: [listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:20:17'!
belongsToAPortfolio
	^ fatherPortfolio = nil.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:20:39' prior: 50872022!
belongsToAPortfolio
	^ (fatherPortfolio = nil) negated.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:23:05' prior: 50872014 overrides: 50871072!
includes: aNewAccount
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
		
	^(fatherPortfolio includes: aNewAccount) or: [listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:23:23' prior: 50872033 overrides: 50871072!
includes: aNewAccount
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
	^(fatherPortfolio includes: aNewAccount) or: [listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:23:25'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:23:25'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:23:25'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:23:25'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:23:25'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:23:25'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:23:25'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:23:25'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:23:25'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:23:25'!
PASSED!
!AccountType class methodsFor: 'no messages' stamp: 'FV 7/8/2021 17:24:07'!
accountAlreadyInPortfolioError
	^ 'The account is already in the portfolio.'! !

!methodRemoval: Portfolio class #accountAlreadyInPortfolioError stamp: 'FV 7/8/2021 17:24:13'!
accountAlreadyInPortfolioError
	^ 'The account is already in the portfolio.'!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:24:52'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:24:52'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:24:52'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:24:52'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:24:52'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:24:52'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:24:52'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:24:52'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:24:52'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:24:52'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:24:56'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:24:56'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:24:56'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:24:56'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:24:56'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:24:56'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:24:56'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:24:56'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:24:56'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:24:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 17:25:00'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:25:02'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:25:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:25:02'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:25:02'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:25:02'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:25:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:25:02'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:25:02'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:25:02'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:25:02'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:25:17'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:25:17'!
ERROR!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:25:39' prior: 50872027!
belongsToAPortfolio
	^ (fatherPortfolio = nil) not.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:25:45'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:25:45'!
PASSED!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:26:29' prior: 50872045 overrides: 50871072!
includes: aNewAccount
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
	^(fatherPortfolio includes: aNewAccount).! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:26:33'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:26:33'!
PASSED!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:28:25' prior: 50872245 overrides: 50871072!
includes: aNewAccount

	
	^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:28:31' prior: 50872260 overrides: 50871072!
includes: aNewAccount	
	^ listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:30:08'!
fatherIncludes: aNewAccount	
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
	^(fatherPortfolio includes: aNewAccount).
	! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:31:16' prior: 50871951!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	(self includes: aNewAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	(self fatherIncludes: aNewAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:31:17'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:31:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 17:31:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 17:31:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 17:31:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 17:31:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 17:31:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 17:31:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 17:31:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 17:31:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 17:31:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 17:31:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 17:31:31'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:31:33'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:31:33'!
PASSED!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:32:05' prior: 50872282!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	(self fatherIncludes: aNewAccount) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:32:09'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 17:36:48'!
test05
	|aPortfolio anotherPortfolio aThirdPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	aThirdPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: aThirdPortfolio.
	
	self should: [aThirdPortfolio add: anAccount.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 17:36:49'!
FAILURE!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 17:37:43' prior: 50872273!
fatherIncludes: aNewAccount	
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
	^(fatherPortfolio fatherIncludes: aNewAccount).
	! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:37:55'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:37:55'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 17:42:18' prior: 50872471!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 17:42:51' prior: 50872535!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 17:42:53'!
FAILURE!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 17:44:08' prior: 50872557!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType portfoliosCannotShareAccountsError].! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 17:44:20'!
FAILURE!
!Portfolio class methodsFor: 'Errors' stamp: 'FV 7/8/2021 17:46:35'!
portfoliosCannotShareAccountsError
	^'There are accounts shared between the portfolios'! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 17:46:59' prior: 50872581!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfoliosCannotShareAccountsError].! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 17:47:07'!
FAILURE!
!Portfolio methodsFor: 'private' stamp: 'FV 7/8/2021 17:53:42' prior: 50871968 overrides: 50871963!
nowBelongsTo: aFatherPortfolio
	fatherPortfolio add: aFatherPortfolio.! !

!classDefinition: #Portfolio category: 'ServiciosFinancieros-Ejercicio' stamp: 'FV 7/8/2021 17:54:19'!
AccountType subclass: #Portfolio
	instanceVariableNames: 'listOfAccounts fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ServiciosFinancieros-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 17:54:19' prior: 50872636 overrides: 50871963!
nowBelongsTo: aFatherPortfolio
	fatherPortfolios add: aFatherPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 17:54:19' prior: 50872493!
fatherIncludes: aNewAccount	
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
	^(fatherPortfolios fatherIncludes: aNewAccount).
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 17:54:19' prior: 50872234!
belongsToAPortfolio
	^ (fatherPortfolios = nil) not.! !
!Portfolio methodsFor: 'initialization' stamp: 'FV 7/8/2021 17:54:37' prior: 50864823 overrides: 16896425!
initialize
	
	listOfAccounts := OrderedCollection new.
	fatherPortfolios := OrderedCollection new.! !

----SNAPSHOT----(8 July 2021 17:56:50) CuisUniversity-4532.image priorSource: 17287890!

----STARTUP---- (8 July 2021 17:57:04) as C:\Users\fedev\Escritorio\Imagen Limpia CUIS\CuisUniversity-4532.image!

!Portfolio methodsFor: 'private' stamp: 'FV 7/8/2021 17:57:40' prior: 50872667!
belongsToAPortfolio
	^ (fatherPortfolios size = 0) not.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:57:48'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:57:48'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:57:48'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:57:48'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:57:48'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:57:48'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:57:48'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:57:48'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 17:57:48'!
FAILURE!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:57:48'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:57:48'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:57:53'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:57:53'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:57:53'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:57:53'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:57:53'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:57:53'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:57:53'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:57:53'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 17:57:53'!
FAILURE!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:57:53'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:57:53'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:58:02'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:58:02'!
ERROR!
!Portfolio methodsFor: 'private' stamp: 'FV 7/8/2021 17:59:05' prior: 50872657!
fatherIncludes: aNewAccount	
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
	^(fatherPortfolios do: [:aFatherPortfolio | aFatherPortfolio fatherIncludes: aNewAccount]).
	! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 17:59:10'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 17:59:10'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:59:10'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 17:59:10'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 17:59:10'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 17:59:10'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 17:59:10'!
FAILURE!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 17:59:10'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 17:59:10'!
FAILURE!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 17:59:10'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 17:59:10'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:59:17'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 17:59:17'!
ERROR!
!Portfolio methodsFor: 'private' stamp: 'FV 7/8/2021 17:59:57' prior: 50872761!
fatherIncludes: aNewAccount	
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
	^(fatherPortfolios anySatisfy: [:aFatherPortfolio | aFatherPortfolio fatherIncludes: aNewAccount]).
	! !

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 18:00:02'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:00:05'!
FAILURE!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:00:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:00:05'!
FAILURE!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:00:08'!
FAILURE!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:00:08'!
FAILURE!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:00:16'!
taest05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfoliosCannotShareAccountsError].! !

!methodRemoval: PortfolioTest #test05 stamp: 'FV 7/8/2021 18:00:16'!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfoliosCannotShareAccountsError].!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:00:18'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:00:18'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:00:29'!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfoliosCannotShareAccountsError].! !

!methodRemoval: PortfolioTest #taest05 stamp: 'FV 7/8/2021 18:00:29'!
taest05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfoliosCannotShareAccountsError].!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:04:07' prior: 50872429!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	(aNewAccount accounts anySatisfy:[ :anAccount | (self fatherIncludes: anAccount) ] )ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	
	
	
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:04:22' prior: 50872977!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	(aNewAccount accounts anySatisfy:[ :anAccount | (self fatherIncludes: anAccount) ]) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	
	
	
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !
!AccountType methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 18:04:37'!
accounts
	self subclassResponsibility.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:05:00' overrides: 50873004!
accounts
	^listOfAccounts copy.! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:05:10' overrides: 50873004!
accounts
	^self.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:05:18'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:05:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 18:05:18'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:05:18'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 18:05:18'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:05:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 18:05:18'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:05:18'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:05:18'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:05:18'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:05:18'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:05:53' prior: 50872934!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:05:56'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:05:56'!
ERROR!
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:06:19' prior: 50872991!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	((aNewAccount accounts) anySatisfy:[ :anAccount | (self fatherIncludes: anAccount) ]) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	
	
	
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:06:26' prior: 50873076!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	((aNewAccount accounts) anySatisfy: [ :anAccount | (self fatherIncludes: anAccount) ]) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	
	
	
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:06:27'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:06:27'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 18:06:27'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:06:27'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 18:06:27'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:06:27'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 18:06:27'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:06:27'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:06:27'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:06:27'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:06:27'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:06:30'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:06:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 18:06:30'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:06:30'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 18:06:30'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:06:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 18:06:30'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:06:30'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:06:30'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:06:30'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:06:30'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:06:36'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:06:36'!
ERROR!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:07:24' prior: 50873014 overrides: 50873004!
accounts
	^OrderedCollection newWith: self.! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:07:31' prior: 50873174 overrides: 50873004!
accounts
	^OrderedCollection new with: self.! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:07:41' prior: 50873179 overrides: 50873004!
accounts
! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:09:19' prior: 50873090!
add: aNewAccount
	
	(self = aNewAccount) ifTrue: [^self error: self class portfolioCannotContainItselfError ].
	((aNewAccount listOfAccounts) anySatisfy: [ :anAccount | (self fatherIncludes: anAccount) ]) ifTrue: [^self error: self class accountAlreadyInPortfolioError].
	
	
	
	listOfAccounts add: aNewAccount.
	aNewAccount nowBelongsTo: self.! !
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:09:50'!
listOfAccounts
	^OrderedCollection new with: self.
! !
!Portfolio methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:10:34'!
listOfAccounts
	^listOfAccounts copy.! !

!methodRemoval: ReceptiveAccount #accounts stamp: 'FV 7/8/2021 18:10:46'!
accounts
!
!AccountType methodsFor: 'as yet unclassified' stamp: 'FV 7/8/2021 18:11:01'!
listOfAccounts
	self subclassResponsibility.! !

!methodRemoval: AccountType #accounts stamp: 'FV 7/8/2021 18:11:01'!
accounts
	self subclassResponsibility.!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:09'!
ERROR!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:11:09'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 18:11:09'!
ERROR!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:11:09'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 18:11:09'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:11:09'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 18:11:09'!
ERROR!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:11:09'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:11:09'!
ERROR!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:11:09'!
ERROR!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:11:09'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:23'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:23'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:26'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:26'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:26'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:26'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:27'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:27'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:27'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:11:27'!
ERROR!
!ReceptiveAccount methodsFor: 'main protocol' stamp: 'FV 7/8/2021 18:12:07' prior: 50873203 overrides: 50873214!
listOfAccounts
	^OrderedCollection with: self.
! !

!testRun: #PortfolioTest #test01 stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:12:15'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:13:26'!
test06
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !

!methodRemoval: PortfolioTest #test05 stamp: 'FV 7/8/2021 18:13:26'!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:13:29'!
test05
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:13:59' prior: 50873357!
test05
	|aPortfolioA aPortfolioB aPortfolioC anAccountA anAccountB anAccountC aPortfolio anotherPortfolio |
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:16:13' prior: 50873379!
test05
	|aPortfolioA aPortfolioB aPortfolioC aPortfolioD |
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	aPortfolioD := Portfolio new.

	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	
	
	
	self should: [] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:17:01' prior: 50873403!
test05
	|aPortfolioA aPortfolioB aPortfolioC aPortfolioD anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	aPortfolioD := Portfolio new.

	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	
	
	
	self should: [] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:17:56' prior: 50873420!
test05
	|aPortfolioA aPortfolioB aPortfolioC aPortfolioD anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	aPortfolioD := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioD add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:20:56' prior: 50873437!
test05
	|aPortfolioA aPortfolioB aPortfolioC  anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError.
		aPortfolioC add: anAccount.
		self assert: nil.
		].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:22:00' prior: 50873457!
test05
	|aPortfolioA aPortfolioB aPortfolioC  anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError.
		aPortfolioC add: anAccount.
		self assert: aPortfolioC includes: anAccount.
		].! !

!testRun: #PortfolioTest #test05 stamp: 'FV 7/8/2021 18:22:08'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:22:48' prior: 50873477!
test05
	|aPortfolioA aPortfolioB aPortfolioC  anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError.
		aPortfolioC add: anAccount.
		self assert: aPortfolioC includes: anAccount.
		].! !

!methodRemoval: PortfolioTest #test04 stamp: 'FV 7/8/2021 18:22:55'!
test04
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	aPortfolio add: anotherPortfolio.
	
	self should: [anotherPortfolio add: anAccount.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError].!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:24:20'!
test01CannotAddAccountTwiceToSamePortfolio
	|aPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	
	self should: [aPortfolio add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !

!methodRemoval: PortfolioTest #test01 stamp: 'FV 7/8/2021 18:24:20'!
test01
	|aPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anAccount.
	
	self should: [aPortfolio add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:25:55'!
test02CannotAddAnAccountAlreadyIncludedOnAnAddedPortfolio
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anAccount.
	
	self should: [aPortfolio add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !

!methodRemoval: PortfolioTest #test02 stamp: 'FV 7/8/2021 18:25:55'!
test02
	|aPortfolio anotherPortfolio anAccount|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	
	aPortfolio add: anotherPortfolio.
	anotherPortfolio add: anAccount.
	
	self should: [aPortfolio add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:26:58'!
test03APortfolioCannotContainItself
	|aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].! !

!methodRemoval: PortfolioTest #test03 stamp: 'FV 7/8/2021 18:26:58'!
test03
	|aPortfolio |
	
	aPortfolio := Portfolio new.
	
	self should: [aPortfolio add: aPortfolio.] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio portfolioCannotContainItselfError].!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:28:04'!
test04CannotAddAnAccountIfItsChildFromAFatherPortfolio
	|aPortfolioA aPortfolioB aPortfolioC  anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError.
		aPortfolioC add: anAccount.
		self assert: aPortfolioC includes: anAccount.
		].! !

!methodRemoval: PortfolioTest #test05 stamp: 'FV 7/8/2021 18:28:04'!
test05
	|aPortfolioA aPortfolioB aPortfolioC  anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError.
		aPortfolioC add: anAccount.
		self assert: aPortfolioC includes: anAccount.
		].!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:28:32'!
test05CannotAddAnAccountIfItsChildFromAFatherPortfolio
	|aPortfolioA aPortfolioB aPortfolioC  anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError.
		aPortfolioC add: anAccount.
		self assert: aPortfolioC includes: anAccount.
		].! !
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:29:25' prior: 50873618!
test04CannotAddAnAccountIfItsChildFromAFatherPortfolio
	|aPortfolioA aPortfolioB anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError.].! !

!testRun: #PortfolioTest #test04CannotAddAnAccountIfItsChildFromAFatherPortfolio stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test01CannotAddAccountTwiceToSamePortfolio stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test02CannotAddAnAccountAlreadyIncludedOnAnAddedPortfolio stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioCannotContainItself stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test04CannotAddAnAccountIfItsChildFromAFatherPortfolio stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test05CannotAddAnAccountIfItsChildFromAFatherPortfolio stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'FV 7/8/2021 18:29:28'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:29:28'!
PASSED!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:29:50'!
test05CannotAddAnAccountIfItsChildFromAFatherPortfolioWhenPortfolioHaveMultipleFathers
	|aPortfolioA aPortfolioB aPortfolioC  anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError.
		aPortfolioC add: anAccount.
		self assert: aPortfolioC includes: anAccount.
		].! !

!methodRemoval: PortfolioTest #test05CannotAddAnAccountIfItsChildFromAFatherPortfolio stamp: 'FV 7/8/2021 18:29:50'!
test05CannotAddAnAccountIfItsChildFromAFatherPortfolio
	|aPortfolioA aPortfolioB aPortfolioC  anAccount|
	
	aPortfolioA := Portfolio new.
	aPortfolioB := Portfolio new.
	aPortfolioC := Portfolio new.
	anAccount  := ReceptiveAccount new.
	
	aPortfolioA add: aPortfolioB.
	aPortfolioC add: aPortfolioB.
	aPortfolioA add: anAccount.
	
	
	
	self should: [aPortfolioB add: anAccount] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | 
		self assert: anError messageText equals: AccountType accountAlreadyInPortfolioError.
		aPortfolioC add: anAccount.
		self assert: aPortfolioC includes: anAccount.
		].!
!PortfolioTest methodsFor: 'extra tests' stamp: 'FV 7/8/2021 18:30:28'!
test06CannotAddAPortfolioToAnotherOneIfTheyShareAccounts
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].! !

!methodRemoval: PortfolioTest #test06 stamp: 'FV 7/8/2021 18:30:28'!
test06
	|aPortfolio anotherPortfolio anAccountA anAccountB anAccountC|
	
	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	anAccountA := ReceptiveAccount new.
	anAccountB := ReceptiveAccount new.
	anAccountC := ReceptiveAccount new.
	
	aPortfolio add: anAccountA.
	aPortfolio add: anAccountB.
	
	anotherPortfolio add: anAccountB.
	anotherPortfolio add: anAccountC.
	
	
	
	self should: [aPortfolio add: anotherPortfolio] 
		raise: Error - MessageNotUnderstood 
	withExceptionDo: [:anError | self assert: anError messageText equals: Portfolio accountAlreadyInPortfolioError].!
!Portfolio methodsFor: 'private' stamp: 'FV 7/8/2021 18:31:52' prior: 50872809!
fatherIncludes: aNewAccount	
	(self belongsToAPortfolio) ifFalse: [self includes: aNewAccount].
	^(fatherPortfolios anySatisfy: [:aFatherPortfolio | aFatherPortfolio fatherIncludes: aNewAccount]).
	! !

!testRun: #PortfolioTest #test01CannotAddAccountTwiceToSamePortfolio stamp: 'FV 7/8/2021 18:31:54'!
FAILURE!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:31:54'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:31:54'!
PASSED!

!testRun: #PortfolioTest #test02CannotAddAnAccountAlreadyIncludedOnAnAddedPortfolio stamp: 'FV 7/8/2021 18:31:54'!
FAILURE!

!testRun: #PortfolioTest #test03APortfolioCannotContainItself stamp: 'FV 7/8/2021 18:31:54'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:31:54'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:31:54'!
PASSED!

!testRun: #PortfolioTest #test04CannotAddAnAccountIfItsChildFromAFatherPortfolio stamp: 'FV 7/8/2021 18:31:54'!
FAILURE!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:31:54'!
PASSED!

!testRun: #PortfolioTest #test05CannotAddAnAccountIfItsChildFromAFatherPortfolioWhenPortfolioHaveMultipleFathers stamp: 'FV 7/8/2021 18:31:54'!
FAILURE!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:31:54'!
PASSED!

!testRun: #PortfolioTest #test06CannotAddAPortfolioToAnotherOneIfTheyShareAccounts stamp: 'FV 7/8/2021 18:31:54'!
FAILURE!
!Portfolio methodsFor: 'private' stamp: 'FV 7/8/2021 17:59:57' prior: 50873836!
fatherIncludes: aNewAccount	
	(self belongsToAPortfolio) ifFalse: [^listOfAccounts anySatisfy: [:anAccount| anAccount includes: aNewAccount]].
	^(fatherPortfolios anySatisfy: [:aFatherPortfolio | aFatherPortfolio fatherIncludes: aNewAccount]).
	! !
!Portfolio methodsFor: 'private' stamp: 'FV 7/8/2021 18:32:17' prior: 50873890!
fatherIncludes: aNewAccount	
	(self belongsToAPortfolio) ifFalse: [^self includes: aNewAccount ].
	^(fatherPortfolios anySatisfy: [:aFatherPortfolio | aFatherPortfolio fatherIncludes: aNewAccount]).
	! !

!testRun: #PortfolioTest #test01CannotAddAccountTwiceToSamePortfolio stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test02CannotAddAnAccountAlreadyIncludedOnAnAddedPortfolio stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioCannotContainItself stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test04CannotAddAnAccountIfItsChildFromAFatherPortfolio stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test05CannotAddAnAccountIfItsChildFromAFatherPortfolioWhenPortfolioHaveMultipleFathers stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test06CannotAddAPortfolioToAnotherOneIfTheyShareAccounts stamp: 'FV 7/8/2021 18:32:19'!
PASSED!

!testRun: #PortfolioTest #test01CannotAddAccountTwiceToSamePortfolio stamp: 'FV 7/8/2021 18:32:21'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:32:21'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:32:21'!
PASSED!

!testRun: #PortfolioTest #test02CannotAddAnAccountAlreadyIncludedOnAnAddedPortfolio stamp: 'FV 7/8/2021 18:32:21'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioCannotContainItself stamp: 'FV 7/8/2021 18:32:22'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:32:22'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:32:22'!
PASSED!

!testRun: #PortfolioTest #test04CannotAddAnAccountIfItsChildFromAFatherPortfolio stamp: 'FV 7/8/2021 18:32:22'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:32:22'!
PASSED!

!testRun: #PortfolioTest #test05CannotAddAnAccountIfItsChildFromAFatherPortfolioWhenPortfolioHaveMultipleFathers stamp: 'FV 7/8/2021 18:32:22'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:32:22'!
PASSED!

!testRun: #PortfolioTest #test06CannotAddAPortfolioToAnotherOneIfTheyShareAccounts stamp: 'FV 7/8/2021 18:32:22'!
PASSED!
!AccountType methodsFor: 'private' stamp: 'FV 7/8/2021 18:34:12'!
balance
	self subclassResponsibility.! !
!AccountType methodsFor: 'private' stamp: 'FV 7/8/2021 18:34:26'!
hasRegistered: aaa
	self subclassResponsibility.! !
!AccountType methodsFor: 'private' stamp: 'FV 7/8/2021 18:34:44' prior: 50874002!
hasRegistered: aTransaction
	self subclassResponsibility.! !
!AccountType methodsFor: 'private' stamp: 'FV 7/8/2021 18:34:58'!
transactions
	self subclassResponsibility.! !

!testRun: #PortfolioTest #test01CannotAddAccountTwiceToSamePortfolio stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test01TheBalanceOfAnEmptyPortfolioIs0 stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioCanCalculateBalanceOfItsAccounts stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test02CannotAddAnAccountAlreadyIncludedOnAnAddedPortfolio stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioCannotContainItself stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioDoesNotRegisterTransaccionsOutsideOfIt stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioCanRegisterTransactionsOfItsAccounts stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test04CannotAddAnAccountIfItsChildFromAFatherPortfolio stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test05APortfolioCanShowAllOfItsTransactions stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test05CannotAddAnAccountIfItsChildFromAFatherPortfolioWhenPortfolioHaveMultipleFathers stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test06AnEmptyPortfolioTransactionsListIsEmpty stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #PortfolioTest #test06CannotAddAPortfolioToAnotherOneIfTheyShareAccounts stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test08TransferIncreasesBalanceOnReceiverAccountAndDecreasesOnSenderAccount stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test09BothAccountsRegisterTheirPartOfTransfer stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferKnowsItsValue stamp: 'FV 7/8/2021 18:36:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test11BothTransferPartsKnowTheirCounterpart stamp: 'FV 7/8/2021 18:36:44'!
PASSED!